{"version":3,"sources":["pages/Partners/Partners.module.scss","pages/Shops/ShopDetails/ShopDetails.module.scss","components/UI/MyTable/MyTableForm/MyTableForm.module.scss","components/UI/MyTable/TableInput/TableInput.module.scss","components/UI/MyTable/DetailsTableRow/DetailsTableRow.module.scss","pages/Accounts/Accounts.module.scss","components/Login/Login.module.scss","components/UI/MyInput/MyInput.module.scss","components/UI/MyTable/ClickableTH/ClickableTH.module.scss","components/UI/MyTable/StatusTD/StatusTD.module.scss","pages/Partners/PartnerAddition/PartnerAddition.module.scss","components/UI/MyTable/TableTextArea/TableTextArea.module.scss","components/Header/Header.module.scss","components/Spinner/Spinner.module.scss","components/MyAlert/FailureAlert/FailureAlert.module.scss","components/UI/MyCollapse/MyCollapse.module.scss","pages/News/News.module.scss","pages/Partners/PartnerUpdate/PartnerUpdate.module.scss","components/Blocks/AddButtonAndPagination/AddButtonAndPagination.module.scss","components/SideMenu/SideMenu.module.scss","components/Footer/Footer.module.scss","img/logo-white-text.svg","components/MyAlert/SuccessAlert/SuccessAlert.module.scss","components/UI/DivTable/DivTableRow/DivTableRow.module.scss","components/UI/DivTable/DivTableTD/DivTableTD.module.scss","components/UI/DivTable/DivTableTH/DivTableTH.module.scss","components/UI/MyTable/TableMultiselect/TableMultiselect.module.scss","components/Blocks/FlexBlock/FlexBlock.module.scss","components/UI/MyButton/MyButton.module.scss","components/UI/DivTable/DivTable.module.scss","components/UI/MyTable/MyTable.module.scss","components/UI/MyTable/HoverTable/HoverTable.module.scss","pages/News/NewsCreation/NewsCreation.module.scss","pages/News/NewsDetails/NewsDetails.module.scss","pages/Partners/PartnerDetails/PartnerDetails.module.scss","components/Main/Main.module.scss","components/UI/MyDropDown/MyDropDown.module.scss","components/UI/MyLink/MyLink.module.scss","redux/actions/loginActions.js","components/Footer/Footer.jsx","configs/modified-axios.js","utils/utils.js","redux/actions/actionTypes.js","components/Header/Header.jsx","components/Spinner/Spinner.jsx","components/Login/Login.jsx","components/MyAlert/FailureAlert/FailureAlert.jsx","components/MyAlert/SuccessAlert/SuccessAlert.jsx","components/UI/MyTable/MyTableForm/MyTableForm.jsx","components/UI/DivTable/DivTableRow/DivTableRow.jsx","components/UI/DivTable/DivTableTD/DivTableTD.jsx","components/UI/DivTable/DivTableTH/DivTableTH.jsx","components/UI/MyInput/MyInput.jsx","components/UI/MyTable/TableInput/TableInput.jsx","components/UI/MyTable/TableMultiselect/TableMultiselect.jsx","hooks/useAlert.js","hooks/useFormValiation.js","redux/actions/accountActions.js","redux/actions/roleActions.js","pages/Accounts/AccountCreation/AccountCreation.jsx","components/Blocks/FlexBlock/FlexBlock.jsx","components/UI/MyButton/MyButton.jsx","components/UI/MyButton/BlockingButton/BlockingButton.jsx","components/UI/MyTable/DetailsTableRow/DetailsTableRow.jsx","components/UI/DivTable/DivTable.jsx","components/UI/MyTable/MyTable.jsx","pages/Accounts/AccountDetails/AccountDetails.jsx","components/UI/MyTable/TableNotFound/TableNotFound.jsx","components/UI/MyTable/ClickableTH/ClickableTH.jsx","components/UI/MyTable/HoverTable/HoverTable.jsx","components/UI/MyTable/StatusTD/StatusTD.jsx","components/UI/MyCollapse/MyCollapse.jsx","pages/Accounts/Accounts.jsx","pages/Accounts/AccountsUpdate/AccountsUpdate.jsx","redux/actions/acquirerActions.js","pages/Acquirers/AcquirerAddition/AcquirerAddition.jsx","utils/constants.js","pages/Acquirers/Acquirers.jsx","pages/Acquirers/AcquirersDetails/AcquirersDetails.jsx","pages/Acquirers/AcquirersUpdate/AcquirersUpdate.jsx","pages/HomePage/HomePage.jsx","utils/mock-news.js","redux/actions/blogActions.js","pages/News/News.jsx","pages/News/NewsCreation/NewsCreation.jsx","pages/News/NewsDetails/NewsDetails.jsx","redux/actions/partnerAcquirersActions.js","pages/PartnerAcquierers/PartnerAcquierers.jsx","pages/PartnerAcquierers/PartnerAcquierersAddition/PartnerAcquierersAddition.jsx","pages/PartnerAcquierers/PartnerAcquierersDetails/PartnerAcquierersDetails.jsx","pages/PartnerAcquierers/PartnerAcquierersUpdate/PartnerAcquierersUpdate.jsx","redux/actions/partnerActions.js","components/UI/MyTable/TableTextArea/TableTextArea.jsx","pages/Partners/PartnerAddition/PartnerAddition.jsx","redux/actions/shopActions.js","pages/Partners/PartnerDetails/PartnerDetails.jsx","pages/Partners/Partners.jsx","pages/Partners/PartnerUpdate/PartnerUpdate.jsx","pages/Roles/RoleAddition/RoleAddition.jsx","pages/Roles/RoleDetails/RoleDetails.jsx","components/Blocks/AddButtonAndPagination/AddButtonAndPagination.jsx","pages/Roles/Roles.jsx","pages/Roles/RoleUpdate/RoleUpdate.jsx","redux/actions/terminalActions.js","pages/Shops/ShopDetails/ShopDetails.jsx","pages/Shops/Shops.jsx","pages/Shops/ShopsAddition/ShopsAddition.jsx","pages/Shops/ShopUpdate/ShopUpdate.jsx","pages/Terminals/TerminalDetails/TerminalDetails.jsx","pages/Terminals/Terminals.jsx","pages/Terminals/TerminalsAddition/TerminalsAddition.jsx","pages/Terminals/TerminalUpdate/TerminalUpdate.jsx","components/Main/Main.jsx","components/UI/MyDropDown/MyDropDown.jsx","components/UI/MyLink/MyLink.jsx","components/SideMenu/SideMenu.jsx","containers/Layout/Layout.jsx","components/ErrorBoundary/ErrorBoundary.jsx","redux/reducers/layoutReducer.js","redux/reducers/loginReducer.js","redux/reducers/blogReducer.js","redux/reducers/accountReducer.js","redux/reducers/partnerReducer.js","redux/reducers/acquirerReducer.js","redux/reducers/shopReducer.js","redux/reducers/terminalReducer.js","redux/reducers/partnerAcquirersReducer.js","redux/reducers/roleReducer.js","redux/reducers/accountRolesReducer.js","redux/reducers/rootReducer.js","redux/store.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","timer","Footer","props","useState","date","setDate","useEffect","currentYear","Date","getFullYear","className","styles","accountAxios","axios","create","baseURL","rolesAxios","getAccessToken","localStorage","getItem","setAccessToken","token","setItem","setRefreshToken","setAccessExpiry","seconds","now","Number","getAccessExpiry","setRefreshExpiry","getTrimmedValues","values","filterData","Object","keys","forEach","key","data","trim","limit","priority_to","priority_from","makeRes","ok","message","refreshToken","dispatch","a","refToken","myAxios","post","refresh_token","res","console","log","status","result","authData","setLoginErrors","setIsLoggedIn","autoRefresh","logout","removeItem","clearTimeout","type","refresh","tokenTime","delay","Math","floor","setTimeout","setIsAdmin","isAdmin","errors","setLoginLoading","connect","state","user","login","isOpen","toggle","Header","Navbar","color","dark","expand","NavbarBrand","tag","Link","to","src","whiteLogo","alt","NavbarToggler","onClick","Collapse","navbar","Nav","NavbarText","Spinner","cls","join","loading","logInThunk","loginData","includes","email","password","controls","setControls","onControlChange","e","control","target","name","value","errorMessage","err","test","spinner","Login","formWrapper","Form","UncontrolledAlert","FormGroup","Label","for","Input","id","placeholder","onChange","Button","disabled","FailureAlert","alertHeading","bottomMessage","visible","setVisible","Alert","mainMessage","SuccessAlert","onDismiss","MyTableForm","onSubmit","children","isValid","buttonText","resetForm","onReset","buttonsWrap","button","DivTableRow","DivTableTD","DivTableTH","MyInput","inputStyles","errorText","label","inputCls","input","handleInputChange","error","TableInput","column","DivTableTDcls","DivTableTHcls","inputId","setInputId","String","random","slice","htmlFor","TableMultiselect","multiRef","matches","useMediaQuery","emptyRecordMsg","ref","style","multiselectContainer","margin","marginLeft","paddingLeft","useAlert","successAlertVisible","setSuccessAlertVisible","successMessage","setSuccessMessage","failureAlertVisible","setFailureAlertVisible","failureMessage","setFailureMessage","checkRes","withSuccessAlert","useFormAndValidation","setValues","setErrors","setIsValid","useCallback","newValues","newErrors","newIsValid","handleChange","validationMessage","closest","checkValidity","getAccountDetailsThunk","ids","setAccountsLoading","access_token","alertAccountsFailure","details","setAccountDetails","accounts","updateAccountThunk","accountData","alertAccountsSuccess","update","setAccounts","getRolesThunk","setRolesLoading","alertRolesFailure","roles","setRoles","getRoleDetailsThunk","setRoleDetails","alertRolesSuccess","createAccountThunk","inputData","history","useHistory","rolesOptions","setRolesOptions","then","catch","AccountCreation","Breadcrumb","listTag","BreadcrumbItem","NavLink","exact","active","evt","preventDefault","push","required","minLength","maxLength","phone_number","options","displayValue","onSelect","selectedList","jsonKey","onRemove","removedItem","map","i","singleSelect","FlexBlock","MyButton","BlockingButton","onActivate","onBlock","blocked","DetailsTableRow","span","undefined","checkData","DivTable","MyTable","useParams","uuid","AccountDetails","deleted","created","toLocaleDateString","verification_required","suspended_until","window","confirm","TableNotFound","ClickableTH","thisField","sortField","order","arrowUp","arrowDown","HoverTable","Table","hover","StatusTD","notActive","MyCollapse","setIsOpen","getAccountsThunk","setOrder","offset","setOffset","setSortField","changeOrder","field","sort_by","sortedData","Accounts","width","min","max","length","account","tr","scope","tableBotton","Pagination","aria-label","PaginationItem","PaginationLink","previous","href","next","updateValues","parent_id","AccountsUpdate","goBack","getAcquirersThunk","getAcquirersSuccess","acquirers","alertAcquirersFailure","getAcquirerDetailsThunk","uuids","setAcquirerDetails","updateAcquirerThunk","acquirerData","alertAcquirersSuccess","createAcquirerThunk","checked","setChecked","AcquirerAddition","alias","operationsOptions","activeOptions","currencyOptions","cardBrandsOptions","useRef","Acquirers","restValues","current","resetSelectedValues","item","deleteAcquirersThunk","delete","AcquirersDetails","AcquirersUpdate","pattern","HomePage","mockNews","image","short","full","setNewsLoading","setNewsFailure","setNews","news","setNewsDetails","blog","getNewsThunk","News","ListGroup","ListGroupItem","listItem","createNewsThunk","newsData","setShort","setFull","picture","setPicture","fileInput","NewsCreation","files","innerRef","rows","getNewsDetailsThunk","find","updateNewsDetailsThunk","deleteNewsThunk","match","params","NewsDetails","getPartnerAcquirerDetailsThunk","setPartnerAcquirerDetails","alertPartnerAcquirersFailure","getPartnerAcquirersSuccess","partnerAcquirers","alertPartnerAcquirersSuccess","getPartnerAcquirersThunk","partnerId","activeRef","card_brands","partner_uuid","PartnerAcquierers","selectedItem","bank","acquirer_uuid","priority","toUpperCase","createPartnerAcquirerThunk","avtive","bankOptions","setBankOptions","PartnerAcquierersAddition","partnerBankData","deletePartnerAcquirersThunk","PartnerAcquierersDetails","updatePartnerAcquirerThunk","partnerData","bankPreselect","setBankPreselect","activePreselect","setActivePreselect","cardBrandsPreselect","setCardBrandsPreselect","preselectedBank","isActive","preselectedCardBrands","filter","PartnerAcquierersUpdate","selectedValues","getPartnerDetailsThunk","setPartnerDetails","partners","alertPartnersFailure","updatePartnerThunk","alertPartnersSuccess","getPartnersSuccess","TableTextArea","createPartnerThunk","PartnerAddition","handleContactsChange","contacts","inn","title","contact_name","contact_person_position","contact_email","contact_phone","other_contact_info","getShopDetailsThunk","setShopDetails","stores","alertShopsFailure","updateShopThunk","shopData","alertShopsSuccess","getShopsSuccess","shops","deletePartnersThunk","getShopsThunk","PartnerDetails","site","shop","getPartnersThunk","Partners","flexInputs","PartnerUpdate","cols","createRoleThunk","RoleAddition","RoleDetails","AddButtonAndPagination","onPreviousClick","onNextClick","Roles","updateRoleThunk","roleData","RoleUpdate","getTerminalDetailsThunk","setTerminalDetails","terminals","alertTerminalsFailure","updateTerminalThunk","terminalData","alertTerminalsSuccess","getTerminalsSuccess","deleteShopsThunk","getTerminalsThunk","bankRef","blockedRef","operationsdRef","currencyRef","partner","setPartner","store_uuid","onSingleSelect","currentPartner","ShopDetails","bank_details","legal_entity","kpp","ogrn","legal_address","contract_number","settings","callback_url","callback_key","successful_payment_redirect_url","failure_payment_redirect_url","email_for_reports","operations","flexInputsWrap","flexMultiInputs","currency","currency_num","currentBank","code","Shops","createShopThunk","ShopsAddition","handleBankDetailsChange","handleSettingsChange","ShopUpdate","deleteTerminalsThunk","partnerUUID","setPartnerUUID","shopName","setShopName","setBank","config","config_id","currentShop","TerminalDetails","Terminals","createTerminalThunk","shopId","TerminalsAddition","bank_account_number","operationsPreselect","setOperationsPreselect","currencyPreselect","setcurrencyPreselect","rest","preselectedOperations","preselectedCurrency","TerminalUpdate","Main","path","component","MyDropDown","toString","UncontrolledCollapse","toggler","MyLink","RRNavLink","activeStyle","fontWeight","SideMenu","hiddenMenu","vertical","NavItem","isLoggedIn","isExpired","Layout","ErrorBoundary","hasError","errorInfo","this","React","Component","initialState","menuIsOpened","success","accountRoles","combineReducers","layout","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","App","basename","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,YAAc,8BAA8B,WAAa,6BAA6B,cAAgB,gCAAgC,WAAa,6BAA6B,WAAa,6BAA6B,OAAS,yBAAyB,UAAY,8B,mBCAhUD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,eAAiB,oCAAoC,WAAa,gCAAgC,cAAgB,mCAAmC,cAAgB,qC,sBCAtOD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,YAAc,iCAAiC,OAAS,8B,gBCAzHD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,YAAc,gCAAgC,QAAU,4BAA4B,OAAS,6B,gBCA3JD,EAAOC,QAAU,CAAC,gBAAkB,yCAAyC,WAAa,oCAAoC,KAAO,8BAA8B,OAAS,kC,gBCA5KD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,GAAK,qBAAqB,WAAa,6BAA6B,YAAc,gC,oBCA1ID,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,YAAc,2BAA2B,QAAU,yB,gBCAlGD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,MAAQ,yB,gBCA5FD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,UAAY,+BAA+B,QAAU,+B,gBCAtHD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,OAAS,yBAAyB,UAAY,8B,gBCAtGD,EAAOC,QAAU,CAAC,gBAAkB,yCAAyC,QAAU,iCAAiC,cAAgB,yC,gBCAxID,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,WAAa,kCAAkC,WAAa,oC,kBCAnID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,yB,kBCA3DD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAc,+B,gBCAnED,EAAOC,QAAU,CAAC,aAAe,mCAAmC,YAAc,oC,gBCAlFD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,OAAS,6B,gBCAvED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,SAAW,yB,gBCAvDD,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,QAAU,iC,kCCAjFD,EAAOC,QAAU,CAAC,uBAAyB,uDAAuD,WAAa,6C,kCCA/GD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,YAAc,8BAA8B,MAAQ,wBAAwB,WAAa,+B,+BCAjJD,EAAOC,QAAU,CAAC,OAAS,yB,gBCD3BD,EAAOC,QAAU,IAA0B,6C,iBCC3CD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,YAAc,mC,gBCAhCD,EAAOC,QAAU,CAAC,WAAa,iC,gBCA/BD,EAAOC,QAAU,CAAC,WAAa,iC,iBCA/BD,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,YAAc,sCAAsC,QAAU,oC,kCCA9ID,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,SAAW,6B,kCCA7BD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,QAAU,2B,oDCA5BD,EAAOC,QAAU,CAAC,WAAa,iC,4HCA/BD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,YAAc,mC,wFCAhCD,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,aAAe,uC,kLCAzFD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,WAAa,iC,gBCA/BD,EAAOC,QAAU,CAAC,OAAS,yB,2KCMvBC,E,gGCaWC,EAhBA,SAACC,GAAW,IAAD,EAEEC,qBAFF,mBAEfC,EAFe,KAETC,EAFS,KAStB,OALAC,qBAAU,WACN,IAAMC,GAAc,IAAIC,MAAOC,cAC/BJ,EAAQE,KACT,IAGC,yBAAKG,UAAWC,IAAOV,QACnB,kSAA6DG,K,8FCb5DQ,EAAeC,IAAMC,OAAO,CACrCC,QAAS,+CAKAC,EAAaH,IAAMC,OAAO,CACnCC,QAAS,+CAMEF,MAAMC,OAAO,CAKxBC,QAAS,mDCpBAE,EAAiB,WAC5B,OAAOC,aAAaC,QAAQ,iBAGjBC,EAAiB,SAACC,GAC7BH,aAAaI,QAAQ,eAAgBD,IAO1BE,EAAkB,SAACF,GAC9B,OAAOH,aAAaI,QAAQ,gBAAiBD,IAGlCG,EAAkB,SAACC,GAC9BP,aAAaI,QAAQ,0BAA2Bd,KAAKkB,MAA0B,IAAlBC,OAAOF,KAEzDG,EAAkB,WAC5B,OAAOD,OAAOT,aAAaC,QAAQ,6BAGzBU,EAAmB,SAACJ,GAC/BP,aAAaI,QAAQ,2BAA4Bd,KAAKkB,MAA0B,IAAlBC,OAAOF,KAc1DK,EAAmB,SAACC,GAC/B,IAAMC,EAAa,GAyBjB,OAvBAC,OAAOC,KAAKH,GAAQI,SAAQ,SAAAC,GAC1B,IAAMC,EAAON,EAAOK,GACA,kBAATC,EACLA,EAAKC,SACPN,EAAWI,GAAOC,EAAKC,QAGzBN,EAAWI,GAAOC,KAMlBL,EAAWO,QACbP,EAAWO,MAAQZ,OAAOK,EAAWO,QAEnCP,EAAWQ,cACbR,EAAWQ,YAAcb,OAAOK,EAAWQ,cAEzCR,EAAWS,gBACXT,EAAWS,cAAgBd,OAAOK,EAAWS,gBAG1CT,GAaEU,EAAU,WAA0C,IAAzCC,IAAwC,yDAA/BC,EAA+B,uDAAvB,6CAAWP,EAAY,uDAAP,GACvD,MAAO,CACLM,KACAC,UACAP,SH7BSQ,EAAe,SAAfA,IACX,8CAAO,WAAOC,GAAP,mBAAAC,EAAA,6DACCC,EG7CD9B,aAAaC,QAAQ,iBH4CrB,kBAGe8B,EAAQC,KAAR,qBAAmC,CAACC,cAAeH,IAHlE,OAGGI,EAHH,OAIHC,QAAQC,IAAIF,GACO,MAAfA,EAAIG,QAAkBH,EAAIf,KAAKmB,QAC3BC,EAAWL,EAAIf,KAAKmB,OAC1BV,EAASY,EAAe,OAExBtC,EAAeqC,EAAQ,cACvBjC,EAAgBiC,EAAQ,yBACxBlC,EAAgBkC,EAAQ,eACxB5B,EAAiB4B,EAAQ,0BAEzBX,EAASa,GAAc,EAAMF,IAC7BG,GAAY,kBAAMd,EAASD,UAG3BC,EAASe,KACTR,QAAQC,IAAI,uBAnBX,gDAsBHD,QAAQC,IAAR,MAtBG,yDAAP,uDA6BWO,EAAS,WAGpB,OGrDA3C,aAAa4C,WAAW,gBACxB5C,aAAa4C,WAAW,2BACxB5C,aAAa4C,WAAW,iBACxB5C,aAAa4C,WAAW,4BHiDxBC,aAAa/D,GACN,CACLgE,KI5EmB,YJgFVJ,EAAc,SAACK,GAC1BZ,QAAQC,IAAI,eAAiBtD,GAC7B+D,aAAa/D,GACb,IAAMkE,EAAYtC,IACZuC,EAAQC,KAAKC,MAAOH,EAAY1D,KAAKkB,OAC3C1B,EAAQsE,YAAW,WACjBL,MACCE,IAIQR,EAAgB,SAACJ,EAAQE,GAEpC,MAAO,CACLO,KIlG4B,mBJmG5BT,SACAE,aAISc,EAAa,SAACC,GACzB,MAAO,CACLR,KIvGwB,eJwGxBQ,YAISd,EAAiB,SAACe,GAC7B,MAAO,CACLT,KIhH4B,mBJiH5BS,WAISC,EAAkB,SAACnB,GAC9B,MAAO,CACLS,KItH6B,oBJuH7BT,W,kCK/EWoB,eANS,SAACC,GACrB,MAAO,CACHC,KAAMD,EAAME,MAAMD,QAIc,CAAChB,UAA1Bc,EAhCA,SAAC,GAAoC,IAAnCE,EAAkC,EAAlCA,KAAMhB,EAA4B,EAA5BA,OAAQkB,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OAErC,OACE,yBAAKtE,UAAWC,IAAOsE,QACrB,kBAACC,EAAA,EAAD,CAAQC,MAAM,OAAOC,MAAI,EAACC,OAAO,MAC/B,kBAACC,EAAA,EAAD,CAAaC,IAAKC,IAAMC,GAAG,KACzB,yBAAKC,IAAKC,IAAWC,IAAI,eAE3B,kBAACC,EAAA,EAAD,CAAeC,QAASd,IACxB,kBAACe,EAAA,EAAD,CAAUhB,OAAQA,EAAQiB,QAAM,GAC9B,kBAACC,EAAA,EAAD,CAAKvF,UAAU,UAAUsF,QAAM,IAI/B,kBAACE,EAAA,EAAD,CAAYxF,UAAU,QAAtB,6EAA2C,gCAASmE,GAApD,KACA,kBAACqB,EAAA,EAAD,CACEJ,QAASjC,EAETnD,UAAWC,IAAOkD,QAHpB,wC,4FCbKsC,GAdC,SAAC,GAAiB,IAAhBzF,EAAe,EAAfA,UAEV0F,EAAM,CACVzF,KAAOwF,QACPzF,GAGA,OACI,yBAAKA,UAAW0F,EAAIC,KAAK,MACtB,yBAAK3F,UAAWC,KAAO,gBAAgB,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,iC,oBCqH5JgE,gBATS,SAACC,GACvB,MAAO,CACL0B,QAAS1B,EAAME,MAAMwB,QACrB7B,OAAQG,EAAME,MAAML,OACpBD,QAASI,EAAME,MAAMN,WAKe,CAAC+B,WPzHf,SAACC,GACzB,8CAAO,WAAO1D,GAAP,mBAAAC,EAAA,6DACCV,EAAO,GACbJ,OAAOC,KAAKsE,GAAWrE,SAAQ,SAAAC,GACzBoE,EAAUpE,GAAKE,SACjBD,EAAKD,GAAOoE,EAAUpE,GAAKE,WAG/BQ,EAAS4B,GAAgB,IAPpB,kBASezB,EAAQC,KAAR,aAA2Bb,GAT1C,OASGe,EATH,OAUHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,QAAkBH,EAAIf,KAAKmB,OAC3BJ,EAAIf,KAAKmB,OAAT,WAA8BiD,SAAS,UACzC3D,EAASyB,GAAW,IACdd,EAAWL,EAAIf,KAAKmB,OAC1BV,EAASY,EAAe,OAExBtC,EAAeqC,EAAQ,cACvBjC,EAAgBiC,EAAQ,yBACxBlC,EAAgBkC,EAAQ,eACxB5B,EAAiB4B,EAAQ,0BAEzBX,EAASa,GAAc,EAAMF,IAC7BG,GAAY,kBAAMd,EAASD,SAG3BC,EAASY,EAAe,CAAC,wGAG7BZ,EAASY,EAAeN,EAAIf,KAAKoC,SACjCpB,QAAQC,IAAIF,EAAIf,KAAKoC,SA/BpB,kDAkCH3B,EAASY,EAAe,CAAC,wJACzBL,QAAQC,IAAR,MAnCG,yBAqCHR,EAAS4B,GAAgB,IArCtB,6EAAP,wDOwHaC,EA1HD,SAAC,GAA4C,IAA3C4B,EAA0C,EAA1CA,WAAYD,EAA8B,EAA9BA,QAAS7B,EAAqB,EAArBA,OAAqB,KAAbD,QAEXrE,mBAAS,CACvCuG,MAAO,GACPC,SAAU,GACV7B,MAAO,MAL+C,mBAEjD8B,EAFiD,KAEvCC,EAFuC,KAalDC,EAAkB,SAACC,GACvB,IAAMC,EAAUD,EAAEE,OAClBJ,GAAY,SAACD,GACX,OAAO,2BACFA,GADL,kBAEGI,EAAQE,KAAOF,EAAQG,YAW1BC,EAAe,oIAIf3C,GACFA,EAAOtC,SAAQ,SAACkF,GACV,0BAA0BC,KAAKD,GACjCD,EAAe,kFACN,yBAAyBE,KAAKD,GACvCD,EAAe,0IACN,qGAAqBE,KAAKD,GACnCD,EAAe,oGACN,sJAA8BE,KAAKD,KAC5CD,EAAe,yJA1CmC,IAgDjDV,EAA0BE,EAA1BF,MAAOC,EAAmBC,EAAnBD,SAAU7B,EAAS8B,EAAT9B,MAIxB,OAAIwB,EACK,kBAAC,GAAD,CAAS5F,UAAWC,KAAO4G,UAIlC,yBAAK7G,UAAWC,KAAO6G,OACrB,yBAAK9G,UAAWC,KAAO8G,aACrB,kBAACC,EAAA,EAAD,KACE,+CACAjD,GACA,kBAACkD,EAAA,EAAD,CAAmBxC,MAAO,UACvBiC,GAGH,kBAACQ,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,SAAX,SACA,kBAACC,GAAA,EAAD,CAEE/D,KAAK,OACLkD,KAAK,QACLc,GAAG,QACHC,YAAY,QACZd,MAAOrC,EACPoD,SAAUpB,KAGd,kBAACc,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,SAAX,SACA,kBAACC,GAAA,EAAD,CAEE/D,KAAK,QACLkD,KAAK,QACLc,GAAG,QACHC,YAAY,QACZd,MAAOT,EACPwB,SAAUpB,KAGd,kBAACc,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,YAAX,wCACA,kBAACC,GAAA,EAAD,CAEE/D,KAAK,WACLkD,KAAK,WACLc,GAAG,WACHC,YAAY,uCACZd,MAAOR,EACPuB,SAAUpB,KAGd,kBAACqB,GAAA,EAAD,CACCC,YAAa1B,GAAS5B,IAAU6B,GAChCb,QAAS,kBAAMS,EAAWK,KAF3B,wC,kEC5EKyB,GA7BM,SAAC,GAGL,IAFf3H,EAEc,EAFdA,UAEc,IAFH4H,oBAEG,MAFU,wCAEV,MAFqB1F,eAErB,MAF6B,iGAE7B,MADd2F,qBACc,MADA,GACA,MADIC,eACJ,SADmBC,EACnB,EADmBA,WAMzBrC,GALM,8FAKA,CACRzF,KAAO0H,aACP3H,IAGJ,OACI,yBAAKA,UAAW0F,EAAIC,KAAK,MACpB,kBAACqC,GAAA,EAAD,CAAOvD,MAAM,SAASJ,OAAQyD,EAASxD,OAVhC,kBAAMyD,GAAW,KAWrB,wBAAI/H,UAAU,iBAAiB4H,GAC/B,uBAAG5H,UAAWC,KAAOgI,aAClB/F,GAEH,6BACA,uBAAGlC,UAAU,QACV6H,M,oBCwBJK,GA9CM,SAAC,GAGL,IAFflI,EAEc,EAFdA,UAEc,IAFH4H,oBAEG,MAFU,iEAEV,MAF0B1F,eAE1B,MAFkC,yIAElC,MADd2F,qBACc,MADA,GACA,MADIC,eACJ,SADmBC,EACnB,EADmBA,WAI3BI,GAHQ,8FAGI,kBAAMJ,GAAW,KAGjCnI,qBAAU,WACR,IAAIN,EAQJ,OANIwI,IACHxI,EAAQsE,YAAW,WAChBuE,MACC,MAGE,WACL9E,aAAa/D,MAGd,CAACwI,IAEJ,IAAMpC,EAAM,CACRzF,KAAOiI,aACPlI,GAIJ,OACI,yBAAKA,UAAW0F,EAAIC,KAAK,MACpB,kBAACqC,GAAA,EAAD,CAAOvD,MAAM,UAAUJ,OAAQyD,EAASxD,OAAQ6D,GAC7C,wBAAInI,UAAU,iBAAiB4H,GAC/B,2BACG1F,GAEH,6BACA,uBAAGlC,UAAU,QACV6H,M,oBCQJO,GA/CK,SAAC,GAEd,IADLpI,EACI,EADJA,UAAWqI,EACP,EADOA,SAAUC,EACjB,EADiBA,SAAUC,EAC3B,EAD2BA,QAC3B,IADoCC,kBACpC,MAD+C,mDAC/C,EAD2DC,EAC3D,EAD2DA,UAGvD/C,GAFJ,uFAEU,CACRzF,KAAOmI,YACPpI,IAGE0I,EAAUD,GAAc,kBAAM9F,QAAQC,IAAI,6GAIhD,OACI,yBAAK5C,UAAW0F,EAAIC,KAAK,MACtB,0BAAM0C,SAAUA,GACX,6BACIC,GAIL,yBAAKtI,UAAWC,KAAO0I,aACtB,kBAAClB,GAAA,EAAD,CACQhD,MAAO8D,EAAS,UAAW,YAC3Bb,UAAWa,EACXvI,UAAWC,KAAO2I,QAGjBJ,GAGHC,GACE,kBAAChB,GAAA,EAAD,CACInE,KAAK,QACLtD,UAAWC,KAAO2I,OAClBxD,QAASsD,GAHb,wD,oBCnBTG,GAdK,SAAC,GAAqC,IAApC7I,EAAmC,EAAnCA,UAAWsI,EAAwB,EAAxBA,SAEvB5C,GAF+C,yCAEzC,CACRzF,KAAO4I,YACP7I,IAGJ,OACI,yBAAKA,UAAW0F,EAAIC,KAAK,MACpB2C,I,oBCKEQ,GAdI,SAAC,GAAqC,IAApC9I,EAAmC,EAAnCA,UAAWsI,EAAwB,EAAxBA,SAEtB5C,GAF8C,yCAExC,CACRzF,KAAO6I,WACP9I,IAGJ,OACI,yBAAKA,UAAW0F,EAAIC,KAAK,MACpB2C,I,oBCKES,GAdI,SAAC,GAAsC,IAArC/I,EAAoC,EAApCA,UAAWsI,EAAyB,EAAzBA,SAEtB5C,GAF+C,yCAEzC,CACRzF,KAAO8I,WACP/I,IAGJ,OACI,yBAAKA,UAAW0F,EAAIC,KAAK,MACpB2C,I,oBC4BEU,GArCC,SAAC,GACgB,IADfhJ,EACc,EADdA,UACc,IADHsD,YACG,MADE,OACF,EADU2F,EACV,EADUA,YACV,IADuBxC,aACvB,MAD6B,GAC7B,EADiCe,EACjC,EADiCA,SAC1D0B,GAAyB,EAAhCC,MAAgC,EAAzBD,WAAc1J,EAAW,0FAEtBkG,EAAM,CACRzF,KAAO+I,QACPhJ,GAGEoJ,EAAW,CACfnJ,KAAOoJ,MACPJ,GAGIK,EAAoB9B,GAAoB,kBAAM7E,QAAQC,IAAI,iBAEhE,OACI,yBAAK5C,UAAW0F,EAAIC,KAAK,MAGnB,2CACMnG,EADN,CAEEQ,UAAWoJ,EAASzD,KAAK,KACzBrC,KAAMA,EACNmD,MAAOA,EACPe,SAAU8B,KAGbJ,GACC,oCACA,6BACE,0BAAMlJ,UAAWC,KAAOsJ,OAASL,M,oBCOlCM,GAjCI,SAAC,GAEb,IADLxJ,EACI,EADJA,UAAWmJ,EACP,EADOA,MAAOM,EACd,EADcA,OAAQC,EACtB,EADsBA,cAAeC,EACrC,EADqCA,cAAkBnK,EACvD,iFAC4BC,mBAAS,IADrC,mBACKmK,EADL,KACcC,EADd,KAGFjK,qBAAU,WACRiK,EAAW,GAAD,OAAIrK,EAAMgH,MAAV,OAAiBsD,OAAOpG,KAAKqG,UAAUC,MAAM,OAEtD,IAEH,IAAMtE,EAAM,CACRzF,KAAOuJ,WACPC,GAAUxJ,KAAOwJ,OACjBzJ,GAGJ,OACI,kBAAC,GAAD,CAAaA,UAAW0F,EAAIC,KAAK,MAC3B,kBAAC,GAAD,CAAY3F,UAAW2J,GACrB,2BAAOM,QAASL,GAAUT,IAE5B,kBAAC,GAAD,CAAYnJ,UAAW0J,GACnB,kBAAC,GAAD,eACE1J,UAAWC,KAAO+I,QAChBC,YAAahJ,KAAOgJ,aAChBzJ,EAHR,CAII8H,GAAIsC,Q,6BCiBXM,GA1CU,SAAC,GAEnB,IADHlK,EACE,EADFA,UAAWmJ,EACT,EADSA,MAAOgB,EAChB,EADgBA,SAAUR,EAC1B,EAD0BA,cAAkBnK,EAC5C,iEAEI4K,EAAUC,YAAc,sBAF5B,EAI4B5K,mBAAS,IAJrC,mBAIKmK,EAJL,KAIcC,EAJd,KAMFjK,qBAAU,WACNiK,EAAW,GAAD,OAAIC,OAAOpG,KAAKqG,UAAUC,MAAM,OACzC,IAEL,IAAMtE,EAAM,CACRzF,KAAOiK,iBACPlK,GAGJ,OACI,kBAAC,GAAD,CAAaA,UAAW0F,EAAIC,KAAK,MAC7B,kBAAC,GAAD,CAAY3F,UAAW2J,GACtBR,GAED,kBAAC,GAAD,KACI,kBAAC,eAAD,eACImB,eAAe,0DACfhD,GAAIsC,GACApK,EAHR,CAII+K,IAAKJ,EACLK,MAAO,CACHC,qBAAsB,CAClBC,OAAQ,OACRC,WAAY,OACZC,YAAaR,EAAQ,OAAS,YCrC7CS,GAAW,WAAO,IAAD,EAE0BpL,oBAAS,GAFnC,mBAErBqL,EAFqB,KAEAC,EAFA,OAGgBtL,mBAAS,8CAHzB,mBAGrBuL,EAHqB,KAGLC,EAHK,OAI0BxL,oBAAS,GAJnC,mBAIrByL,EAJqB,KAIAC,EAJA,OAKgB1L,mBAAS,wCALzB,mBAKrB2L,EALqB,KAKLC,EALK,KAuB5B,MAAO,CACLP,sBAAqBC,yBAAwBC,iBAAgBC,oBAC7DC,sBAAqBC,yBAAwBC,iBAAgBC,oBAC7DC,SAnBe,WAA4B,IAA3BC,IAA0B,yDAC1C,OAAO,SAAC7I,GAWN,OAVIA,EAAIT,GACFsJ,IACFR,GAAuB,GACvBE,EAAkB,GAAD,OAAIvI,EAAIR,YAGzBiJ,GAAuB,GACvBE,EAAkB,GAAD,OAAI3I,EAAIR,QAAQyD,KAAK,WAGnCjD,MCrBN,SAAS8I,KAAwB,IAAD,EACP/L,mBAAS,IADF,mBAC7B4B,EAD6B,KACrBoK,EADqB,OAEPhM,mBAAS,IAFF,mBAE7BsE,EAF6B,KAErB2H,EAFqB,OAGLjM,oBAAS,GAHJ,mBAG7B8I,EAH6B,KAGpBoD,EAHoB,KAc/BlD,EAAYmD,uBAAY,WAAyD,IAAxDC,EAAuD,uDAA3C,GAAIC,EAAuC,uDAA3B,GAAIC,EAAuB,wDACpFN,EAAUI,GACVH,EAAUI,GACVH,EAAWI,KACV,CAACN,EAAWC,EAAWC,IAE1B,MAAO,CAAEtK,SAAQ2K,aAfI,SAAC3F,GAAO,IAAD,EACJA,EAAEE,OAAjBC,EADmB,EACnBA,KAAMC,EADa,EACbA,MACbgF,EAAU,2BAAIpK,GAAL,kBAAcmF,EAAOC,KAC9BiF,EAAU,2BAAI3H,GAAL,kBAAcyC,EAAOH,EAAEE,OAAO0F,qBACvCN,EAAWtF,EAAEE,OAAO2F,QAAQ,QAAQC,kBAWPpI,SAAQwE,UAASE,YAAWgD,YAAWE,cCdjE,IA2DMS,GAAyB,SAACC,GACrC,8CAAO,WAAOjK,GAAP,iBAAAC,EAAA,6DACLD,EAASkK,IAAmB,IADvB,SAMG3K,EAAO,CACX4K,aAAchM,IACd8L,OARC,SAUe9J,EAAQC,KAAR,2BAAyCb,GAVxD,UAUGe,EAVH,OAWHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OAbhC,wBAcCV,EAASoK,GAAqB,CAAEC,QAAS,QAC3CrK,EAASsK,GAAkBhK,EAAIf,KAAKmB,OAAO6J,SAAS,KAfnD,kBAgBM3K,KAhBN,eAkBDI,EAASoK,GAAqB,CAAEC,QAAS/J,EAAIf,KAAKoC,UAlBjD,kBAmBM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAnB9B,iEAsBHpB,QAAQC,IAAR,MACAR,EAASoK,GAAqB,CAAEC,QAAS,CAAC,wGAvBvC,kBAwBIzK,GAAQ,EAAO,CAAC,KAAME,WAxB1B,yBA0BHE,EAASkK,IAAmB,IA1BzB,6EAAP,uDA+BWM,GAAqB,SAACC,GACjC,8CAAO,WAAOzK,GAAP,iBAAAC,EAAA,sEAGGV,EAHH,aAID4K,aAAchM,KACXsM,GALF,SAOetK,EAAQC,KAAR,sBAAoCb,GAPnD,UAOGe,EAPH,OAQHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OAVhC,wBAWDV,EAAS0K,GAAqB,CAACC,OAAQ,kOAXtC,kBAYM/K,GAAQ,EAAM,+NAA4CU,EAAIf,KAAKmB,SAZzE,eAcDV,EAASoK,GAAqB,CAAEO,OAAQrK,EAAIf,KAAKoC,UAdhD,kBAeM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAf9B,iEAkBHpB,QAAQC,IAAR,MACAR,EAASoK,GAAqB,CAAEO,OAAQ,CAAC,KAAM7K,YAnB5C,kBAoBIF,GAAQ,EAAO,CAAC,KAAME,WApB1B,0DAAP,uDA0BWoK,GAAqB,SAACzJ,GACjC,MAAO,CACLS,KfvG4B,mBewG5BT,WAIS2J,GAAuB,SAACzI,GACnC,MAAO,CACLT,Kf5G4B,mBe6G5BS,WAIS+I,GAAuB,SAAC5K,GACnC,MAAO,CACLoB,KfpH4B,mBeqH5BpB,YAIS8K,GAAc,SAACL,GAC1B,MAAO,CACLrJ,KfzHwB,ee0HxBqJ,aAISD,GAAoB,SAACD,GAChC,MAAO,CACLnJ,Kf/HgC,uBegIhCmJ,YCxHSQ,GAAgB,WAAoB,IAAnB3L,EAAkB,uDAAP,GACvC,8CAAO,WAAOc,GAAP,iBAAAC,EAAA,6DACLD,EAAS8K,IAAgB,IADpB,SAIGvL,EAJH,aAKD4K,aAAchM,KACXe,GANF,SAQeiB,EAAQC,KAAR,iBAA+Bb,GAR9C,UAQGe,EARH,OASHC,QAAQC,IAAIF,GACO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OAVhC,wBAWDV,EAAS+K,GAAkB,CAAEC,MAAO,QACpChL,EAASiL,GAAS3K,EAAIf,KAAKmB,OAAOsK,QAZjC,kBAaMpL,KAbN,eAeDI,EAAS+K,GAAkB,CAAEC,MAAO1K,EAAIf,KAAKoC,UAf5C,kBAgBM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAhB9B,iEAmBH3B,EAAS+K,GAAkB,CAAEC,MAAO,CAAC,KAAMlL,YAnBxC,kBAoBIF,GAAQ,EAAO,CAAC,KAAME,WApB1B,yBAsBHE,EAAS8K,IAAgB,IAtBtB,6EAAP,uDA2BWI,GAAsB,SAACjB,GAClC,8CAAO,WAAOjK,GAAP,iBAAAC,EAAA,6DACLD,EAAS8K,IAAgB,IADpB,SAKGvL,EAAO,CACX4K,aAAchM,IACd8L,OAPC,SASe9J,EAAQC,KAAR,wBAAsCb,GATrD,UASGe,EATH,OAUHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OAZhC,wBAaCV,EAAS+K,GAAkB,CAAEV,QAAS,QACxCrK,EAASmL,GAAe7K,EAAIf,KAAKmB,OAAOsK,MAAM,KAd7C,kBAeMpL,KAfN,eAiBDI,EAAS+K,GAAkB,CAAEV,QAAS/J,EAAIf,KAAKoC,UAjB9C,kBAkBM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAlB9B,iEAqBHpB,QAAQC,IAAR,MACAR,EAAS+K,GAAkB,CAAEV,QAAS,CAAC,KAAMvK,YAtB1C,kBAuBIF,GAAQ,EAAO,CAAC,KAAME,WAvB1B,yBAyBHE,EAAS8K,IAAgB,IAzBtB,6EAAP,uDAyDWA,GAAkB,SAACrK,GAC9B,MAAO,CACLS,KhB5FyB,gBgB6FzBT,WAISsK,GAAoB,SAACpJ,GAChC,MAAO,CACLT,KhBjGyB,gBgBkGzBS,WAISyJ,GAAoB,SAACtL,GAChC,MAAO,CACLoB,KhBzGyB,gBgB0GzBpB,YAISmL,GAAW,SAACD,GACvB,MAAO,CACL9J,KhB9GqB,YgB+GrB8J,UAISG,GAAiB,SAACd,GAC7B,MAAO,CACLnJ,KhBpH6B,oBgBqH7BmJ,Y,oBCeWxI,gBATS,SAACC,GACrB,MAAO,CACHkJ,MAAOlJ,EAAMkJ,MAAMA,SAOa,CACpCK,mBFlK8B,SAACC,GACjC,8CAAO,WAAOtL,GAAP,iBAAAC,EAAA,sEAKGV,EALH,2BAME+L,GANF,IAODnB,aAAchM,MAPb,SASegC,EAAQC,KAAR,mBAAiCb,GAThD,UASGe,EATH,OAWHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OAbhC,wBAcCV,EAAS0K,GAAqB,CAAC1M,OAAQ,4IAdxC,kBAeQ4B,GAAQ,EAAM,yIAA4BU,EAAIf,KAAKmB,SAf3D,eAiBCV,EAASoK,GAAqB,CAAEpM,OAAQsC,EAAIf,KAAKoC,UAjBlD,kBAkBQ/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAlBhC,iEAqBHpB,QAAQC,IAAI,KAAMV,SAClBE,EAASoK,GAAqB,CAACpM,OAAQ,CAAC,KAAM8B,YAtB3C,kBAuBIF,GAAQ,EAAO,CAAC,KAAME,WAvB1B,0DAAP,uDEiKsB+K,kBADThJ,EAzJS,SAAC,GAElB,IADLwJ,EACI,EADJA,mBAAoBL,EAChB,EADgBA,MAAOH,EACvB,EADuBA,cAGnBU,EAAUC,eAFd,EAKuE/C,KADnEC,EAJJ,EAIIA,oBAAqBC,EAJzB,EAIyBA,uBAAwBC,EAJjD,EAIiDA,eACnDE,EALE,EAKFA,oBAAqBC,EALnB,EAKmBA,uBAAwBC,EAL3C,EAK2CA,eAAgBE,EAL3D,EAK2DA,SAL3D,EAOoEE,KAAjEnK,EAPH,EAOGA,OAAQ2K,EAPX,EAOWA,aAAcjI,EAPzB,EAOyBA,OAAQwE,EAPjC,EAOiCA,QAASoD,EAP1C,EAO0CA,WAAYF,EAPtD,EAOsDA,UAPtD,EASoChM,qBATpC,mBASGoO,EATH,KASiBC,EATjB,KA0BNlO,qBAAU,WACNqN,IACCc,KAAKzC,GAAS,IACd0C,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,QAG7B,IAEH/G,qBAAU,WACFwN,GACAU,EAAgBV,KAErB,CAACA,IAGFxN,qBAAU,WACR+L,GAAW,KAEZ,IAqBC,OACI,yBAAK3L,UAAWC,KAAOgO,iBACvB,kBAACC,GAAA,EAAD,CAAYrJ,IAAI,MAAMsJ,QAAQ,OAC5B,kBAACC,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAG,YAAYuJ,OAAK,GAAlD,oDACA,kBAACF,GAAA,EAAD,CAAgBG,QAAM,EAAC1J,IAAI,QAA3B,sGAEE,gCAAQ,kIACR,kBAAC,GAAD,CACIwD,SA3BG,SAACmG,GAChBA,EAAIC,iBAEJ9L,QAAQC,IAAIvB,GAEZoM,EAAmBpM,GAClB0M,KAAKzC,KACLyC,MAAK,SAAArL,GACEA,EAAIT,IACJ2B,YAAW,WAEP+J,EAAQe,KAAR,eACD,QAGVV,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,OAahB4B,QAASA,GAEL,kBAAC,GAAD,CACIjF,KAAK,QACJkD,KAAK,QACN2C,MAAM,QACNwF,UAAU,EACVnH,SAAUwE,EACVvF,MAAOpF,EAAO2E,MACdkD,UAAWnF,EAAOiC,MAClB4I,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACKrI,KAAK,QACN2C,MAAM,iCACNwF,UAAU,EACVnH,SAAUwE,EACVvF,MAAOpF,EAAO+C,MACd8E,UAAWnF,EAAOK,MAClBwK,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACKrI,KAAK,WACN2C,MAAM,uCACNwF,UAAU,EACVnH,SAAUwE,EACVvF,MAAOpF,EAAO4E,SACdiD,UAAWnF,EAAOkC,SAClB2I,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACKrI,KAAK,eACN2C,MAAM,6CACN3B,SAAUwE,EACVvF,MAAOpF,EAAOyN,aACd5F,UAAWnF,EAAO+K,aAClBF,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACI1F,MAAM,2BACN4F,QAASlB,EACTmB,aAAa,OACbC,SA9GC,SAACC,EAAD,GAAqC,IAArBC,EAAoB,EAApBA,QAAS1I,EAAW,EAAXA,MAC9C9D,QAAQC,IAAIsM,GACZzD,EAAU,2BACHpK,GADE,kBAEJ8N,EAAU1I,MA2GK2I,SAvGP,SAACF,EAAcG,GAC5B1M,QAAQC,IAAIsM,GACZzD,EAAU,2BACHpK,GADE,kBAEJgO,EAAYF,QAAUD,EAAaI,KAAI,SAAAC,GAAC,OAAIA,EAAE9I,aAoG/Bc,YAAY,mDACZiI,cAAY,KAIxB,kBAAC,GAAD,CACI1H,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGT,kBAAC,GAAD,CACGlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,Q,oBCxIbqE,GAdG,SAAC,GAAqC,IAApCzP,EAAmC,EAAnCA,UAAWsI,EAAwB,EAAxBA,SAErB5C,GAF6C,yCAEvC,CACRzF,KAAOwP,UACPzP,IAGJ,OACI,yBAAKA,UAAW0F,EAAIC,KAAK,MACpB2C,I,oBCaEoH,GArBE,SAAC,GAEX,IADL1P,EACI,EADJA,UAAWoF,EACP,EADOA,QACP,IADgBX,aAChB,MADsB,YACtB,MADmC+D,kBACnC,MAD8C,yDAC9C,EAEI9C,GAFJ,6DAEU,CACRzF,KAAOyP,SACP1P,IAGJ,OACI,yBAAKA,UAAW0F,EAAIC,KAAK,MACrB,kBAAC8B,GAAA,EAAD,CACIhD,MAAOA,EACPW,QAASA,GAERoD,K,oBCKFmH,GApBQ,SAAC,GAEjB,IADL3P,EACI,EADJA,UAAW4P,EACP,EADOA,WAAYC,EACnB,EADmBA,QAASC,EAC5B,EAD4BA,QAGxBpK,GAFJ,+DAEU,CACRzF,KAAO0P,eACP3P,IAGJ,OACI,yBAAKA,UAAW0F,EAAIC,KAAK,MACrB,kBAAC,GAAD,CACIlB,MAAOqL,EAAS,UAAY,SAC5B1K,QAAS0K,EAASF,EAAaC,EAC/BrH,WAAYsH,EAAS,2EAAiB,qF,oBCkBvCC,GA9BS,SAAC,GAElB,IADL/P,EACI,EADJA,UAAW2B,EACP,EADOA,KAAMwH,EACb,EADaA,MAAOM,EACpB,EADoBA,OAShB/D,GARJ,sDAQU,CACRzF,KAAO8P,gBACPtG,GAAUxJ,KAAOwJ,OACjBzJ,IAGJ,OACI,kBAAC,GAAD,CAAaA,UAAW0F,EAAIC,KAAK,MACrB,kBAAC,GAAD,CAAY3F,UAAWC,KAAO8I,YACzBI,GAEL,kBAAC,GAAD,KACE,0BAAMnJ,UAAWC,KAAO+P,MAlBxB,SAACrO,GACjB,YAAasO,IAATtO,GACS,OAATA,EAD2B,0DAExBA,EAgBYuO,CAAUvO,O,oBCZpBwO,GAdE,SAAC,GAAqC,IAApCnQ,EAAmC,EAAnCA,UAAWsI,EAAwB,EAAxBA,SAEpB5C,GAF4C,yCAEtC,CACRzF,KAAOkQ,SACPnQ,IAGJ,OACI,yBAAKA,UAAW0F,EAAIC,KAAK,MACpB2C,I,oBCQE8H,GAhBC,SAAC,GAAqC,IAApCpQ,EAAmC,EAAnCA,UAAWsI,EAAwB,EAAxBA,SAEnB5C,GAF2C,yCAErC,CACRzF,KAAOmQ,QACPpQ,IAGJ,OACI,yBAAKA,UAAW0F,EAAIC,KAAK,MACrB,kBAAC,GAAD,KACS2C,K,oBC4INrE,gBARS,SAACC,GACvB,MAAO,CACHuI,QAASvI,EAAMyI,SAASF,WAMU,CACtCL,0BAAwBQ,sBAAoBF,sBAD/BzI,EAxIQ,SAAC,GAEjB,IADLwI,EACI,EADJA,QAASL,EACL,EADKA,uBAAwBQ,EAC7B,EAD6BA,mBAAoBF,EACjD,EADiDA,kBAG7CpF,EAAO+I,eAAP/I,GACFqG,EAAUC,eAHZ,EAMuE/C,KADnEC,EALJ,EAKIA,oBAAqBC,EALzB,EAKyBA,uBAAwBC,EALjD,EAKiDA,eACnDE,EANE,EAMFA,oBAAqBC,EANnB,EAMmBA,uBAAwBC,EAN3C,EAM2CA,eAAgBE,EAN3D,EAM2DA,SAG/D1L,qBAAU,WACRwM,EAAuB,EAAE9E,IACxByG,KAAKzC,GAAS,IACdyC,MAAK,kBAAMpL,QAAQC,IAAI,6BACvBoL,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,QAE3B,IAoBH,OAAK8F,EAMAA,EAAQ6D,KAKP,yBAAKtQ,UAAWC,KAAOsQ,gBACvB,kBAACrC,GAAA,EAAD,CAAYrJ,IAAI,MAAMsJ,QAAQ,OAC5B,kBAACC,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAG,YAAYuJ,OAAK,GAAlD,oDACA,kBAACF,GAAA,EAAD,CAAgBG,QAAM,EAAC1J,IAAI,QAA3B,8FAAyD,gCAAS4H,GAAWA,EAAQrI,SAEnF,gCAAQ,uHAAsB,gCAASqI,GAAWA,EAAQrI,SAC1D,kBAAC,GAAD,KACI,kBAAC,GAAD,CACI+E,MAAM,OACNxH,KAAM8K,EAAQ6D,OAElB,kBAAC,GAAD,CACInH,MAAM,uCACNxH,KAAO8K,EAAQqD,QAAW,2EAAmB,+CAEhDrD,EAAQ+D,SACL,kBAAC,GAAD,CACErH,MAAM,uCACNxH,KAAM8K,EAAQ+D,SAAW,yCAG/B,kBAAC,GAAD,CACIrH,MAAM,SACNxH,KAAM8K,EAAQzG,QAElB,kBAAC,GAAD,CACImD,MAAM,iCACNxH,KAAM8K,EAAQrI,QAElB,kBAAC,GAAD,CACI+E,MAAM,uCACNxH,KAAO,IAAI7B,KAAK2M,EAAQgE,SAASC,uBAErC,kBAAC,GAAD,CACIvH,MAAM,6CACNxH,KAAM8K,EAAQqC,eAElB,kBAAC,GAAD,CACI3F,MAAM,qEACNxH,KAAO8K,EAAQkE,sBAAyB,yDAAgB,wEAE3DlE,EAAQmE,iBACP,kBAAC,GAAD,CACEzH,MAAM,8FACNxH,KAAO,IAAI7B,KAAK2M,EAAQmE,iBAAiBF,wBAMrD,kBAAC,GAAD,KACE,kBAAC,GAAD,CACMjM,MAAO,YACPW,QAAS,kBAAMuI,EAAQe,KAAR,oBAA0BpH,EAA1B,aACfkB,WAAW,mFAEf,kBAAC,GAAD,CACEsH,QAASrD,EAAQqD,QACjBF,WA9EO,WACCiB,OAAOC,QAAQ,+JAEjClE,EAAmB,CAACtF,IAAKA,EAAIwI,SAAS,IACrC/B,KAAKzC,GAAS,IACdyC,MAAK,gBAAEpM,EAAF,EAAEA,KAAF,OAAY+K,EAAkB/K,MACnCqM,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,OAyElBkJ,QAxFI,WACIgB,OAAOC,QAAQ,qKAEjClE,EAAmB,CAACtF,IAAKA,EAAIwI,SAAS,IACrC/B,KAAKzC,GAAS,IACdyC,MAAK,gBAAEpM,EAAF,EAAEA,KAAF,OAAY+K,EAAkB/K,MACnCqM,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,UAsFtB,kBAAC,GAAD,CACUmB,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGjB,kBAAC,GAAD,CACIlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,KA5EZ,kBAAC,GAAD,MALP,2I,sECtCS2F,GAhBO,SAAC,GAA2B,IAA1B/Q,EAAyB,EAAzBA,UAEd0F,GAFuC,8BAEjC,CACRzF,KAAO8Q,cACP/Q,IAGJ,OACI,wBAAIA,UAAW0F,EAAIC,KAAK,MACpB,4BACI,+H,oBCSDqL,GAnBK,SAAC,GACyD,IAA1EhR,EAAyE,EAAzEA,UAAWmJ,EAA8D,EAA9DA,MAAO/D,EAAuD,EAAvDA,QAAuD,IAA9C6L,iBAA8C,MAApC,GAAoC,EAAhCC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,MAE9CzL,GAFmE,gFAE7D,CACRzF,KAAO+Q,YACPhR,IAOJ,OAJIiR,IAAcC,GACdxL,EAAIgJ,KAAKyC,EAAOlR,KAAOmR,QAASnR,KAAOoR,WAIvC,wBAAIjM,QAASA,EAASpF,UAAW0F,EAAIC,KAAK,MACtCwD,I,8BCGGmI,GAhBI,SAAC,GAAqC,IAApCtR,EAAmC,EAAnCA,UAAWsI,EAAwB,EAAxBA,SAEtB5C,GAF8C,yCAExC,CACRzF,KAAOqR,WACPtR,IAGJ,OACI,yBAAKA,UAAW0F,EAAIC,KAAK,MACvB,kBAAC4L,GAAA,EAAD,CAAOC,OAAK,GACTlJ,K,oBCKEmJ,GAhBE,SAAC,GAAmC,IAAlCzR,EAAiC,EAAjCA,UAAWuO,EAAsB,EAAtBA,OAEpB7I,GAF0C,uCAEpC,CACRzF,KAAOwR,SACPzR,IAGJ,OACI,wBAAIA,UAAW0F,EAAIC,KAAK,MACxB,0BAAM3F,UAAWuO,EAAQtO,KAAOsO,OAAQtO,KAAOyR,WAC1CnD,EAAU,6CAAc,4D,oBCqBtBoD,GA9BI,SAAC,GAEb,IADL3R,EACI,EADJA,UAAWsI,EACP,EADOA,SACP,IADiB7D,aACjB,MADuB,UACvB,MADkC+D,kBAClC,MAD6C,wFAC7C,mEAEwB/I,oBAAS,IAFjC,mBAEG4E,EAFH,KAEWuN,EAFX,KAOIlM,EAAM,CACRzF,KAAO0R,WACP3R,GAGJ,OACI,yBAAKA,UAAW0F,EAAIC,KAAK,MACrB,kBAAC8B,GAAA,EAAD,CACEhD,MAAOJ,EAAQI,EAAQ,UACvBW,QAZG,kBAAMwM,GAAWvN,IAapBrE,UAAWC,KAAO2I,QAEnBvE,EAAQ,4EAAkBmE,GAE3B,kBAACnD,EAAA,EAAD,CAAUhB,OAAQA,GACfiE,KCuRArE,gBANS,SAACC,GACrB,MAAO,CACHyI,SAAUzI,EAAMyI,SAASA,YAIO,CAACkF,iBf9QT,WAAoB,IAAnBvQ,EAAkB,uDAAP,GAC1C,8CAAO,WAAOc,GAAP,iBAAAC,EAAA,6DACLD,EAASkK,IAAmB,IADvB,SAKG3K,EALH,aAMD4K,aAAchM,KACXe,GAPF,SASeiB,EAAQC,KAAR,oBAAkCb,GATjD,UASGe,EATH,OAUHC,QAAQC,IAAIF,GACO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OAXhC,wBAYDV,EAASoK,GAAqB,CAAEG,SAAU,QAC1CvK,EAAS4K,GAAYtK,EAAIf,KAAKmB,OAAO6J,WAbpC,kBAcM3K,KAdN,eAgBDI,EAASoK,GAAqB,CAAEG,SAAUjK,EAAIf,KAAKoC,UAhBlD,kBAiBM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAjB9B,iEAoBH3B,EAASoK,GAAqB,CAAEG,SAAU,CAAC,wGApBxC,kBAqBI3K,GAAQ,EAAO,CAAC,KAAME,WArB1B,yBAuBHE,EAASkK,IAAmB,IAvBzB,6EAAP,wDe6QarI,EA/RE,SAAC,GAA2C,IAA1C0I,EAAyC,EAAzCA,SAAUkF,EAA+B,EAA/BA,iBAAkBlE,EAAa,EAAbA,QAAa,EAEYnC,KAA/DnK,EAFmD,EAEnDA,OAAQ2K,EAF2C,EAE3CA,aAAcjI,EAF6B,EAE7BA,OAAQwE,EAFqB,EAErBA,QAASkD,EAFY,EAEZA,UAAWhD,EAFC,EAEDA,UAFC,EAKiBoC,KADnEC,EAJkD,EAIlDA,oBAAqBC,EAJ6B,EAI7BA,uBAAwBC,EAJK,EAILA,eACnDE,EALwD,EAKxDA,oBAAqBC,EALmC,EAKnCA,uBAAwBC,EALW,EAKXA,eAAgBE,EALL,EAKKA,SALL,EAOhC7L,oBAAS,GAPuB,mBAOnD0R,EAPmD,KAO5CW,EAP4C,OAQ9BrS,mBAAS,GARqB,mBAQnDsS,EARmD,KAQ3CC,EAR2C,OASxBvS,mBAAS,IATe,mBASnDyR,EATmD,KASxCe,EATwC,KAWpDC,EAAc,SAACC,GACnBL,GAAUX,GACVc,EAAaE,GACb1G,EAAU,2BACHpK,GADE,IAEL+Q,QAAU,CACN,CACED,QACAhB,MAAOA,EAAO,MAAQ,YAKhC,IAAM7P,EAAaF,EAAiBC,GAEpCC,EAAW8Q,QAAU,CACjB,CACED,QACAhB,MAAOA,EAAO,MAAQ,SAG5B,IAAMkB,EAAU,eACT/Q,GAGPuQ,EAAiBQ,GAChBtE,KAAKzC,GAAS,IACd0C,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,OAK5B/G,qBAAU,WACNiS,IACC9D,KAAKzC,GAAS,IACd0C,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,QAE7B,IAiDH,OACI,yBAAK3G,UAAWC,KAAOqS,UACnB,gCAAQ,4HACR,kBAAC,GAAD,KACI,kBAAC,GAAD,CACIjK,SApDC,SAACmG,GACdA,EAAIC,iBAEJ,IAAMnN,EAAaF,EAAiBC,GAEpCwQ,EAAiBvQ,GAChByM,KAAKzC,GAAS,IACd0C,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,MAE5BhE,QAAQC,IAAItB,IA4CAiH,QAASA,EACTC,WAAW,iCACXC,UA1CA,WACdA,EAAU,GAAI,IAAI,KA4CJ,kBAAC,GAAD,CACIjC,KAAK,QACL2C,MAAM,iCACN3B,SAAUwE,EACVvF,MAAOpF,EAAO+C,MACd8E,UAAWnF,EAAOK,MAClBwK,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACIrI,KAAK,QACL2C,MAAM,QACN3B,SAAUwE,EACVvF,MAAOpF,EAAO2E,MACdkD,UAAWnF,EAAOiC,MAClB4I,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACIrI,KAAK,OACL2C,MAAM,OACN3B,SAAUwE,EACVvF,MAAOpF,EAAOiP,KACdpH,UAAWnF,EAAOuM,KAClB1B,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACQvL,KAAK,SACLkD,KAAK,QACL2C,MAAM,6EACN3B,SAAUwE,EACVvF,MAAOpF,EAAOQ,MACdqH,UAAWnF,EAAOlC,MAClB2I,MAAO,CACH+H,MAAM,SAEVC,IAAK,EACLC,IAAK,QAMrB,kBAAC,GAAD,KACI,+BACI,4BACI,kCACA,kBAAC,GAAD,CACIrN,QAAS,kBAAM8M,EAAY,UAC3B/I,MAAM,iCACN8H,UAAU,QACVC,UAAWA,EACXC,MAAOA,IAEX,kBAAC,GAAD,CACI/L,QAAS,kBAAM8M,EAAY,UAC3B/I,MAAM,QACN8H,UAAU,QACVC,UAAWA,EACXC,MAAOA,IAEX,kBAAC,GAAD,CACI/L,QAAS,kBAAM8M,EAAY,iBAC3B/I,MAAM,6CACN8H,UAAU,eACVC,UAAWA,EACXC,MAAOA,IAEX,kBAAC,GAAD,CACI/L,QAAS,kBAAM8M,EAAY,YAC3B/I,MAAM,uCACN8H,UAAU,UACVC,UAAWA,EACXC,MAAOA,IAEX,kBAAC,GAAD,CACI/L,QAAS,kBAAM8M,EAAY,YAC3B/I,MAAM,kCACN8H,UAAU,UACVC,UAAWA,EACXC,MAAOA,MAInB,gCAEgB,OAARxE,QAAQ,IAARA,OAAA,EAAAA,EAAU+F,QAAS/F,EAAS2C,KAAI,SAACqD,GAC7B,OACI,wBACIjR,IAAKiR,EAAQrL,GACbtH,UAAWC,KAAO2S,GAClBxN,QAAS,kBAAMuI,EAAQe,KAAR,oBAA0BiE,EAAQrL,OAEjD,wBAAIuL,MAAM,OAAOF,EAAQrL,IACzB,4BAAKqL,EAAQvO,OACb,4BAAKuO,EAAQ3M,OACb,4BAAK2M,EAAQ7D,cACb,4BAAM,IAAIhP,KAAK6S,EAAQlC,SAASC,sBAChC,kBAAC,GAAD,CACInC,QAASoE,EAAQ7C,cAMzB,kBAAC,GAAD,QAQpB,yBAAK9P,UAAWC,KAAO6S,aAEvB,kBAAC,GAAD,CACIrO,MAAO,UACPW,QAAS,kBAAMuI,EAAQe,KAAR,oBACflG,WAAW,gGAGf,kBAACuK,GAAA,EAAD,CAAY/S,UAAWC,KAAO8S,WAAYC,aAAW,mBAEjD,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACI9N,QAzJI,SAACoJ,GAErB,GADAA,EAAIC,mBACAsD,GAAU,GAAd,CACA,IAAMzQ,EAAaF,EAAiBC,GAEpC2Q,EAAUD,EAAS,GACnBF,EAAiB,2BACVvQ,GADS,IAEZyQ,QAASA,EAAS,IAAMzQ,EAAWO,OAAS,OAE/CkM,KAAKzC,GAAS,IACdyC,MAAK,kBAAMpL,QAAQC,IAAI,uCACxBD,QAAQC,IAAItB,KA8II6R,UAAQ,EAACC,KAAK,OAGtB,kBAACH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACI9N,QA7KE,SAACoJ,GACnBA,EAAIC,iBACJ,IAAMnN,EAAaF,EAAiBC,GACpC2Q,EAAUD,EAAS,GAEnBF,EAAiB,2BACVvQ,GADS,IAEZyQ,QAASA,EAAS,IAAMzQ,EAAWO,OAAS,OAE/CkM,KAAKzC,GAAS,IACdyC,MAAK,kBAAMpL,QAAQC,IAAI,mCACxBD,QAAQC,IAAItB,IAmKI+R,MAAI,EAACD,KAAK,SAsBtB,kBAAC,GAAD,CACItL,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGT,kBAAC,GAAD,CACGlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,Q,oBCnHbnH,gBARS,SAACC,GACrB,MAAO,CACLuI,QAASvI,EAAMyI,SAASF,WAMU,CACpCL,0BAAwBQ,uBADb3I,EAlKQ,SAAC,GAEL,IADfjE,EACc,EADdA,UAAWyM,EACG,EADHA,QAASL,EACN,EADMA,uBAAwBQ,EAC9B,EAD8BA,mBAC9B,yFAG+D/B,MADrEC,EAFM,EAENA,oBAAqBC,EAFf,EAEeA,uBAAwBC,EAFvC,EAEuCA,eACjDE,EAHU,EAGVA,oBAAqBC,EAHX,EAGWA,uBAAwBC,EAHnC,EAGmCA,eAAgBE,EAHnD,EAGmDA,SAHnD,EAM0DE,KAAjEnK,EANO,EAMPA,OAAQ2K,EAND,EAMCA,aAAcjI,EANf,EAMeA,OAAQwE,EANvB,EAMuBA,QAASkD,EANhC,EAMgCA,UAAWE,EAN3C,EAM2CA,WAElDrE,EAAM+I,eAAN/I,GACDqG,EAAUC,eAEhBhO,qBAAU,WACN+L,GAAW,KAEZ,IAEH/L,qBAAU,WAIN,OAHAwM,EAAuB,EAAE9E,IACxByG,KAAKzC,GAAS,IACd0C,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,MACrB,eAQN,IAEL/G,qBAAU,WACN,GAAK6M,EAAL,CAEA,IAAI6G,EAAe7G,EAEnB,IAAKA,EAAQ8G,UAAW,CACS9G,EAAtB8G,UACPD,EAFoB,aACS7G,EADT,eAIxB,IAAKA,EAAQmE,gBAAiB,CACSnE,EAA5BmE,gBACP0C,EAF0B,aACS7G,EADT,qBAI9B,IAAKA,EAAQ8G,YAAc9G,EAAQmE,gBAAiB,CACFnE,EAAvC8G,UAAuC9G,EAA5BmE,gBAClB0C,EAFgD,aACF7G,EADE,iCAKpDhB,EAAU6H,MAET,CAAC7G,IAEN,IAgBM/G,EAAM,CACRzF,KAAOuT,eACPxT,GAGJ,OAAKyM,EAIAA,EAAQ6D,KAKT,yBAAKtQ,UAAW0F,EAAIC,KAAK,MACpB,kBAACuI,GAAA,EAAD,CAAYrJ,IAAI,MAAMsJ,QAAQ,OAC3B,kBAACC,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAG,YAAYuJ,OAAK,GAAlD,oDACA,kBAACF,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAE,oBAAeuC,GAAMgH,OAAK,GAA1D,8FAAkF,uCAAS7B,QAAT,IAASA,OAAT,EAASA,EAASrI,QACpG,kBAACgK,GAAA,EAAD,CAAgBG,QAAM,EAAC1J,IAAI,QAA3B,8IAAiE,uCAAS4H,QAAT,IAASA,OAAT,EAASA,EAASrI,SAEvF,gCAAQ,uKAA8B,uCAASqI,QAAT,IAASA,OAAT,EAASA,EAASrI,SAExD,kBAAC,GAAD,CACIiE,SAvCK,SAACmG,GACdA,EAAIC,iBACJ7B,EAAmBvL,GAClB0M,KAAKzC,KACLyC,MAAK,SAAArL,GACEA,EAAIT,IACJ2B,YAAW,WACT+J,EAAQ8F,WACP,QAGVzF,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,MAC5BhE,QAAQC,IAAIvB,IA4BJkH,QAASA,EACTC,WAAW,0DAEP,kBAAC,GAAD,CACIlF,KAAK,QACJkD,KAAK,QACN2C,MAAM,QACNwF,UAAU,EACVnH,SAAUwE,EACVvF,MAAOpF,EAAO2E,MACdkD,UAAWnF,EAAOiC,MAClB4I,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACKrI,KAAK,QACN2C,MAAM,iCACNwF,UAAU,EACVnH,SAAUwE,EACVvF,MAAOpF,EAAO+C,MACd8E,UAAWnF,EAAOK,MAClBwK,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACKrI,KAAK,WACN2C,MAAM,uCACN3B,SAAUwE,EACVvF,MAAOpF,EAAO4E,SACdiD,UAAWnF,EAAOkC,SAClB2I,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACKrI,KAAK,eACN2C,MAAM,6CACN3B,SAAUwE,EACVvF,MAAOpF,EAAOyN,aACd5F,UAAWnF,EAAO+K,aAClBF,UAAW,EACXC,UAAW,OAKvB,kBAAC,GAAD,CACI/G,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGb,kBAAC,GAAD,CACIlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,KApEV,kBAAC,GAAD,MAJA,2I,oBC/DFsI,GAAoB,WAAoB,IAAnBpS,EAAkB,uDAAP,GAC3C,8CAAO,WAAOc,GAAP,eAAAC,EAAA,+EAGeE,EAAQC,KAAR,2BAAyClB,GAHxD,UAGGoB,EAHH,OAIHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OANhC,wBAODV,EAASuR,GAAqBjR,EAAIf,KAAKmB,OAAO8Q,YAP7C,kBAQM5R,KARN,eAUDI,EAASyR,GAAsB,CAAED,UAAWlR,EAAIf,KAAKoC,UAVpD,kBAWM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAX9B,iEAcHpB,QAAQC,IAAR,MACAR,EAASyR,GAAsB,CAAED,UAAW,CAAC,KAAM1R,YAfhD,kBAgBIF,GAAQ,EAAO,CAAC,KAAME,WAhB1B,0DAAP,uDAqBW4R,GAA0B,SAACC,GACtC,8CAAO,WAAO3R,GAAP,eAAAC,EAAA,+EAGeE,EAAQC,KAAR,oCAAkD,CAACuR,UAHlE,UAGGrR,EAHH,OAIHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OANhC,wBAODV,EAAS4R,GAAoBtR,EAAIf,KAAKmB,OAAO8Q,UAAU,KAPtD,kBAQM5R,KARN,eAUDI,EAASyR,GAAsB,CAAEpH,QAAS/J,EAAIf,KAAKoC,UAVlD,kBAWM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAX9B,iEAcHpB,QAAQC,IAAR,MACAR,EAASyR,GAAsB,CAAEpH,QAAS,CAAC,KAAMvK,YAf9C,kBAgBIF,GAAQ,EAAO,CAAC,KAAME,WAhB1B,0DAAP,uDAqBW+R,GAAsB,SAACC,GAClC,8CAAO,WAAO9R,GAAP,eAAAC,EAAA,+EAGeE,EAAQC,KAAR,6BAA2C0R,GAH1D,UAGGxR,EAHH,OAIHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OANhC,wBAODV,EAAS+R,GAAsB,CAACpH,OAAQ,4NAPvC,kBAQM/K,GAAQ,EAAM,yNAA2CU,EAAIf,KAAKmB,SARxE,eAUDV,EAASyR,GAAsB,CAAE9G,OAAQrK,EAAIf,KAAKoC,UAVjD,kBAWM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAX9B,iEAcHpB,QAAQC,IAAR,MACAR,EAASyR,GAAsB,CAAE9G,OAAQ,CAAC,KAAM7K,YAf7C,kBAgBIF,GAAQ,EAAO,CAAC,KAAME,WAhB1B,0DAAP,uDAuDWyR,GAAsB,SAACC,GAClC,MAAO,CACLtQ,KhCnEyB,gBgCoEzBsQ,cAISI,GAAqB,SAACvH,GACjC,MAAO,CACLnJ,KhCzEgC,uBgC0EhCmJ,YAMSoH,GAAwB,SAAC9P,GACpC,MAAO,CACLT,KhCrF6B,oBgCsF7BS,WAGSoQ,GAAwB,SAACjS,GACpC,MAAO,CACLoB,KhC1F6B,oBgC2F7BpB,YC/BW+B,eAAQ,KAAM,CAAEmQ,oBDtHI,SAAC1G,GAClC,8CAAO,WAAOtL,GAAP,eAAAC,EAAA,+EAIeE,EAAQC,KAAR,0BAAwCkL,GAJvD,UAIGhL,EAJH,OAMHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OARhC,wBASCV,EAAS+R,GAAsB,CAAC/T,OAAQ,4IATzC,kBAUQ4B,GAAQ,EAAM,2IAVtB,eAYCI,EAASyR,GAAsB,CAAEzT,OAAQsC,EAAIf,KAAKoC,UAZnD,kBAaQ/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAbhC,iEAgBHpB,QAAQC,IAAI,KAAMV,SAClBE,EAASyR,GAAsB,CAACzT,OAAQ,CAAC,KAAM8B,YAjB5C,kBAkBIF,GAAQ,EAAO,CAAC,KAAME,WAlB1B,0DAAP,wDCqHa+B,EA9GU,SAAC,GAEnB,IADHjE,EACE,EADFA,UAAWoU,EACT,EADSA,oBACT,uDAG2EvJ,MADrEC,EAFN,EAEMA,oBAAqBC,EAF3B,EAE2BA,uBAAwBC,EAFnD,EAEmDA,eACjDE,EAHF,EAGEA,oBAAqBC,EAHvB,EAGuBA,uBAAwBC,EAH/C,EAG+CA,eAAgBE,EAH/D,EAG+DA,SAH/D,EAMsEE,KAAjEnK,EANL,EAMKA,OAAQ2K,EANb,EAMaA,aAAcjI,EAN3B,EAM2BA,OAAQwE,EANnC,EAMmCA,QAASE,EAN5C,EAM4CA,UAAWkD,EANvD,EAMuDA,WANvD,EAQ4BlM,oBAAS,GARrC,mBAQK4U,EARL,KAQcC,EARd,KASF1U,qBAAU,WACN+L,GAAW,KAEZ,IAEH,IA2BMjG,EAAM,CACRzF,KAAOsU,iBACPvU,GAGJ,OACI,yBAAKA,UAAW0F,EAAIC,KAAK,MACzB,kBAACuI,GAAA,EAAD,CAAYrJ,IAAI,MAAMsJ,QAAQ,OAC5B,kBAACC,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAG,aAAauJ,OAAK,GAAnD,kCACA,kBAACF,GAAA,EAAD,CAAgBG,QAAM,EAAC1J,IAAI,QAA3B,iGAEC,oCAAS,4HACR,kBAAC,GAAD,CACEwD,SAxCO,SAACmG,GACdA,EAAIC,iBACJ9L,QAAQC,IAAIvB,GACZ+S,EAAoB,2BACb/S,GADY,IAEfkN,OAAQ8F,KAEXtG,MAAK,SAACrL,GAEH,OADA4I,IAAW5I,GACJA,KAERqL,MAAK,SAAArL,GACEA,EAAIT,IACJ2B,YAAW,WACT6E,MACC,QAGVsF,MAAK,kBAAMpL,QAAQC,IAAI,uBACvBoL,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,OAsBxB4B,QAASA,GAEP,kBAAC,GAAD,CACI/B,KAAK,OACL2C,MAAM,2EACNwF,UAAU,EACVnH,SAAUwE,EACVvF,MAAOpF,EAAOmF,KACd0C,UAAWnF,EAAOyC,KAClBoI,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACIrI,KAAK,QACL2C,MAAM,QACNwF,UAAU,EACVnH,SAAUwE,EACVvF,MAAOpF,EAAOmT,MACdtL,UAAWnF,EAAOyQ,MAElB5F,UAAW,EACXC,UAAW,KAEf,kBAAC,GAAD,CACIrI,KAAK,SACL2C,MAAM,6CACN3B,SA5Ca,SAACgH,GAC1B8F,EAAW9F,EAAIjI,OAAO8N,UA4CV/Q,KAAK,WACL+Q,QAASA,KAOb,kBAAC,GAAD,CACQvM,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGjB,kBAAC,GAAD,CACGlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,Q,oBClHfqJ,GAAoB,CAC/B,CAACjO,KAAM,cAAeC,MAAO,OAAQ0I,QAAS,cAC9C,CAAC3I,KAAM,eAAgBC,MAAO,WAAY0I,QAAS,cACnD,CAAC3I,KAAM,YAAaC,MAAO,MAAO0I,QAAS,cAC3C,CAAC3I,KAAM,8BAAgBC,MAAO,cAAe0I,QAAS,cACtD,CAAC3I,KAAM,oBAAqBC,MAAO,qBAAsB0I,QAAS,cAClE,CAAC3I,KAAM,kBAAmBC,MAAO,iBAAkB0I,QAAS,cAC5D,CAAC3I,KAAM,gBAAiBC,MAAO,gBAAiB0I,QAAS,cACzD,CAAC3I,KAAM,6BAA8BC,MAAO,0BAA2B0I,QAAS,cAChF,CAAC3I,KAAM,2BAA4BC,MAAO,yBAA0B0I,QAAS,cAC7E,CAAC3I,KAAM,yBAA0BC,MAAO,gBAAiB0I,QAAS,cAClE,CAAC3I,KAAM,uBAAwBC,MAAO,eAAgB0I,QAAS,cAC/D,CAAC3I,KAAM,iCAASC,MAAO,QAAS0I,QAAS,eAI9BuF,GAAgB,CAC3B,CAAClO,KAAM,eAAMC,OAAO,EAAO0I,QAAS,WACpC,CAAC3I,KAAM,qBAAOC,OAAO,EAAM0I,QAAS,YAIzBwF,GAAkB,CAC7B,CAAC,MAAS,MAAO,KAAQ,MAAO,KAAQ,8FAAoBxF,QAAS,gBACrE,CAAC,MAAS,MAAO,KAAQ,MAAO,KAAQ,0DAAcA,QAAS,gBAC/D,CAAC,MAAS,MAAO,KAAQ,MAAO,KAAQ,2BAAQA,QAAS,gBACzD,CAAC,MAAS,MAAO,KAAQ,MAAO,KAAQ,4EAAiBA,QAAS,gBAClE,CAAC,MAAS,MAAO,KAAQ,MAAO,KAAQ,+IAA6BA,QAAS,iBAGnEyF,GAAoB,CAC/B,CAACpO,KAAM,OAAQC,MAAO,OAAQ0I,QAAS,eACvC,CAAC3I,KAAM,cAAeC,MAAO,KAAM0I,QAAS,eAC5C,CAAC3I,KAAM,MAAOC,MAAO,MAAO0I,QAAS,eACrC,CAAC3I,KAAM,OAAQC,MAAO,OAAQ0I,QAAS,eACvC,CAAC3I,KAAM,WAAYC,MAAO,WAAY0I,QAAS,eAC/C,CAAC3I,KAAM,MAAOC,MAAO,MAAO0I,QAAS,gBCkLvBlL,gBATQ,SAACC,GACrB,MAAO,CACH0P,UAAW1P,EAAM0P,UAAUA,aAOM,CAAEF,sBAA3BzP,EAhME,SAAC,GAA4D,IAA3DjE,EAA0D,EAA1DA,UAAW0T,EAA+C,EAA/CA,kBAA+C,IAA5BE,iBAA4B,MAAlB,GAAkB,EAEpEjG,GAFoE,8DAE1DC,gBAF0D,EAKG/C,KADrEC,EAJkE,EAIlEA,oBAAqBC,EAJ6C,EAI7CA,uBAAwBC,EAJqB,EAIrBA,eACjDE,EALsE,EAKtEA,oBAAqBC,EALiD,EAKjDA,uBAAwBC,EALyB,EAKzBA,eAAgBE,EALS,EAKTA,SALS,EAOJE,KAA/DnK,EAPmE,EAOnEA,OAAQ2K,EAP2D,EAO3DA,aAAcjI,EAP6C,EAO7CA,OAAQ0H,EAPqC,EAOrCA,UAAWlD,EAP0B,EAO1BA,QAASE,EAPiB,EAOjBA,UAPiB,EAQhDhJ,oBAAS,GARuC,mBAQnE0R,EARmE,KAQ5DW,EAR4D,OAS1CrS,mBAAS,IATiC,mBASrEyR,EATqE,KAS1De,EAT0D,KAWtE9H,EAAW0K,mBAGT3C,EAAc,SAACC,GACnBL,GAAUX,GACVc,EAAaE,GAEb,IAAM7Q,EAAaF,EAAiBC,GAE9BgR,EAAU,2BACT/Q,GADS,IAEZ,QAAW,CACP,CACE6Q,QACAhB,MAAOA,EAAO,MAAQ,WAKhCuC,EAAkBrB,GACjBtE,KAAKzC,GAAS,KAmCX5F,EAAM,CACRzF,KAAO6U,UACP9U,GAUJ,OANAJ,qBAAU,WACN8T,IACC3F,KAAKzC,GAAS,MAEhB,IAGC,yBAAKtL,UAAW0F,EAAIC,KAAK,MACrB,gCAAQ,0GAER,kBAAC,GAAD,KACI,kBAAC,GAAD,CACI0C,SA5CG,SAACmG,GAChBA,EAAIC,iBAEJ,IAAMnN,EAAaF,EAAiBC,GAEpCqS,EAAkBpS,GACjByM,KAAKzC,GAAS,IAEf3I,QAAQC,IAAItB,IAqCAiH,QAASA,EACTC,WAAW,iCACXC,UApCE,WACmCpH,EAAxCmF,KAAwCnF,EAAlCyO,QAAkCzO,EAAzBkN,OADH,IACcwG,EADf,aAC6B1T,EAD7B,6BAEpBoH,EAAUsM,EAAY,IAAI,GAC1B5K,EAAS6K,QAAQC,wBAmCL,kBAAC,GAAD,CACIzO,KAAK,OACL2C,MAAM,2EACN3B,SAAUwE,EACVvF,MAAOpF,EAAOmF,KACd0C,UAAWnF,EAAOyC,KAClBoI,UAAW,EACXC,UAAW,MAGf,kBAAC,GAAD,CACQ1F,MAAM,wCACN4F,QAAS2F,GACT1F,aAAa,OACbC,SA7CD,SAACC,EAAD,GAAqC,IAArBC,EAAoB,EAApBA,QAAS1I,EAAW,EAAXA,MAC5C9D,QAAQC,IAAIsM,GACZzD,EAAU,2BACHpK,GADE,kBAEJ8N,EAAU1I,MA0CK2I,SArEP,SAACF,EAAcG,GAC5B1M,QAAQC,IAAIsM,IAqEQ3H,YAAY,mDACZiI,cAAY,EACZrF,SAAUA,MAK1B,kBAAC,GAAD,KACI,+BACI,4BACI,sCACA,kBAAC,GAAD,CACI/E,QAAS,kBAAM8M,EAAY,SAC3B/I,MAAM,2EACN8H,UAAU,OACVC,UAAWA,EACXC,MAAOA,IAEV,kBAAC,GAAD,CACG/L,QAAS,kBAAM8M,EAAY,YAC3B/I,MAAM,kCACN8H,UAAU,UACVC,UAAWA,EACXC,MAAOA,MAKnB,gCAEiB,OAATyC,QAAS,IAATA,OAAA,EAAAA,EAAWlB,QACTkB,EAAUtE,KAAI,SAAC4F,EAAM3F,GACnB,OACI,wBACI7N,IAAKwT,EAAK5E,KACVlL,QAAS,kBAAMuI,EAAQe,KAAR,qBAA2BwG,EAAK5E,SAE/C,4BAAKf,EAAE,GACP,4BAAK2F,EAAK1O,MACV,kBAAC,GAAD,CACI+H,QAAS2G,EAAKpF,cAM1B,kBAAC,GAAD,QAShB,kBAAC,GAAD,CACIrL,MAAO,UACPW,QAAS,kBAAMuI,EAAQe,KAAK,kBAC5BlG,WAAW,8EAGX,kBAAC,GAAD,CACQV,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGjB,kBAAC,GAAD,CACGlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,Q,oBCnDbnH,gBARS,SAACC,GACzB,MAAO,CACLuI,QAASvI,EAAM0P,UAAUnH,WAMa,CACtCqH,2BAAyBE,sBAAoBmB,qBJnDX,SAACpB,GACnC,8CAAO,WAAO3R,GAAP,eAAAC,EAAA,+EAGeE,EAAQC,KAAR,8BAA4C,CAACuR,UAH5D,UAGGrR,EAHH,OAIHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OANhC,wBAODV,EAAS+R,GAAsB,CAACiB,OAAQ,gIAPvC,kBAQMpT,GAAQ,EAAM,+HARpB,eAUDI,EAASyR,GAAsB,CAAEuB,OAAQ1S,EAAIf,KAAKoC,UAVjD,kBAWM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAX9B,iEAeHpB,QAAQC,IAAR,MACAR,EAASyR,GAAsB,CAAEuB,OAAQ,CAAC,KAAMlT,YAhB7C,kBAiBIF,GAAQ,EAAO,CAAC,KAAME,WAjB1B,0DAAP,uDImDA+R,wBAFahQ,EAhIU,SAAC,GAGR,IAFhBjE,EAEe,EAFfA,UAAWyM,EAEI,EAFJA,QAASqH,EAEL,EAFKA,wBAAyBE,EAE9B,EAF8BA,mBACvBC,GACP,EADfkB,qBACe,EADOlB,qBAGf3M,GAFQ,oIAEF+I,eAAN/I,IACDqG,EAAUC,eAHD,EAM4D/C,KADnEC,EALO,EAKPA,oBAAqBC,EALd,EAKcA,uBAAwBC,EALtC,EAKsCA,eACnDE,EANa,EAMbA,oBAAqBC,EANR,EAMQA,uBAAwBC,EANhC,EAMgCA,eAAgBE,EANhD,EAMgDA,SAqB/D1L,qBAAU,WAER,OADAkU,EAAwB,CAACxM,IAClB,WACL0M,EAAmB,CACf1D,KAAM,GACN/B,QAAQ,EACRiG,MAAO,GACPhO,KAAM,QAIX,IAED,IAAMd,EAAM,CACRzF,KAAOoV,iBACPrV,GAEJ,OAAKyM,EAIFA,EAAQ6D,KAKX,yBAAKtQ,UAAW0F,EAAIC,KAAK,MACrB,kBAACuI,GAAA,EAAD,CAAYrJ,IAAI,MAAMsJ,QAAQ,OAC5B,kBAACC,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAG,aAAauJ,OAAK,GAAnD,6EACA,kBAACF,GAAA,EAAD,CAAgBG,QAAM,EAAC1J,IAAI,QAA3B,uEAAgD4H,EAAQjG,OAG1D,gCAAQ,2JACR,kBAAC,GAAD,KACI,kBAAC,GAAD,CACI2C,MAAM,OACNxH,KAAM8K,EAAQ6D,OAElB,kBAAC,GAAD,CACInH,MAAM,2EACNxH,KAAM8K,EAAQjG,OAElB,kBAAC,GAAD,CACI2C,MAAM,uCACNxH,KAAO8K,EAAQqD,QAAqB,yDAAZ,+CAE3B,kBAAC,GAAD,CACG3G,MAAM,QACNxH,KAAM8K,EAAQ+H,SAKtB,kBAAC,GAAD,KACI,kBAAC,GAAD,CACIpP,QAAS,kBAAMuI,EAAQe,KAAR,4BAAkCpH,KACjDkB,WAAW,mFAGf,kBAAC,GAAD,CACEsH,QAASrD,EAAQqD,QACjBF,WAtEO,WACCiB,OAAOC,QAAQ,+JAEjCmD,EAAoB,CAAC3D,KAAMhJ,EAAIwI,SAAS,IACvC/B,KAAKzC,GAAS,IACdyC,MAAK,gBAAEpM,EAAF,EAAEA,KAAF,OAAYqS,EAAmBrS,MACpCqM,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,OAiElBkJ,QAhFI,WACIgB,OAAOC,QAAQ,qKAEjCmD,EAAoB,CAAC3D,KAAMhJ,EAAIwI,SAAS,IACvC/B,KAAKzC,GAAS,IACdyC,MAAK,gBAAEpM,EAAF,EAAEA,KAAF,OAAYqS,EAAmBrS,MACpCqM,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,UA+ExB,kBAAC,GAAD,CACgBmB,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGjB,kBAAC,GAAD,CACGlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,KAtDf,kBAAC,GAAD,MAJA,2I,oBCsFEnH,gBAPS,SAACC,GACvB,MAAO,CACHuI,QAASvI,EAAM0P,UAAUnH,WAKS,CACrCqH,2BAAyBE,sBAAoBC,wBADjChQ,EAzIS,SAAC,GAGlB,IAFLjE,EAEI,EAFJA,UAAW8T,EAEP,EAFOA,wBAAyBE,EAEhC,EAFgCA,mBAAoBvH,EAEpD,EAFoDA,QACxDwH,EACI,EADJA,oBACI,gHAGuEpJ,MADnEC,EAFJ,EAEIA,oBAAqBC,EAFzB,EAEyBA,uBAAwBC,EAFjD,EAEiDA,eACnDE,EAHE,EAGFA,oBAAqBC,EAHnB,EAGmBA,uBAAwBC,EAH3C,EAG2CA,eAAgBE,EAH3D,EAG2DA,SAH3D,EAMwDE,KAArDnK,EANH,EAMGA,OAAQ2K,EANX,EAMWA,aAAcjI,EANzB,EAMyBA,OAAQwE,EANjC,EAMiCA,QAASkD,EAN1C,EAM0CA,UAN1C,EAO0BhM,oBAAS,GAPnC,mBAOG4U,EAPH,KAOYC,EAPZ,KASGhN,EAAM+I,eAAN/I,GACDqG,EAAUC,eAEhBhO,qBAAU,WAGR,OAFAkU,EAAwB,CAACxM,IACxByG,KAAKzC,GAAS,IACR,WACL0I,EAAmB,CACf1D,KAAM,GACN/B,QAAQ,EACRiG,MAAO,GACPhO,KAAM,QAIX,IAEL5G,qBAAU,WACR6L,EAAUgB,GACV6H,EAAU,OAAC7H,QAAD,IAACA,OAAD,EAACA,EAAS8B,UAEnB,CAAC9B,IAEJ,IAsBU/G,EAAM,CACRzF,KAAOqV,gBACPtV,GAEJ,OAAKyM,EAIFA,EAAQ6D,KAKP,yBAAKtQ,UAAW0F,EAAIC,KAAK,MACxB,kBAACuI,GAAA,EAAD,CAAYrJ,IAAI,MAAMsJ,QAAQ,OAC7B,kBAACC,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAG,aAAauJ,OAAK,GAAnD,6EACA,kBAACF,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAE,qBAAgBuC,GAAMgH,OAAK,GAA3D,4EAAgF,gCAAS7B,EAAQjG,OACjG,kBAAC4H,GAAA,EAAD,CAAgBG,QAAM,EAAC1J,IAAI,QAA3B,4HAA8D,gCAAS4H,EAAQjG,QAE7E,mOACE,kBAAC,GAAD,CACE6B,SA3CC,SAACmG,GAChBA,EAAIC,iBACJwF,EAAoB,yBAAC3D,KAAMhJ,GAAOjG,GAAf,IAAuBkN,OAAQ8F,KACjDtG,MAAK,SAACrL,GAEL,OADA4I,IAAW5I,GACJA,KAERqL,MAAK,SAAArL,GACEA,EAAIT,IACJ2B,YAAW,WACT+J,EAAQ8F,WACP,QAGVzF,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,MAC5BhE,QAAQC,IAAIvB,IA6BEkH,QAASA,EACTC,WAAY,0DAEd,kBAAC,GAAD,CACMhC,KAAK,OACL2C,MAAM,2EACNwF,UAAU,EACVnH,SAAUwE,EACVvF,MAAOpF,EAAOmF,KACd0C,UAAWnF,EAAOyC,KAClBoI,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACIrI,KAAK,QACL2C,MAAM,QACNwF,UAAU,EACVnH,SAAUwE,EACVvF,MAAOpF,EAAOmT,MACdtL,UAAWnF,EAAOyQ,MAClBe,QAAS,kBACT3G,UAAW,EACXC,UAAW,MAcnB,kBAAC,GAAD,CACY/G,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGjB,kBAAC,GAAD,CACGlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,KA1Df,kBAAC,GAAD,MAJA,2I,oBChEEoK,GATE,SAAChW,GAEd,OACI,yBAAKQ,UAAWC,KAAOuV,UACnB,6H,oBCRCC,GAAW,CACtB,CACEnO,GAAI,EACJoO,MAAO,8EACPC,MAAO,gOACPC,KAAK,2/FAeLlW,KAAM,4BAER,CACE4H,GAAI,EACJoO,MAAO,+EACPC,MAAO,6JACPC,KAAK,6kQAeLlW,KAAM,4BAER,CACE4H,GAAI,EACJoO,MAAO,8EACPC,MAAO,uSACPC,KAAK,6vIAaLlW,KAAM,4BAER,CACE4H,GAAI,EACJoO,MAAO,8EACPC,MAAO,8UACPC,KAAK,o3LAoBLlW,KAAM,6BCwDGmW,GAAiB,SAAChT,GAC7B,MAAO,CACLS,KxClIwB,ewCmIxBT,WAISiT,GAAiB,SAAC/R,GAC7B,MAAO,CACLT,KxCvI4B,mBwCwI5BS,WAISgS,GAAU,SAACC,GACtB,MAAO,CACL1S,KxC/I4B,mBwCgJ5B0S,SAGSC,GAAiB,SAACxJ,GAC7B,MAAO,CACLnJ,KxCnJ4B,mBwCoJ5BmJ,Y,oBCzHWxI,gBAPS,SAACC,GACvB,MAAO,CACH8R,KAAM9R,EAAMgS,KAAKF,QAKiB,CAACG,aDjCb,WAC1B,8CAAO,WAAO/T,GAAP,SAAAC,EAAA,sDACLD,EAASyT,IAAe,IAExB,IACEzT,EAAS2T,GAAQN,KAYjB,MAAOlM,GACPnH,EAAS0T,GAAe,CAAEE,KAAM,CAAC,wGACjCrT,QAAQC,IAAI2G,GAfd,QAiBCnH,EAASyT,IAAe,IApBpB,2CAAP,wDCgCa5R,EArCF,SAAC,GAAmC,IAAlC+R,EAAiC,EAAjCA,KAAMG,EAA2B,EAA3BA,aAAcxI,EAAa,EAAbA,QAO/B,OALF/N,qBAAU,WACRuW,MAEC,IAGG,yBAAKnW,UAAWC,KAAOmW,MAEnB,0EACA,kBAACC,GAAA,EAAD,CAAWxR,IAAI,MAEXmR,EAAK1G,KAAI,SAAC4F,GACR,OACE,kBAACoB,GAAA,EAAD,CACAtW,UAAWC,KAAOsW,SAChB7U,IAAKwT,EAAK5N,GACVlC,QAAS,kBAAMuI,EAAQe,KAAR,gBAAsBwG,EAAK5N,OAEzC4N,EAAKS,e,oBC4Cb1R,eAAQ,KAAM,CAACuS,gBF4CC,SAACC,GAC9B,8CAAO,WAAOrU,GAAP,iBAAAC,EAAA,6DACLD,EAASyT,IAAe,IADnB,SAGGlU,EAHH,2BAIE8U,GAJF,IAKDlK,aAAchM,MALb,SASegC,EAAQC,KAAR,gBAA8Bb,GAT7C,OAUgB,OADbe,EATH,QAUKG,QAAkBH,EAAIf,KAAKmB,QACjCV,EAAS0T,GAAe,CAAE1V,OAAQ,QAClCgC,EAAS6T,GAAevT,EAAIf,KAAKmB,UAEjCV,EAAS0T,GAAe,CAAE1V,OAAQsC,EAAIf,KAAKoC,UAd1C,gDAiBH3B,EAAS0T,GAAe,CAAE1V,OAAQ,CAAC,wGACnCuC,QAAQC,IAAR,MAlBG,yBAoBHR,EAASyT,IAAe,IApBrB,4EAAP,wDE7Ca5R,EA9DM,SAAC,GAAyB,IAAxBuS,EAAuB,EAAvBA,gBAAuB,EAChB/W,mBAAS,IADO,mBACnCkW,EADmC,KAC5Be,EAD4B,OAElBjX,mBAAS,IAFS,mBAEnCmW,EAFmC,KAE7Be,EAF6B,OAGZlX,mBAAS,IAHG,mBAGnCmX,EAHmC,KAG1BC,EAH0B,KAI1ClU,QAAQC,IAAIgU,GAEZ,IAAME,EAAYjC,mBAElBjV,qBAAU,cAGP,IAeH,OACI,yBAAKI,UAAWC,KAAO8W,cACnB,2HACA,0BAAM1O,SAhBG,SAAChC,GACdA,EAAEoI,iBACF9L,QAAQC,IAAIkU,EAAU9B,QAAQgC,MAAM,IAC3BnG,OAAOC,QAAQ,6NAEpBnO,QAAQC,IAAI,MAEZ4T,EAAgB,OAUZ,4KACA,kBAACnP,GAAA,EAAD,CACI/D,KAAK,OACLkD,KAAK,UACLyQ,SAAUH,EACVtP,SAAU,kBAAMqP,EAAWC,EAAU9B,QAAQgC,MAAM,OAEvD,mIACA,8BACIxQ,KAAK,QACLC,MAAOkP,EACPnO,SAAU,SAACnB,GAAD,OAAOqQ,EAASrQ,EAAEE,OAAOE,QACnCyQ,KAAK,MAET,0GACA,8BACI1Q,KAAK,OACLC,MAAOmP,EACPpO,SAAU,SAACnB,GAAD,OAAOsQ,EAAQtQ,EAAEE,OAAOE,QAClCyQ,KAAK,OAET,kBAACzP,GAAA,EAAD,CACIhD,MAAM,UACNiD,WAAYiO,GAASC,GAAQgB,IAFjC,8F,oBC2CD3S,gBAPS,SAACC,GACrB,MAAO,CACHuI,QAASvI,EAAMgS,KAAKzJ,WAKY,CACpC0K,oBHnE+B,SAAC7P,GAClC,8CAAO,WAAOlF,GAAP,SAAAC,EAAA,sDACLD,EAASyT,IAAe,IAExB,IACEzT,EAAS6T,GAAeR,GAAS2B,MAAK,SAACpB,GAAD,OAAUA,EAAK1O,MAAQA,OAa7D,MAAOiC,GACPnH,EAAS0T,GAAe,CAAErJ,QAAS,CAAC,wGACpC9J,QAAQC,IAAI2G,GAhBd,QAkBEnH,EAASyT,IAAe,IArBrB,2CAAP,uDGmEEwB,uBHzCkC,SAACZ,GACrC,8CAAO,WAAOrU,GAAP,iBAAAC,EAAA,6DACLD,EAASyT,IAAe,IADnB,SAGGlU,EAHH,2BAIE8U,GAJF,IAKDlK,aAAchM,MALb,SAUegC,EAAQC,KAAR,mBAAiCb,GAVhD,OAWgB,OADbe,EAVH,QAWKG,QAAkBH,EAAIf,KAAKmB,QACjCV,EAAS0T,GAAe,CAAE/I,OAAQ,QAClC3K,EAAS6T,GAAevT,EAAIf,KAAKmB,UAEjCV,EAAS0T,GAAe,CAAE/I,OAAQrK,EAAIf,KAAKoC,UAf1C,gDAkBH3B,EAAS0T,GAAe,CAAE/I,OAAQ,CAAC,wGACnCpK,QAAQC,IAAR,MAnBG,yBAqBHR,EAASyT,IAAe,IArBrB,4EAAP,uDGyCEyB,gBHf2B,SAAChQ,GAC9B,8CAAO,WAAOlF,GAAP,iBAAAC,EAAA,6DAELD,EAASyT,IAAe,IAFnB,SAIGlU,EAAO,CACX4K,aAAchM,IACd8L,IAAK,CAAC/E,IANL,SAQe/E,EAAQC,KAAR,mBAAiCb,GARhD,OASgB,OADbe,EARH,QASKG,QAAkBH,EAAIf,KAAKmB,OACjCV,EAAS0T,GAAe,CAAEV,OAAQ,QAElChT,EAAS0T,GAAe,CAAEV,OAAQ1S,EAAIf,KAAKoC,UAZ1C,gDAeH3B,EAAS0T,GAAe,CAAEV,OAAQ,CAAC,wGACnCzS,QAAQC,IAAR,MAhBG,yBAkBHR,EAASyT,IAAe,IAlBrB,4EAAP,wDGWa5R,EA9FK,SAAC,GAOF,IANfwI,EAMc,EANdA,QACA0K,EAKc,EALdA,oBACAE,EAIc,EAJdA,uBAGAE,GACc,EAHdD,gBAGc,EAFd3J,QAEc,EADd4J,OACc,kHACY9X,mBAASgN,EAAQkJ,QAD7B,mBACPA,EADO,KACAe,EADA,OAEUjX,mBAASgN,EAAQmJ,MAF3B,mBAEPA,EAFO,KAEDe,EAFC,OAGgBlX,mBAAS,IAHzB,mBAGPmX,EAHO,KAGEC,EAHF,KAIdlU,QAAQC,IAAIgU,GAEZ,IAAME,EAAYjC,mBAElBjV,qBAAU,WACNuX,EAAoBI,EAAMC,OAAOlQ,MAElC,IACH1H,qBAAU,WACN8W,EAASjK,EAAQkJ,OACjBgB,EAAQlK,EAAQmJ,QACjB,CAACnJ,IAkBJ,OAAOA,GACH,yBAAKzM,UAAWC,KAAOwX,aACvB,kBAACvJ,GAAA,EAAD,CAAYrJ,IAAI,MAAMsJ,QAAQ,OAC5B,kBAACC,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAG,QAAQuJ,OAAK,GAA9C,8CACA,kBAACF,GAAA,EAAD,CAAgBG,QAAM,EAAC1J,IAAI,QAA3B,oFAEE,+GACA,0BAAMwD,SAvBG,SAAChC,GACdA,EAAEoI,iBACF9L,QAAQC,IAAIkU,EAAU9B,QAAQgC,MAAM,IAC3BnG,OAAOC,QAAQ,mOAEpBnO,QAAQC,IAAI,MAEZyU,EAAuB,CACnB/P,GAAImF,EAAQnF,GACZqO,QACAC,OACAgB,eAaA,yGACA,kBAACvP,GAAA,EAAD,CACI/D,KAAK,OACLkD,KAAK,UACLyQ,SAAUH,EACVtP,SAAU,kBAAMqP,EAAWC,EAAU9B,QAAQgC,MAAM,OAEvD,mIACA,8BACIxQ,KAAK,QACLC,MAAOkP,EACPnO,SAAU,SAACnB,GAAD,OAAOqQ,EAASrQ,EAAEE,OAAOE,QACnCyQ,KAAK,MAET,0GACA,8BACI1Q,KAAK,OACLC,MAAOmP,EACPpO,SAAU,SAACnB,GAAD,OAAOsQ,EAAQtQ,EAAEE,OAAOE,QAClCyQ,KAAK,OAET,kBAACzP,GAAA,EAAD,CACIhD,MAAM,WADV,2DAMJ,kBAACgD,GAAA,EAAD,CACIhD,MAAM,SACNzE,UAAU,OACVoF,QAAS,kBAAMzC,QAAQC,IAAI,YAH/B,6F,oBCjCC8U,GAAiC,SAAC3D,GAC7C,8CAAO,WAAO3R,GAAP,eAAAC,EAAA,+EAGeE,EAAQC,KAAR,6CAA2D,CAACuR,UAH3E,UAGGrR,EAHH,OAIHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OANhC,wBAODV,EAASuV,GAA2BjV,EAAIf,KAAKmB,OAAT,mBAAsC,KAPzE,kBAQMd,KARN,eAUDI,EAASwV,GAA6B,CAAEnL,QAAS/J,EAAIf,KAAKoC,UAVzD,kBAWM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAX9B,iEAcHpB,QAAQC,IAAR,MACAR,EAASwV,GAA6B,CAAEnL,QAAS,CAAC,KAAMvK,YAfrD,kBAgBIF,GAAQ,EAAO,CAAC,KAAME,WAhB1B,0DAAP,uDA6EW2V,GAA6B,SAACC,GACzC,MAAO,CACLxU,K5CrCiC,wB4CsCjCwU,qBAISH,GAA4B,SAAClL,GACxC,MAAO,CACLnJ,K5C3CwC,+B4C4CxCmJ,YAMSmL,GAA+B,SAAC7T,GAC3C,MAAO,CACLT,K5CvDqC,4B4CwDrCS,WAGSgU,GAA+B,SAAC7V,GAC3C,MAAO,CACLoB,K5C5DqC,4B4C6DrCpB,YCyIW+B,gBAVS,SAACC,GACrB,MAAO,CACH4T,iBAAkB5T,EAAM4T,iBAAiBA,iBACzClE,UAAW1P,EAAM0P,UAAUA,aAOK,CACpCoE,yBDvQoC,WAAoB,IAAnB1W,EAAkB,uDAAP,GAClD,8CAAO,WAAOc,GAAP,eAAAC,EAAA,+EAGeE,EAAQC,KAAR,oCAAkDlB,GAHjE,UAGGoB,EAHH,OAIHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OANhC,wBAODV,EAASyV,GAA4BnV,EAAIf,KAAKmB,OAAT,qBAPpC,kBAQMd,KARN,eAUDI,EAASwV,GAA6B,CAAEE,iBAAkBpV,EAAIf,KAAKoC,UAVlE,kBAWM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAX9B,iEAcHpB,QAAQC,IAAR,MACAR,EAASwV,GAA6B,CAAEE,iBAAkB,CAAC,KAAM5V,YAf9D,kBAgBIF,GAAQ,EAAO,CAAC,KAAME,WAhB1B,0DAAP,uDCsQ4BwR,sBADfzP,EA7QW,SAAC,GAGR,IAFfjE,EAEc,EAFdA,UAAWgY,EAEG,EAFHA,yBAEG,IAFuBF,wBAEvB,MAFwC,GAExC,EADdlE,EACc,EADdA,UAAWF,EACG,EADHA,kBAGJuE,GAFO,4GAEM5H,eAAb4H,WACDtK,EAAUC,eAEVsK,EAAYrD,mBALJ,EAQ+DhK,KADrEC,EAPM,EAONA,oBAAqBC,EAPf,EAOeA,uBAAwBC,EAPvC,EAOuCA,eACjDE,EARU,EAQVA,oBAAqBC,EARX,EAQWA,uBAAwBC,EARnC,EAQmCA,eAAgBE,EARnD,EAQmDA,SARnD,EAW8CE,KAArDnK,EAXO,EAWPA,OAAQ2K,EAXD,EAWCA,aAAcjI,EAXf,EAWeA,OAAQ0H,EAXvB,EAWuBA,UAAWlD,EAXlC,EAWkCA,QAXlC,EAmCY9I,oBAAS,GAnCrB,mBAmCP0R,EAnCO,KAmCAW,EAnCA,KAqCRI,EAAc,SAACC,GACnBL,GAAUX,GACV,IAAI7P,EAAaF,EAAiBC,GASlC,GAPIC,EAAWQ,cACXR,EAAWQ,YAAcb,OAAOK,EAAWQ,cAE3CR,EAAWS,gBACXT,EAAWS,cAAgBd,OAAOK,EAAWS,gBAG7CT,EAAW6W,aAC2B,IAAlC7W,EAAW6W,YAAYzF,OAAc,CAAC,IAAD,EACNpR,EADM,EAC9B6W,YACP7W,EAFqC,gCAM7C,IAAM+Q,EAAU,2BACT/Q,GADS,IAEZ,QAAW,CACP,CACE6Q,QACAhB,MAAOA,EAAO,MAAQ,WAKhC6G,EAAyB,2BACpB3F,GADmB,IAEtB+F,aAAcH,KAEhBlK,KAAKzC,GAAS,KAIV8D,EAAW,SAACF,EAAcG,GAC5B1M,QAAQC,IAAIsM,GACZzD,EAAU,2BACHpK,GADE,kBAEJgO,EAAYF,QAAUD,EAAaI,KAAI,SAAAC,GAAC,OAAIA,EAAE9I,aA6BjDf,EAAM,CACRzF,KAAOoY,kBACPrY,GAoBJ,OAhBAJ,qBAAU,WACN8T,IACC3F,KAAKzC,GAAS,IACd0C,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,QAE3B,IAEL/G,qBAAU,WACNoY,EAAyB,CACrBI,aAAcH,IAEjBlK,KAAKzC,GAAS,IACd0C,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,QAE3B,IAGD,yBAAK3G,UAAW0F,EAAIC,KAAK,MACzB,kBAACuI,GAAA,EAAD,CAAYrJ,IAAI,MAAMsJ,QAAQ,OAC5B,kBAACC,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAG,YAAYuJ,OAAK,GAAlD,+FACA,kBAACF,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAE,oBAAekT,GAAa3J,OAAK,GAAjE,yFACA,kBAACF,GAAA,EAAD,CAAgBG,QAAM,EAAC1J,IAAI,QAA3B,+HAEE,gCAAQ,2JAER,kBAAC,GAAD,CACKwD,SA1DI,SAACmG,GACdA,EAAIC,iBACJ,IAAInN,EAAaF,EAAiBC,GASlC,GAPIC,EAAWQ,cACXR,EAAWQ,YAAcb,OAAOK,EAAWQ,cAE3CR,EAAWS,gBACXT,EAAWS,cAAgBd,OAAOK,EAAWS,gBAG7CT,EAAW6W,aAC2B,IAAlC7W,EAAW6W,YAAYzF,OAAc,CAAC,IAAD,EACNpR,EADM,EAC9B6W,YACP7W,EAFqC,gCAM7C0W,EAAyB,2BAClB1W,GADiB,IAEpB8W,aAAcH,KAEjBlK,KAAKzC,GAAS,IAEf3I,QAAQC,IAAItB,IAmCJiH,QAASA,EACTC,WAAW,kCAGX,kBAAC,GAAD,CACIW,MAAM,wCACN4F,QAAS2F,GACT1F,aAAa,OACbC,SAtIO,SAACC,EAAD,GAAqC,IAArBC,EAAoB,EAApBA,QAAS1I,EAAW,EAAXA,MAC5C9D,QAAQC,IAAIsM,GACZzD,EAAU,2BACHpK,GADE,kBAEJ8N,EAAU1I,MAmIH2I,SAAUA,EACV7H,YAAY,mDACZiI,cAAY,EACZrF,SAAU+N,IAEd,kBAAC,GAAD,CACI/O,MAAM,gEACN4F,QAAS6F,GACT5F,aAAa,OACbC,SAlIM,SAACC,EAAcoJ,GACjC3V,QAAQC,IAAIsM,GACZzD,EAAU,2BACHpK,GADE,kBAEJiX,EAAanJ,QAAUD,EAAaI,KAAI,SAAAC,GAAC,OAAIA,EAAE9I,aA+HxC2I,SAAUA,EACV7H,YAAY,qDAEf,kBAAC,GAAD,CACOjE,KAAK,SACLkD,KAAK,gBACL2C,MAAM,sEACN3B,SAAUwE,EACVvF,MAAOpF,EAAOU,cACdmH,UAAWnF,EAAOhC,cAClByI,MAAO,CACH+H,MAAM,SAEVC,IAAK,EACLC,IAAK,MAEZ,kBAAC,GAAD,CACOnP,KAAK,SACLkD,KAAK,cACL2C,MAAM,sEACN3B,SAAUwE,EACVvF,MAAOpF,EAAOS,YACdoH,UAAWnF,EAAOjC,YAClB0I,MAAO,CACH+H,MAAM,SAEVC,IAAK,EACLC,IAAK,OAKjB,kBAAC,GAAD,KACI,+BACI,4BACI,wDACA,kBAAC,GAAD,CACIrN,QAAS,kBAAM8M,EAAY,WAC3B/I,MAAM,oCAEV,kBAAC,GAAD,CACI/D,QAAS,kBAAM8M,EAAY,aAC3B/I,MAAM,2DAGV,gEAGR,+BAGQ2O,GAAoBA,EAAiBxI,KAAI,SAAC4F,GACtC,IAAMqD,EAAI,OAAG3E,QAAH,IAAGA,OAAH,EAAGA,EAAWwD,MAAK,SAACmB,GACtB,OAAOA,EAAKjI,OAAS4E,EAAKsD,iBAGlC,OACI,wBACI9W,IAAKwT,EAAK5E,KACVlL,QAAS,kBAAMuI,EAAQe,KAAR,8BAAoCuJ,EAApC,YAAiD/C,EAAK5E,SAErE,mCAAKiI,QAAL,IAAKA,OAAL,EAAKA,EAAM/R,MACX,kBAAC,GAAD,CACI+H,OAAQ2G,EAAK3G,SAEjB,4BAAK2G,EAAKuD,UACV,4BAAKvD,EAAKiD,YAAYxS,KAAK,KAAK+S,qBAUxD,kBAAC,GAAD,CACIjU,MAAO,UACPW,QAAS,kBAAMuI,EAAQe,KAAR,gCAAsCuJ,KACrDzP,WAAW,8EAGX,kBAAC,GAAD,CACQV,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGjB,kBAAC,GAAD,CACGlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,Q,oBCjFbnH,gBARS,SAACC,GACrB,MAAO,CACH0P,UAAW1P,EAAM0P,UAAUA,aAMK,CACnCF,qBAAmBiF,2BF7LkB,SAACjL,GACzC,8CAAO,WAAOtL,GAAP,eAAAC,EAAA,+EAIeE,EAAQC,KAAR,kCAAgDkL,GAJ/D,UAIGhL,EAJH,OAMHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OARhC,wBASCV,EAAS2V,GAA6B,CAAC3X,OAAQ,2KAThD,kBAUQ4B,GAAQ,EAAM,0KAVtB,eAYCI,EAASwV,GAA6B,CAAExX,OAAQsC,EAAIf,KAAKoC,UAZ1D,kBAaQ/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAbhC,iEAgBHpB,QAAQC,IAAI,KAAMV,SAClBE,EAASwV,GAA6B,CAACxX,OAAQ,CAAC,KAAM8B,YAjBnD,kBAkBIF,GAAQ,EAAO,CAAC,KAAME,WAlB1B,0DAAP,wDE2La+B,EA7KmB,SAAC,GAGhB,IAFfjE,EAEc,EAFdA,UAAW4T,EAEG,EAFHA,UAAWF,EAER,EAFQA,kBAAmBiF,EAE3B,EAF2BA,2BAIjCV,GAFM,2FAEQ5H,eAAd4H,WACFtK,EAAUC,eAHF,EAM+D/C,KADrEC,EALM,EAKNA,oBAAqBC,EALf,EAKeA,uBAAwBC,EALvC,EAKuCA,eACjDE,EANU,EAMVA,oBAAqBC,EANX,EAMWA,uBAAwBC,EANnC,EAMmCA,eAAgBE,EANnD,EAMmDA,SANnD,EAS8CE,KAArDnK,EATO,EASPA,OAAQ2K,EATD,EASCA,aAAcjI,EATf,EASeA,OAAQwE,EATvB,EASuBA,QAASkD,EAThC,EASgCA,UAThC,EAWwBhM,mBAAS,CAAC,CAAC+G,KAAM,6GAAyBoS,QAAQ,KAX1E,mBAWPC,EAXO,KAWMC,EAXN,KAmCR1J,EAAW,SAACF,EAAcG,GAC5B1M,QAAQC,IAAIsM,GACZzD,EAAU,2BACHpK,GADE,kBAEJgO,EAAYF,QAAUD,EAAaI,KAAI,SAAAC,GAAC,OAAIA,EAAE9I,aAMvD7G,qBAAU,WACN8T,IACC3F,KAAKzC,GAAS,MAEhB,IACH1L,qBAAU,WACFgU,GACAkF,EAAelF,KAEpB,CAACA,IAOJ,IAAMlO,EAAM,CACRzF,KAAO8Y,0BACP/Y,GA+BJ,OACI,yBAAKA,UAAW0F,EAAIC,KAAK,MACzB,kBAACuI,GAAA,EAAD,CAAYrJ,IAAI,MAAMsJ,QAAQ,OAC5B,kBAACC,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAG,YAAYuJ,OAAK,GAAlD,+FACA,kBAACF,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAE,oBAAekT,GAAa3J,OAAK,GAAjE,yFACA,kBAACF,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAE,8BAAyBkT,GAAa3J,OAAK,GAA3E,8HACA,kBAACF,GAAA,EAAD,CAAgBG,QAAM,EAAC1J,IAAI,QAA3B,wEAEG,gCAAQ,6KACT,kBAAC,GAAD,CACIwD,SAtCK,SAACmG,GACdA,EAAIC,iBACJ,IAAMuK,EAAe,2BACd3X,GADc,IAEjB+W,aAAcH,IAEde,EAAgBP,WAChBO,EAAgBP,SAAWxX,OAAO+X,EAAgBP,WAEtD9V,QAAQC,IAAIoW,GAEZL,EAA2BK,GAC1BjL,MAAK,SAACrL,GAEH,OADA4I,IAAW5I,GACJA,KAERqL,MAAK,SAAArL,GACEA,EAAIT,IACJ2B,YAAW,WACT+J,EAAQ8F,WACP,QAGV1F,MAAK,kBAAMpL,QAAQC,IAAI,iCACvBoL,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,OAetB4B,QAASA,GAEL,kBAAC,GAAD,CACIY,MAAM,2BACN4F,QAAS8J,EACT7J,aAAa,OACbC,SA3FC,SAACC,EAAcoJ,GAChC3V,QAAQC,IAAIsM,GACZzD,EAAU,2BACHpK,GADE,IAELmX,cAAeF,EAAahI,SAwFhBlB,SAAUA,EACV7H,YAAY,mDACZiI,cAAY,IAEf,kBAAC,GAAD,CACGrG,MAAM,wCACN4F,QAAS2F,GACT1F,aAAa,OACbC,SA3GG,SAACC,EAAD,GAAqC,IAArBC,EAAoB,EAApBA,QAAS1I,EAAW,EAAXA,MAC5C9D,QAAQC,IAAIsM,GACZzD,EAAU,2BACHpK,GADE,kBAEJ8N,EAAU1I,MAwGC2I,SAAUA,EACV7H,YAAY,mDACZiI,cAAY,IAEhB,kBAAC,GAAD,CACIrG,MAAM,8FACN4F,QAAS6F,GACT5F,aAAa,OACbC,SAtGE,SAACC,EAAcoJ,GACjC3V,QAAQC,IAAIsM,GACZzD,EAAU,2BACHpK,GADE,kBAEJiX,EAAanJ,QAAUD,EAAaI,KAAI,SAAAC,GAAC,OAAIA,EAAE9I,aAmGpC2I,SAAUA,EACV7H,YAAY,qDAEhB,kBAAC,GAAD,CACIjE,KAAK,SACLkD,KAAK,WACL2C,MAAM,yDACN3B,SAAUwE,EACVvF,MAAOpF,EAAOoX,UAAY,GAC1BvP,UAAWnF,EAAO0U,SAClBjG,IAAK,EACLC,IAAK,OAMjB,kBAAC,GAAD,CACY3K,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGjB,kBAAC,GAAD,CACGlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,Q,qBC5BbnH,gBAPS,SAACC,GACvB,MAAO,CACLuI,QAASvI,EAAM4T,iBAAiBrL,WAKI,CACtCiL,kCAAgCuB,4BHxDS,SAAClF,GAC1C,8CAAO,WAAO3R,GAAP,eAAAC,EAAA,+EAGeE,EAAQC,KAAR,uCAAqD,CAACuR,UAHrE,UAGGrR,EAHH,OAIHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OANhC,wBAODV,EAAS2V,GAA6B,CAAC3C,OAAQ,+JAP9C,kBAQMpT,GAAQ,EAAM,8JARpB,eAUDI,EAASwV,GAA6B,CAAExC,OAAQ1S,EAAIf,KAAKoC,UAVxD,kBAWM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAX9B,iEAeHpB,QAAQC,IAAR,MACAR,EAASwV,GAA6B,CAAExC,OAAQ,CAAC,KAAMlT,YAhBpD,kBAiBIF,GAAQ,EAAO,CAAC,KAAME,WAjB1B,0DAAP,uDGuD6DyV,8BADhD1T,EArIkB,SAAC,GAGjB,IAFfjE,EAEc,EAFdA,UAAWyM,EAEG,EAFHA,QAASiL,EAEN,EAFMA,+BAAgCuB,EAEtC,EAFsCA,4BACpDtB,EACc,EADdA,0BACc,sIAEUtH,gBAAjB4H,EAFO,EAEPA,UAAW3Q,EAFJ,EAEIA,GACZqG,EAAUC,eAHF,EAM6D/C,KADnEC,EALM,EAKNA,oBAAqBC,EALf,EAKeA,uBAAwBC,EALvC,EAKuCA,eACnDE,EANY,EAMZA,oBAAqBC,EANT,EAMSA,uBAAwBC,EANjC,EAMiCA,eAAgBE,EANjD,EAMiDA,SAG/D1L,qBAAU,WAKR,OAHA8X,EAA+B,CAACpQ,IAC/ByG,KAAKzC,GAAS,IAER,WACLqM,EAA0B,CACxBrH,KAAM,GACNkI,cAAe,GACfjK,OAAQ,GACR4J,YAAa,GACbC,aAAc,GACdK,SAAU,QAIb,IAEH,IAsBQ/S,EAAM,CACRzF,KAAOiZ,yBACPlZ,GAEJ,OAAKyM,EAIAA,EAAQ6D,KAKT,yBAAKtQ,UAAW0F,EAAIC,KAAK,MACzB,kBAACuI,GAAA,EAAD,CAAYrJ,IAAI,MAAMsJ,QAAQ,OAC5B,kBAACC,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAG,YAAYuJ,OAAK,GAAlD,+FACA,kBAACF,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAE,oBAAekT,GAAa3J,OAAK,GAAjE,yFACA,kBAACF,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAE,8BAAyBkT,GAAa3J,OAAK,GAA3E,8HACA,kBAACF,GAAA,EAAD,CAAgBG,QAAM,EAAC1J,IAAI,QAA3B,wEAEG,gCAAQ,oLACT,kBAAC,GAAD,KACE,kBAAC,GAAD,CACIsE,MAAM,OACNxH,KAAM8K,EAAQ6D,OAElB,kBAAC,GAAD,CACInH,MAAM,2BACNxH,KAAM8K,EAAQ+L,gBAElB,kBAAC,GAAD,CACIrP,MAAM,uCACNxH,KAAO8K,EAAQ8B,OAAU,6CAAc,2DAE3C,kBAAC,GAAD,CACIpF,MAAM,yDACNxH,KAAM8K,EAAQgM,WAElB,kBAAC,GAAD,CACItP,MAAM,gEACNxH,KAAM8K,EAAQ0L,YAAYxS,KAAK,KAAK+S,iBAK9C,kBAAC,GAAD,KACM,kBAAC,GAAD,CACMjU,MAAO,YACPW,QAAS,kBAAMuI,EAAQe,KAAR,8BAAoCuJ,EAApC,YAAiD3Q,EAAjD,aACfkB,WAAW,mFAEf,kBAAC,GAAD,CACI/D,MAAO,SACPW,QA3ED,WACGyL,OAAOC,QAAQ,iIAE/BmI,EAA4B,CAAC3R,IAC5ByG,MAAK,SAACrL,GAEL,OADA4I,IAAW5I,GACJA,KAERqL,MAAK,SAAArL,GACEA,EAAIT,IACJ2B,YAAW,WACT+J,EAAQ8F,WACP,QAGV1F,MAAK,WACJpL,QAAQC,IAAI,kCAEboL,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,OA0Dd6B,WAAW,gDAIb,kBAAC,GAAD,CACMV,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGjB,kBAAC,GAAD,CACGlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,KA1Db,kBAAC,GAAD,MAJF,0K,+BCwKEnH,gBATS,SAACC,GACvB,MAAO,CACH0P,UAAW1P,EAAM0P,UAAUA,UAC3BnH,QAASvI,EAAM4T,iBAAiBrL,WAME,CACtCiH,qBAAmBgE,kCAAgCyB,2BJ3KX,SAACC,GACzC,8CAAO,WAAOhX,GAAP,eAAAC,EAAA,+EAGeE,EAAQC,KAAR,qCAAmD4W,GAHlE,UAGG1W,EAHH,OAIHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OANhC,wBAODV,EAAS2V,GAA6B,CAAChL,OAAQ,2PAP9C,kBAQM/K,GAAQ,EAAM,0PARpB,eAUDI,EAASwV,GAA6B,CAAE7K,OAAQrK,EAAIf,KAAKoC,UAVxD,kBAWM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAX9B,iEAcHpB,QAAQC,IAAR,MACAR,EAASwV,GAA6B,CAAE7K,OAAQ,CAAC,KAAM7K,YAfpD,kBAgBIF,GAAQ,EAAO,CAAC,KAAME,WAhB1B,0DAAP,uDI2KAyV,8BAFa1T,EA9NiB,SAAC,GAGhB,IAFfjE,EAEc,EAFdA,UAAW4T,EAEG,EAFHA,UAAWF,EAER,EAFQA,kBAAmBgE,EAE3B,EAF2BA,+BACzCjL,EACc,EADdA,QAAS0M,EACK,EADLA,2BAA4BxB,EACvB,EADuBA,0BACvB,qKAEYtH,gBAAlB4H,EAFM,EAENA,UAAW3Q,EAFL,EAEKA,GACbqG,EAAUC,eAHF,EAM6D/C,KADnEC,EALM,EAKNA,oBAAqBC,EALf,EAKeA,uBAAwBC,EALvC,EAKuCA,eACnDE,EANY,EAMZA,oBAAqBC,EANT,EAMSA,uBAAwBC,EANjC,EAMiCA,eAAgBE,EANjD,EAMiDA,SANjD,EAS8CE,KAArDnK,EATO,EASPA,OAAQ2K,EATD,EASCA,aAAcjI,EATf,EASeA,OAAQwE,EATvB,EASuBA,QAASkD,EAThC,EASgCA,UAThC,EAUwBhM,mBAAS,CAAC,CAAC+G,KAAM,6GAAyBoS,QAAQ,KAV1E,mBAUPC,EAVO,KAUMC,EAVN,OAW4BrZ,mBAAS,CAAC,CAAC+G,KAAM,2EAX7C,mBAWP6S,EAXO,KAWQC,EAXR,OAYgC7Z,mBAAS,CAAC,CAAC+G,KAAM,2EAZjD,mBAYP+S,EAZO,KAYUC,EAZV,OAawC/Z,mBAAS,CAAC,CAAC+G,KAAM,2EAbzD,mBAaPiT,EAbO,KAacC,EAbd,KAqCNtK,EAAW,SAACF,EAAcG,GAC5B1M,QAAQC,IAAIsM,GACZzD,EAAU,2BACHpK,GADE,kBAEJgO,EAAYF,QAAUD,EAAaI,KAAI,SAAAC,GAAC,OAAIA,EAAE9I,aAGvD7G,qBAAU,WAIR,OAFA8X,EAA+B,CAACpQ,IAEzB,WACLqQ,EAA0B,CACxBrH,KAAM,GACNkI,cAAe,GACfjK,OAAQ,GACR4J,YAAa,GACbC,aAAc,GACdK,SAAU,QAIb,IACH7Y,qBAAU,WACR8T,MAED,IACH9T,qBAAU,WACFgU,GACAkF,EAAelF,KAEpB,CAACA,IAEJhU,qBAAU,WACR6L,EAAUgB,KAET,CAACA,IAEJ7M,qBAAU,WACR,GAAI6M,GAAWmH,EAAW,CAExB,IAAM+F,EAAkB,aAAI/F,GAAWwD,MAAK,SAAA7H,GAAC,OAAIA,EAAEe,OAAS7D,EAAQ+L,kBACpE,OAAImB,QAAJ,IAAIA,OAAJ,EAAIA,EAAiBnT,OACnB8S,EAAiB,CAACK,IAGpB,IAAMC,EAAWlF,GAAc0C,MAAK,SAAA7H,GAAC,OAAIA,EAAE9I,QAAUgG,EAAQ8B,UAEzDqL,GACFJ,EAAmB,CAACI,IAGtB,IAAMC,EAAwBjF,GAAkBkF,QAAO,SAAAvK,GACrD,OAAO9C,EAAQ0L,YAAYpS,SAASwJ,EAAE9I,UAGpCoT,EAAsBnH,QACxBgH,EAAuBG,MAI1B,CAACpN,EAASmH,IAEX,IAAMlO,EAAM,CACRzF,KAAO8Z,wBACP/Z,GA2BN,OAAKyM,EAIAA,EAAQ6D,KAKP,yBAAKtQ,UAAW0F,EAAIC,KAAK,MACzB,kBAACuI,GAAA,EAAD,CAAYrJ,IAAI,MAAMsJ,QAAQ,OAC5B,kBAACC,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAG,YAAYuJ,OAAK,GAAlD,+FACA,kBAACF,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAE,oBAAekT,GAAa3J,OAAK,GAAjE,yFACA,kBAACF,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAE,8BAAyBkT,GAAa3J,OAAK,GAA3E,8HACA,kBAACF,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAE,8BAAyBkT,EAAzB,YAAsC3Q,GAAMgH,OAAK,GAAjF,uEACA,kBAACF,GAAA,EAAD,CAAgBG,QAAM,EAAC1J,IAAI,QAA3B,wHAEI,gCAAQ,qMACV,kBAAC,GAAD,CACIwD,SA3CK,SAACmG,GAChBA,EAAIC,iBACJ,IAAMuK,EAAe,eACd3X,GAGH2X,EAAgBP,WAChBO,EAAgBP,SAAWxX,OAAO+X,EAAgBP,WAEtD9V,QAAQC,IAAIoW,GAEZG,EAA2BH,GAC1BjL,KAAKzC,KACLyC,MAAK,SAAArL,GACAA,EAAIT,IACJ2B,YAAW,WACT+J,EAAQ8F,WACP,QAGR1F,MAAK,kBAAMpL,QAAQC,IAAI,kCAwBd2F,QAASA,EACTC,WAAW,oDAEP,kBAAC,GAAD,CACIW,MAAM,2BACN4F,QAAS8J,EACT7J,aAAa,OACbC,SAtIC,SAACC,EAAcoJ,GAChC3V,QAAQC,IAAIsM,GACZzD,EAAU,2BACHpK,GADE,IAELmX,cAAeF,EAAahI,SAmIhBlB,SAAUA,EACV7H,YAAY,mDACZiI,cAAY,EACZwK,eAAgBX,IAEnB,kBAAC,GAAD,CACGlQ,MAAM,wCACN4F,QAAS2F,GACT1F,aAAa,OACbC,SAvJC,SAACC,EAAD,GAAqC,IAArBC,EAAoB,EAApBA,QAAS1I,EAAW,EAAXA,MAC9C9D,QAAQC,IAAIsM,GACZzD,EAAU,2BACCpK,GADF,kBAEA8N,EAAU1I,MAoJC2I,SAAUA,EACV7H,YAAY,mDACZiI,cAAY,EACZwK,eAAgBT,IAEpB,kBAAC,GAAD,CACIpQ,MAAM,8FACN4F,QAAS6F,GACT5F,aAAa,OACbC,SAnJE,SAACC,EAAcoJ,GACjC3V,QAAQC,IAAIsM,GACZzD,EAAU,2BACHpK,GADE,kBAEJiX,EAAanJ,QAAUD,EAAaI,KAAI,SAAAC,GAAC,OAAIA,EAAE9I,aAgJpC2I,SAAUA,EACV7H,YAAY,mDACZyS,eAAgBP,IAGpB,kBAAC,GAAD,CACInW,KAAK,SACLkD,KAAK,WACL2C,MAAM,yDACN3B,SAAUwE,EACVvF,MAAOpF,EAAOoX,UAAY,GAC1BvP,UAAWnF,EAAO0U,SAClBjG,IAAK,EACLC,IAAK,OAKjB,kBAAC,GAAD,CACI3K,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGT,kBAAC,GAAD,CACGlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,KAtEf,kBAAC,GAAD,MAJF,0K,oBCrGE6O,GAAyB,SAAClG,GACrC,8CAAO,WAAO3R,GAAP,eAAAC,EAAA,+EAGeE,EAAQC,KAAR,mCAAiD,CAACuR,UAHjE,UAGGrR,EAHH,OAIHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OANhC,wBAODV,EAAS8X,GAAmBxX,EAAIf,KAAKmB,OAAOqX,SAAS,KAPpD,kBAQMnY,KARN,eAUDI,EAASgY,GAAqB,CAAE3N,QAAS/J,EAAIf,KAAKoC,UAVjD,kBAWM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAX9B,iEAcHpB,QAAQC,IAAR,MACAR,EAASgY,GAAqB,CAAE3N,QAAS,CAAC,KAAMvK,YAf7C,kBAgBIF,GAAQ,EAAO,CAAC,KAAME,WAhB1B,0DAAP,uDAqBWmY,GAAqB,SAACjB,GACjC,8CAAO,WAAOhX,GAAP,eAAAC,EAAA,+EAGeE,EAAQC,KAAR,4BAA0C4W,GAHzD,UAGG1W,EAHH,OAIHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OANhC,wBAODV,EAASkY,GAAqB,CAACvN,OAAQ,4NAPtC,kBAQM/K,GAAQ,EAAM,yNAA2CU,EAAIf,KAAKmB,SARxE,eAUDV,EAASgY,GAAqB,CAAErN,OAAQrK,EAAIf,KAAKoC,UAVhD,kBAWM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAX9B,iEAcHpB,QAAQC,IAAR,MACAR,EAASgY,GAAqB,CAAErN,OAAQ,CAAC,KAAM7K,YAf5C,kBAgBIF,GAAQ,EAAO,CAAC,KAAME,WAhB1B,0DAAP,uDAuDWqY,GAAqB,SAACJ,GACjC,MAAO,CACL7W,KjDhFwB,eiDiFxB6W,aAISD,GAAoB,SAACzN,GAChC,MAAO,CACLnJ,KjDtF+B,sBiDuF/BmJ,YAMS2N,GAAuB,SAACrW,GACnC,MAAO,CACLT,KjDlG4B,mBiDmG5BS,WAGSuW,GAAuB,SAACpY,GACnC,MAAO,CACLoB,KjDvG4B,mBiDwG5BpB,Y,oBCpHWsY,GAjCO,SAAC,GAAkC,IAAjCxa,EAAgC,EAAhCA,UAAWmJ,EAAqB,EAArBA,MAAU3J,EAAW,wCAExBC,mBAAS,IAFe,mBAE/CmK,EAF+C,KAEtCC,EAFsC,KAItDjK,qBAAU,WACRiK,EAAW,GAAD,OAAIC,OAAOpG,KAAKqG,UAAUC,MAAM,OACzC,IAED,IAAMtE,EAAM,CACRzF,KAAOua,cACPxa,GAGJ,OACE,kBAAC,GAAD,CAAaA,UAAW0F,EAAIC,KAAK,MAC7B,kBAAC,GAAD,CACG3F,UAAWC,KAAO8I,YAEnB,2BAAOkB,QAASL,GAAUT,IAE5B,kBAAC,GAAD,CACEnJ,UAAWC,KAAO6I,YAEhB,4CACIxB,GAAIsC,GACApK,OCwJPyE,eAAQ,KAAM,CAAEwW,mBFnLG,SAAC/M,GACjC,8CAAO,WAAOtL,GAAP,eAAAC,EAAA,+EAIeE,EAAQC,KAAR,yBAAuCkL,GAJtD,UAIGhL,EAJH,OAMHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OARhC,wBASCV,EAASkY,GAAqB,CAACla,OAAQ,kJATxC,kBAUQ4B,GAAQ,EAAM,+IAA6BU,EAAIf,KAAKmB,SAV5D,eAYCV,EAASgY,GAAqB,CAAEha,OAAQsC,EAAIf,KAAKoC,UAZlD,kBAaQ/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAbhC,iEAgBHpB,QAAQC,IAAI,KAAMV,SAClBE,EAASgY,GAAqB,CAACha,OAAQ,CAAC,KAAM8B,YAjB3C,kBAkBIF,GAAQ,EAAO,CAAC,KAAME,WAlB1B,0DAAP,wDEkLa+B,EAzKS,SAAC,GAA+C,IAAD,kBAA7CjE,EAA6C,EAA7CA,UAAWya,EAAkC,EAAlCA,mBAE3B9M,GAF6D,mDAEnDC,gBAFmD,EAIKpC,KAAjEnK,EAJ4D,EAI5DA,OAAQ2K,EAJoD,EAIpDA,aAAcjI,EAJsC,EAItCA,OAAQwE,EAJ8B,EAI9BA,QAASkD,EAJqB,EAIrBA,UAAWE,EAJU,EAIVA,WAJU,EAOnDd,KAFRC,EAL2D,EAK3DA,oBAAqBC,EALsC,EAKtCA,uBAAwBC,EALc,EAKdA,eACjDE,EAN+D,EAM/DA,oBAAqBC,EAN0C,EAM1CA,uBAAwBC,EANkB,EAMlBA,eAC7CE,EAP+D,EAO/DA,SAEM5F,EAAM,CACZzF,KAAOya,gBACP1a,GAGJJ,qBAAU,WACN+L,GAAW,KAEZ,IAEH,IAAMgP,EAAuB,SAACnM,GAAS,IAAD,EACZA,EAAIjI,OAAnBC,EAD2B,EAC3BA,KAAMC,EADqB,EACrBA,MACTmU,EAAW,GAEbA,EADEvZ,EAAOuZ,SACD,2BACHvZ,EAAOuZ,UADJ,kBAELpU,EAAOC,IAGF,eACLD,EAAOC,GAGZgF,EAAU,2BACLpK,GADI,IAEPuZ,cAEFjP,EAAW6C,EAAIjI,OAAO2F,QAAQ,QAAQC,kBAkB1C,OACI,yBAAKnM,UAAW0F,EAAIC,KAAK,MACvB,kBAACuI,GAAA,EAAD,CAAYrJ,IAAI,MAAMsJ,QAAQ,OAC9B,kBAACC,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAG,YAAYuJ,OAAK,GAAlD,oDACA,kBAACF,GAAA,EAAD,CAAgBG,QAAM,EAAC1J,IAAI,QAA3B,mHAEE,gCAAQ,kIACJ,kBAAC,GAAD,CACI7E,UAAWC,KAAOmQ,QAClB/H,SAxBC,SAACmG,GACdA,EAAIC,iBACJ9L,QAAQC,IAAIvB,GACZoZ,EAAmBpZ,GAClB0M,MAAK,SAACrL,GACH4I,IAAW5I,GACPA,EAAIT,IACJ2B,YAAW,WAAO,IAAD,EACb+J,EAAQe,KAAR,8BAA0BhM,EAAIf,YAA9B,aAA0B,EAAU2O,SACrC,QAGVtC,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,OAahB4B,QAASA,GAET,kBAAC,GAAD,CACK/B,KAAK,MACN2C,MAAM,qBACN3B,SAAUwE,EACVvF,MAAOpF,EAAOwZ,IACd3R,UAAWnF,EAAO8W,IAClBjM,UAAW,GACXC,UAAW,GACXiM,MAAM,4GACNpR,cAAezJ,KAAOyJ,gBAE1B,kBAAC,GAAD,CACKlD,KAAK,OACL2C,MAAM,2EACPwF,UAAU,EACVnH,SAAUwE,EACVvF,MAAOpF,EAAOmF,KACd0C,UAAWnF,EAAOyC,KAClBoI,UAAW,EACXC,UAAW,IACXiM,MAAM,0GAEV,kBAAC,GAAD,CACKtU,KAAK,QACL2C,MAAM,QACN7F,KAAK,QACNqL,UAAU,EACVnH,SAAUwE,EACVvF,MAAOpF,EAAO2E,MACdkD,UAAWnF,EAAOiC,MAClB4I,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACKrI,KAAK,eACL2C,MAAM,iHACP3B,SAAUmT,EACVlU,MAAK,UAAEpF,EAAOuZ,gBAAT,aAAE,EAAiBG,aACxB7R,UAAS,UAAEnF,EAAO6W,gBAAT,aAAE,EAAiBG,aAC5BnM,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACKrI,KAAK,0BACL2C,MAAM,qJACP3B,SAAUmT,EACVlU,MAAK,UAAEpF,EAAOuZ,gBAAT,aAAE,EAAiBI,wBACxB9R,UAAS,UAAEnF,EAAO6W,gBAAT,aAAE,EAAiBI,wBAC5BpM,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACKrI,KAAK,gBACL2C,MAAM,qGACP3B,SAAUmT,EACVlU,MAAK,UAAEpF,EAAOuZ,gBAAT,aAAE,EAAiBK,cACxB/R,UAAS,UAAEnF,EAAO6W,gBAAT,aAAE,EAAiBK,cAC5BrM,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACKrI,KAAK,gBACL2C,MAAM,yIACP3B,SAAUmT,EACVlU,MAAK,UAAEpF,EAAOuZ,gBAAT,aAAE,EAAiBM,cACxBhS,UAAS,UAAEnF,EAAO6W,gBAAT,aAAE,EAAiBM,cAC5BtM,UAAW,EACXC,UAAW,MAEhB,kBAAC,GAAD,CACKrI,KAAK,qBACL2C,MAAM,4HACN+N,KAAK,IACL1P,SAAUmT,EACVlU,MAAK,UAAEpF,EAAOuZ,gBAAT,aAAE,EAAiBO,sBAMpC,kBAAC,GAAD,CACIrT,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGb,kBAAC,GAAD,CACIlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,Q,qBCtHZgQ,GAAsB,SAACrH,GAClC,8CAAO,WAAO3R,GAAP,eAAAC,EAAA,+EAGeE,EAAQC,KAAR,iCAA+C,CAACuR,UAH/D,UAGGrR,EAHH,OAIHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OANhC,wBAODV,EAASiZ,GAAgB3Y,EAAIf,KAAKmB,OAAOwY,OAAO,KAP/C,kBAQMtZ,KARN,eAUDI,EAASmZ,GAAkB,CAAE9O,QAAS/J,EAAIf,KAAKoC,UAV9C,kBAWM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAX9B,iEAcHpB,QAAQC,IAAR,MACAR,EAASmZ,GAAkB,CAAE9O,QAAS,CAAC,KAAMvK,YAf1C,kBAgBIF,GAAQ,EAAO,CAAC,KAAME,WAhB1B,0DAAP,uDAqBWsZ,GAAkB,SAACC,GAC9B,8CAAO,WAAOrZ,GAAP,eAAAC,EAAA,+EAGeE,EAAQC,KAAR,0BAAwCiZ,GAHvD,UAGG/Y,EAHH,OAIHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OANhC,wBAODV,EAASsZ,GAAkB,CAAC3O,OAAQ,4NAPnC,kBAQM/K,GAAQ,EAAM,yNAA2CU,EAAIf,KAAKmB,SARxE,eAUDV,EAASmZ,GAAkB,CAAExO,OAAQrK,EAAIf,KAAKoC,UAV7C,kBAWM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAX9B,iEAcHpB,QAAQC,IAAR,MACAR,EAASmZ,GAAkB,CAAExO,OAAQ,CAAC,KAAM7K,YAfzC,kBAgBIF,GAAQ,EAAO,CAAC,KAAME,WAhB1B,0DAAP,uDAuDWyZ,GAAkB,SAACC,GAC9B,MAAO,CACLtY,KpDzDqB,YoD0DrBsY,UAISP,GAAiB,SAAC5O,GAC7B,MAAO,CACLnJ,KpD/D4B,mBoDgE5BmJ,YAMS8O,GAAoB,SAACxX,GAChC,MAAO,CACLT,KpD3EyB,gBoD4EzBS,WAGS2X,GAAoB,SAACxZ,GAChC,MAAO,CACLoB,KpDhFyB,gBoDiFzBpB,YCwNW+B,gBATS,SAACC,GACrB,MAAO,CACHuI,QAASvI,EAAMiW,SAAS1N,QACxBmP,MAAO1X,EAAM0X,MAAMA,SAON,CACb3B,0BAAwBC,qBAAmB2B,oBJnRhB,SAAC9H,GAClC,8CAAO,WAAO3R,GAAP,eAAAC,EAAA,+EAGeE,EAAQC,KAAR,6BAA2C,CAACuR,UAH3D,UAGGrR,EAHH,OAIHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OANhC,wBAODV,EAASkY,GAAqB,CAAClF,OAAQ,gIAPtC,kBAQMpT,GAAQ,EAAM,+HARpB,eAUDI,EAASgY,GAAqB,CAAEhF,OAAQ1S,EAAIf,KAAKoC,UAVhD,kBAWM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAX9B,iEAeHpB,QAAQC,IAAR,MACAR,EAASgY,GAAqB,CAAEhF,OAAQ,CAAC,KAAMlT,YAhB5C,kBAiBIF,GAAQ,EAAO,CAAC,KAAME,WAjB1B,0DAAP,uDImRM4Z,cDzVqB,WAAoB,IAAnBxa,EAAkB,uDAAP,GACvC,8CAAO,WAAOc,GAAP,eAAAC,EAAA,+EAGeE,EAAQC,KAAR,wBAAsClB,GAHrD,UAGGoB,EAHH,OAIHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OANhC,wBAODV,EAASuZ,GAAiBjZ,EAAIf,KAAKmB,OAAOwY,SAPzC,kBAQMtZ,KARN,eAUDI,EAASmZ,GAAkB,CAAED,OAAQ5Y,EAAIf,KAAKoC,UAV7C,kBAWM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAX9B,iEAcHpB,QAAQC,IAAR,MACAR,EAASmZ,GAAkB,CAAED,OAAQ,CAAC,KAAMpZ,YAfzC,kBAgBIF,GAAQ,EAAO,CAAC,KAAME,WAhB1B,0DAAP,uDCwVqBmY,uBAHRpW,EAtVQ,SAAC,GAGJ,IAAD,UAFfjE,EAEe,EAFfA,UAAWyM,EAEI,EAFJA,QAASwN,EAEL,EAFKA,uBAAwBC,EAE7B,EAF6BA,kBAC5C4B,GACe,EAFgDD,oBAEhD,EADfC,eAAeF,EACA,EADAA,MAAOvB,EACP,EADOA,mBAGjB/S,GAFU,wJAEJ+I,eAAN/I,IACDqG,EAAUC,eAHC,EAK0CpC,KAApDnK,EALU,EAKVA,OAAQ2K,EALE,EAKFA,aAAcjI,EALZ,EAKYA,OAAQwE,EALpB,EAKoBA,QAASE,EAL7B,EAK6BA,UAL7B,EAS0DoC,KADnEC,EARS,EAQTA,oBAAqBC,EARZ,EAQYA,uBAAwBC,EARpC,EAQoCA,eACnDE,EATe,EASfA,oBAAqBC,EATN,EASMA,uBAAwBC,EAT9B,EAS8BA,eAAgBE,EAT9C,EAS8CA,SAT9C,EAWS7L,oBAAS,GAXlB,mBAWV0R,EAXU,KAWHW,EAXG,OAYiBrS,mBAAS,IAZ1B,mBAYVyR,EAZU,KAYCe,EAZD,KAcXC,EAAc,SAACC,GACnBL,GAAUX,GACVc,EAAaE,GAEb,IAAM7Q,EAAaF,EAAiBC,GAE9BgR,EAAU,2BACT/Q,GADS,IAEZ,QAAW,CACP,CACE6Q,QACAhB,MAAOA,EAAO,MAAQ,WAKhC2K,EAAc,2BACPzJ,GADM,IAET+F,aAAc9Q,KAEjByG,KAAKzC,GAAS,IACd0C,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,OA8C9B/G,qBAAU,WAGR,OA7CAqa,EAAuB,CAAC3S,IACvByG,KAAKzC,GAAS,IACd0C,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,MA2CrB,WACHuT,EAAkB,CACd5J,KAAM,GACNuK,IAAK,GACLrU,KAAM,QAIb,IAEH5G,qBAAU,WAOR,OANAkc,EAAc,CACV1D,aAAc9Q,IAEjByG,KAAKzC,GAAS,IACd0C,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,MAErB,eAIN,IAED,IAAMjB,EAAM,CACRzF,KAAO8b,eACP/b,GAEJ,OAAKyM,EAIAA,EAAQ6D,KAKT,yBAAKtQ,UAAW0F,EAAIC,KAAK,MACzB,kBAACuI,GAAA,EAAD,CAAYrJ,IAAI,MAAMsJ,QAAQ,OAC5B,kBAACC,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAG,YAAYuJ,OAAK,GAAlD,+FACA,kBAACF,GAAA,EAAD,CAAgBG,QAAM,EAAC1J,IAAI,QAA3B,8FAAyD,gCAAS4H,EAAQjG,QAExE,gCAAQ,qJACR,kBAAC,GAAD,KACI,kBAAC,GAAD,CACI2C,MAAM,OACNxH,KAAM8K,EAAQ6D,OAElB,kBAAC,GAAD,CACInH,MAAM,qBACNxH,KAAM8K,EAAQoO,MAElB,kBAAC,GAAD,CACI1R,MAAM,2EACNxH,KAAM8K,EAAQjG,OAElB,kBAAC,GAAD,CACI2C,MAAM,QACNxH,KAAM8K,EAAQzG,QAElB,kBAAC,GAAD,CACImD,MAAM,iHACNxH,KAAI,UAAE8K,EAAQmO,gBAAV,aAAE,EAAkBG,eAE5B,kBAAC,GAAD,CACI5R,MAAM,qJACNxH,KAAI,UAAE8K,EAAQmO,gBAAV,aAAE,EAAkBI,0BAE5B,kBAAC,GAAD,CACI7R,MAAM,qGACNxH,KAAI,UAAE8K,EAAQmO,gBAAV,aAAE,EAAkBK,gBAE5B,kBAAC,GAAD,CACI9R,MAAM,yIACNxH,KAAI,UAAE8K,EAAQmO,gBAAV,aAAE,EAAkBM,gBAE5B,kBAAC,GAAD,CACI/R,MAAM,4HACNxH,KAAI,UAAE8K,EAAQmO,gBAAV,aAAE,EAAkBO,qBAE5B,kBAAC,GAAD,CACIhS,MAAM,uCACNxH,KAAM8K,EAAQqD,QAAS,2EAAiB,gDAKhD,kBAAC,GAAD,KACI,kBAAC,GAAD,CACIrL,MAAO,YACPW,QAAS,kBAAMuI,EAAQe,KAAR,2BAAiCpH,KAChDkB,WAAW,mFAEf,kBAAC,GAAD,CACI/D,MAAOgI,EAAQqD,QAAS,UAAY,SACpC1K,QAASqH,EAAQqD,QA7HX,WACJe,OAAOC,QAAQ,+JAEjCuJ,EAAmB,CAAC/J,KAAMhJ,EAAIwI,SAAS,IACtC/B,KAAKzC,GAAS,IACdyC,MAAK,gBAAEpM,EAAF,EAAEA,KAAF,OAAYuY,EAAkBvY,MACnCqM,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,OAfT,WACDkK,OAAOC,QAAQ,qKAEjCuJ,EAAmB,CAAC/J,KAAMhJ,EAAIwI,SAAS,IACtC/B,KAAKzC,GAAS,IACdyC,MAAK,gBAAEpM,EAAF,EAAEA,KAAF,OAAYuY,EAAkBvY,MACnCqM,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,OAiIZ6B,WAAYiE,EAAQqD,QAAS,2EAAiB,qIAYtD,gCAAQ,4HACR,kBAAC,GAAD,KACI,kBAAC,GAAD,CACIzH,SApID,SAACmG,GAChBA,EAAIC,iBAEJ,IAAMnN,EAAaF,EAAiBC,GAEpCya,EAAc,2BACPxa,GADM,IAET8W,aAAc9Q,KAEjByG,KAAKzC,GAAS,IACd0C,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,MAE5BhE,QAAQC,IAAItB,IAyHIiH,QAASA,EACTC,WAAW,iCACXC,UAxHF,WACdA,EAAU,GAAI,IAAI,KA0HF,kBAAC,GAAD,CACIjC,KAAK,OACL2C,MAAM,2EACN3B,SAAUwE,EACVvF,MAAOpF,EAAOmF,KACd0C,UAAWnF,EAAOyC,KAClBoI,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACIrI,KAAK,OACL2C,MAAM,2BACN3B,SAAUwE,EACVvF,MAAOpF,EAAO2a,KACd9S,UAAWnF,EAAOiY,KAClBpN,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACIrI,KAAK,OACL2C,MAAM,OACN3B,SAAUwE,EACVvF,MAAOpF,EAAOiP,KACdpH,UAAWnF,EAAOuM,KAClB1B,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACIvL,KAAK,SACLkD,KAAK,QACL2C,MAAM,6EACN3B,SAAUwE,EACVvF,MAAOpF,EAAOQ,MACdqH,UAAWnF,EAAOlC,MAClB2I,MAAO,CACH+H,MAAM,SAEVC,IAAK,EACLC,IAAK,QAKbmJ,GAEI,kBAAC,GAAD,KAEI,+BACI,4BACI,sCACA,kBAAC,GAAD,CACIxW,QAAS,kBAAM8M,EAAY,SAC3B/I,MAAM,2BACN8H,UAAU,OACVC,UAAWA,EACXC,MAAOA,IAEX,kBAAC,GAAD,CACI/L,QAAS,kBAAM8M,EAAY,SAC3B/I,MAAM,2EACN8H,UAAU,OACVC,UAAWA,EACXC,MAAOA,IAEX,kBAAC,GAAD,CACI/L,QAAS,kBAAM8M,EAAY,YAC3B/I,MAAM,kCACN8H,UAAU,UACVC,UAAWA,EACXC,MAAOA,IAEX,sCAGR,+BACMyK,EAAMlJ,OACJkJ,EAAMtM,KAAI,SAAC2M,EAAM1M,GACb,OACI,wBACI7N,IAAKua,EAAK3L,KACVlL,QAAS,kBAAMuI,EAAQe,KAAR,iBAAuBuN,EAAK3L,SAE3C,4BAAKf,EAAE,GACP,4BAAK0M,EAAKD,MACV,4BAAKC,EAAKzV,MACV,kBAAC,GAAD,CACI+H,QAAS0N,EAAKnM,UAElB,4BAAKmM,EAAK3L,UAKlB,kBAAC,GAAD,QAYxB,kBAAC,GAAD,CACI7L,MAAO,UACPW,QAAS,kBAAMuI,EAAQe,KAAR,oBAA0BpH,KACzCkB,WAAW,gGAGf,kBAAC,GAAD,CACIV,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGT,kBAAC,GAAD,CACGlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,KA5Mb,kBAAC,GAAD,MAJA,2I,oBCyMAnH,gBARS,SAACC,GACrB,MAAO,CACHiW,SAAUjW,EAAMiW,SAASA,YAMO,CACnC+B,iBL3T2B,WAAoB,IAAnB5a,EAAkB,uDAAP,GAC1C,8CAAO,WAAOc,GAAP,eAAAC,EAAA,+EAGeE,EAAQC,KAAR,0BAAwClB,GAHvD,UAGGoB,EAHH,OAIHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OANhC,wBAODV,EAASmY,GAAoB7X,EAAIf,KAAKmB,OAAOqX,WAP5C,kBAQMnY,KARN,eAUDI,EAASgY,GAAqB,CAAED,SAAUzX,EAAIf,KAAKoC,UAVlD,kBAWM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAX9B,iEAcHpB,QAAQC,IAAR,MACAR,EAASgY,GAAqB,CAAED,SAAU,CAAC,KAAMjY,YAf9C,kBAgBIF,GAAQ,EAAO,CAAC,KAAME,WAhB1B,0DAAP,wDKyTa+B,EAlUE,SAAC,GAA0D,IAAzDjE,EAAwD,EAAxDA,UAAWkc,EAA6C,EAA7CA,iBAA6C,IAA3B/B,gBAA2B,MAAlB,GAAkB,iEAEF3O,MAAhEnK,EAFkE,EAElEA,OAAQ2K,EAF0D,EAE1DA,aAAcjI,EAF4C,EAE5CA,OAAQwE,EAFoC,EAEpCA,QAASkD,EAF2B,EAE3BA,UAAWhD,EAFgB,EAEhBA,UAFgB,EAIEoC,KADnEC,EAHiE,EAGjEA,oBAAqBC,EAH4C,EAG5CA,uBAAwBC,EAHoB,EAGpBA,eACnDE,EAJuE,EAIvEA,oBAAqBC,EAJkD,EAIlDA,uBAAwBC,EAJ0B,EAI1BA,eAAgBE,EAJU,EAIVA,SAJU,EAM/C7L,oBAAS,GANsC,mBAMlE0R,EANkE,KAM3DW,EAN2D,OAQ7CrS,mBAAS,GARoC,mBAQlEsS,EARkE,KAQ1DC,EAR0D,OASvCvS,mBAAS,IAT8B,mBASlEyR,EATkE,KASvDe,EATuD,KAWnEC,EAAc,SAACC,GACnBL,GAAUX,GACVc,EAAaE,GACb1G,EAAU,2BACHpK,GADE,IAEL+Q,QAAU,CACN,CACED,QACAhB,MAAOA,EAAO,MAAQ,YAKhC,IAAM7P,EAAaF,EAAiBC,GAEpCC,EAAW8Q,QAAU,CACjB,CACED,QACAhB,MAAOA,EAAO,MAAQ,SAG5B,IAAMkB,EAAU,eACT/Q,GAGP4a,EAAiB7J,GAChBtE,KAAKzC,GAAS,IACd0C,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,OAiEtBgH,EAAUC,eAEVlI,EAAM,CACRzF,KAAOkc,SACPnc,GASJ,OANAJ,qBAAU,WACNsc,IACCnO,KAAKzC,GAAS,MAEhB,IAGC,yBAAKtL,UAAW0F,EAAIC,KAAK,MACrB,gCAAQ,4HAER,kBAAC,GAAD,KACI,kBAAC,GAAD,CACI0C,SAnCD,SAACmG,GAChBA,EAAIC,iBAEJ,IAAMnN,EAAaF,EAAiBC,GAEpC6a,EAAiB5a,GAChByM,KAAKzC,GAAS,IACdyC,MAAK,kBAAMpL,QAAQC,IAAI,8BACxBD,QAAQC,IAAItB,IA4BIiH,QAASA,EACTC,WAAW,iCACXC,UA3BF,WACdA,EAAU,GAAI,IAAI,KA4BF,yBAAKzI,UAAWC,KAAOmc,YACnB,kBAAC,GAAD,CACI5V,KAAK,MACL2C,MAAM,qBACN3B,SAAUwE,EACVvF,MAAOpF,EAAOwZ,IACd3R,UAAWnF,EAAO8W,IAClBjM,UAAW,EACXC,UAAW,GACXlF,cAAe1J,KAAO0J,cACtB3J,UAAWC,KAAOuJ,aAGtB,kBAAC,GAAD,CACIhD,KAAK,QACL2C,MAAM,QACN3B,SAAUwE,EACVvF,MAAOpF,EAAO2E,MACdkD,UAAWnF,EAAOiC,MAClB4I,UAAW,EACXC,UAAW,IACXlF,cAAe1J,KAAO0J,cACtB3J,UAAWC,KAAOuJ,aAEtB,kBAAC,GAAD,CACIhD,KAAK,OACL2C,MAAM,2EACN3B,SAAUwE,EACVvF,MAAOpF,EAAOmF,KACd0C,UAAWnF,EAAOyC,KAClBoI,UAAW,EACXC,UAAW,IACXlF,cAAe1J,KAAO0J,cACtB3J,UAAWC,KAAOuJ,aAEtB,kBAAC,GAAD,CACIhD,KAAK,OACL2C,MAAM,OACN3B,SAAUwE,EACVvF,MAAOpF,EAAOiP,KACdpH,UAAWnF,EAAOuM,KAClB1B,UAAW,EACXC,UAAW,IACXlF,cAAe1J,KAAO0J,cACtB3J,UAAWC,KAAOuJ,aAEtB,kBAAC,GAAD,CACIlG,KAAK,SACLkD,KAAK,QACL2C,MAAM,6EACN3B,SAAUwE,EACVvF,MAAOpF,EAAOQ,MACdqH,UAAWnF,EAAOlC,MAClB2I,MAAO,CACH+H,MAAM,SAEVC,IAAK,EACLC,IAAK,IACL9I,cAAe1J,KAAO0J,cACtB3J,UAAWC,KAAOuJ,gBAMlC,kBAAC,GAAD,KACI,+BACI,4BACI,sCACA,kBAAC,GAAD,CACIpE,QAAS,kBAAM8M,EAAY,SAC3B/I,MAAM,2EACN8H,UAAU,OACVC,UAAWA,EACXC,MAAOA,IAGX,kBAAC,GAAD,CACI/L,QAAS,kBAAM8M,EAAY,YAC3B/I,MAAM,kCACN8H,UAAU,UACVC,UAAWA,EACXC,MAAOA,IAEX,kBAAC,GAAD,CACI/L,QAAS,kBAAM8M,EAAY,UAC3B/I,MAAM,QACN8H,UAAU,QACVC,UAAWA,EACXC,MAAOA,IAEX,kBAAC,GAAD,CACI/L,QAAS,kBAAM8M,EAAY,QAC3B/I,MAAM,qBACN8H,UAAU,MACVC,UAAWA,EACXC,MAAOA,IAEV,sCAGT,gCAEgB,OAARgJ,QAAQ,IAARA,OAAA,EAAAA,EAAUzH,QACTyH,EAAS7K,KAAI,SAAC4F,EAAM3F,GACjB,OACI,wBACI7N,IAAKwT,EAAK5E,KACVlL,QAAS,kBAAMuI,EAAQe,KAAR,oBAA0BwG,EAAK5E,SAE9C,4BAAKf,EAAE,GACP,4BAAK2F,EAAK1O,MACV,kBAAC,GAAD,CACI+H,QAAS2G,EAAKpF,UAElB,4BAAKoF,EAAKlP,OACV,4BAAKkP,EAAK2F,KACV,4BAAK3F,EAAK5E,UAIlB,kBAAC,GAAD,QAQhB,yBAAKtQ,UAAWC,KAAO6S,aAEvB,kBAAC,GAAD,CACIrO,MAAO,UACPW,QAAS,kBAAMuI,EAAQe,KAAR,iBACflG,WAAW,sGAGf,kBAACuK,GAAA,EAAD,CAAY/S,UAAWC,KAAO8S,WAAYC,aAAW,mBAEjD,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACI9N,QApNI,SAACoJ,GAErB,GADAA,EAAIC,mBACAsD,GAAU,GAAd,CACA,IAAMzQ,EAAaF,EAAiBC,GAEpC2Q,EAAUD,EAAS,GACnBmK,EAAiB,2BACV5a,GADS,IAEZyQ,QAASA,EAAS,IAAMzQ,EAAWO,OAAS,OAE/CkM,KAAKzC,GAAS,IACdyC,MAAK,kBAAMpL,QAAQC,IAAI,mCACxBD,QAAQC,IAAItB,KAyMI6R,UAAQ,EAACC,KAAK,OAGtB,kBAACH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACI9N,QAxOA,SAACoJ,GACjBA,EAAIC,iBACJ,IAAMnN,EAAaF,EAAiBC,GACpC2Q,EAAUD,EAAS,GAEnBmK,EAAiB,2BACV5a,GADS,IAEZyQ,QAASA,EAAS,IAAMzQ,EAAWO,OAAS,OAE/CkM,KAAKzC,GAAS,IACdyC,MAAK,kBAAMpL,QAAQC,IAAI,mCACxBD,QAAQC,IAAItB,IA8NI+R,MAAI,EAACD,KAAK,SAsBtB,kBAAC,GAAD,CACItL,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGT,kBAAC,GAAD,CACGlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,Q,oBC1GbnH,gBAPS,SAACC,GACvB,MAAO,CACHuI,QAASvI,EAAMiW,SAAS1N,WAMX,CAACwN,0BAAwBC,qBAAmBG,uBADhDpW,EA9MO,SAAC,GAGhB,IAAD,kBAFJjE,EAEI,EAFJA,UAAWia,EAEP,EAFOA,uBAAwBC,EAE/B,EAF+BA,kBAAmBG,EAElD,EAFkDA,mBACtD5N,EACI,EADJA,QACI,6GAGuE5B,MADnEC,EAFJ,EAEIA,oBAAqBC,EAFzB,EAEyBA,uBAAwBC,EAFjD,EAEiDA,eACnDE,EAHE,EAGFA,oBAAqBC,EAHnB,EAGmBA,uBAAwBC,EAH3C,EAG2CA,eAAgBE,EAH3D,EAG2DA,SAH3D,EAOoEE,KAAjEnK,EAPH,EAOGA,OAAQ2K,EAPX,EAOWA,aAAcjI,EAPzB,EAOyBA,OAAQwE,EAPjC,EAOiCA,QAASkD,EAP1C,EAO0CA,UAAWE,EAPrD,EAOqDA,WAClDrE,EAAM+I,eAAN/I,GACDqG,EAAUC,eAEhBhO,qBAAU,WAIR,OAHAqa,EAAuB,CAAC3S,IACvByG,KAAKzC,GAAS,IACd0C,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,MACrB,WACHuT,EAAkB,CACd5J,KAAM,GACNuK,IAAK,GACLrU,KAAM,QAIb,IAED5G,qBAAU,WACR+L,GAAW,KAEZ,IACD/L,qBAAU,WACR6L,EAAUgB,KAEX,CAACA,IAEJ,IAAMkO,EAAuB,SAACnM,GAAS,IAAD,EACdA,EAAIjI,OAAnBC,EAD6B,EAC7BA,KAAMC,EADuB,EACvBA,MACTmU,EAAW,GAEbA,EADEvZ,EAAOuZ,SACD,2BACHvZ,EAAOuZ,UADJ,kBAELpU,EAAOC,IAGF,eACLD,EAAOC,GAGZgF,EAAU,2BACLpK,GADI,IAEPuZ,cAGFjP,EAAW6C,EAAIjI,OAAO2F,QAAQ,QAAQC,kBAwBhCzG,EAAM,CACRzF,KAAOoc,cACPrc,GAGJ,OAAKyM,EAIFA,EAAQ6D,KAKP,yBAAKtQ,UAAW0F,EAAIC,KAAK,MACxB,kBAACuI,GAAA,EAAD,CAAYrJ,IAAI,MAAMsJ,QAAQ,OAC7B,kBAACC,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAG,YAAYuJ,OAAK,GAAlD,+FACA,kBAACF,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAE,oBAAeuC,GAAMgH,OAAK,GAA1D,yFACA,kBAACF,GAAA,EAAD,CAAgBG,QAAM,EAAC1J,IAAI,QAA3B,0IAEE,gCAAQ,oOACN,kBAAC,GAAD,CACE7E,UAAWC,KAAOmQ,QAClB/H,SAzCG,SAACmG,GAChBA,EAAIC,iBACJ4L,EAAmB,aAAC/J,KAAMhJ,GAAOjG,IAChC0M,MAAK,SAACrL,GAEL,OADA4I,IAAW5I,GACJA,KAERqL,MAAK,SAAArL,GACEA,EAAIT,IACJ2B,YAAW,WACP+J,EAAQ8F,WACT,QAGVzF,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,MAC5BhE,QAAQC,IAAIvB,IA2BAkH,QAASA,EACTC,WAAY,0DAEZ,kBAAC,GAAD,CACIhC,KAAK,MACL2C,MAAM,qBACN3B,SAAUwE,EACVvF,MAAOpF,EAAOwZ,IACd3R,UAAWnF,EAAO8W,IAClBjM,UAAW,GACXC,UAAW,KAGf,kBAAC,GAAD,CACIrI,KAAK,OACL2C,MAAM,2EACNwF,UAAU,EACVnH,SAAUwE,EACVvF,MAAOpF,EAAOmF,KACd0C,UAAWnF,EAAOyC,KAClBoI,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACIrI,KAAK,QACL2C,MAAM,QACN7F,KAAK,QACLqL,UAAU,EACVnH,SAAUwE,EACVvF,MAAOpF,EAAO2E,MACdkD,UAAWnF,EAAOiC,MAClB4I,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACMrI,KAAK,eACL2C,MAAM,iHACR3B,SAAUmT,EACVlU,MAAK,UAAEpF,EAAOuZ,gBAAT,aAAE,EAAiBG,aACxB7R,UAAS,UAAEnF,EAAO6W,gBAAT,aAAE,EAAiBG,aAC5BnM,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACSrI,KAAK,0BACL2C,MAAM,qJACP3B,SAAUmT,EACVlU,MAAK,UAAEpF,EAAOuZ,gBAAT,aAAE,EAAiBI,wBACxB9R,UAAS,UAAEnF,EAAO6W,gBAAT,aAAE,EAAiBI,wBAC5BpM,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACKrI,KAAK,gBACL2C,MAAM,qGACP3B,SAAUmT,EACVlU,MAAK,UAAEpF,EAAOuZ,gBAAT,aAAE,EAAiBK,cACxB/R,UAAS,UAAEnF,EAAO6W,gBAAT,aAAE,EAAiBK,cAC5BrM,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACKrI,KAAK,gBACL2C,MAAM,yIACP3B,SAAUmT,EACVlU,MAAK,UAAEpF,EAAOuZ,gBAAT,aAAE,EAAiBM,cACxBhS,UAAS,UAAEnF,EAAO6W,gBAAT,aAAE,EAAiBM,cAC5BtM,UAAW,EACXC,UAAW,MAEhB,kBAAC,GAAD,CACKrI,KAAK,qBACL2C,MAAM,4HACNmT,KAAK,KACLpF,KAAK,IACL1P,SAAUmT,EACVlU,MAAK,UAAEpF,EAAOuZ,gBAAT,aAAE,EAAiBO,sBAIpC,kBAAC,GAAD,CACIrT,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGT,kBAAC,GAAD,CACGlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,KAvGf,kBAAC,GAAD,MAJA,2I,oBCLEnH,eAAQ,KAAM,CAAEsY,gBxC1FA,SAAC7O,GAC9B,8CAAO,WAAOtL,GAAP,iBAAAC,EAAA,sEAKGV,EALH,2BAME+L,GANF,IAODnB,aAAchM,MAPb,SASegC,EAAQC,KAAR,gBAA8Bb,GAT7C,UASGe,EATH,OAWHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OAbhC,wBAcCV,EAASoL,GAAkB,CAACpN,OAAQ,gIAdrC,kBAeQ4B,GAAQ,EAAM,6HAA0BU,EAAIf,KAAKmB,SAfzD,eAiBCV,EAAS+K,GAAkB,CAAE/M,OAAQsC,EAAIf,KAAKoC,UAjB/C,kBAkBQ/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAlBhC,iEAqBHpB,QAAQC,IAAI,KAAMV,SAClBE,EAAS+K,GAAkB,CAAC/M,OAAQ,CAAC,KAAM8B,YAtBxC,kBAuBIF,GAAQ,EAAO,CAAC,KAAME,WAvB1B,0DAAP,wDwCyFa+B,EAnFM,SAAC,GAEH,IADfjE,EACc,EADdA,UAAWuc,EACG,EADHA,gBAGL5O,GAFQ,gDAEEC,gBAFF,EAK+CpC,KAAtDnK,EALO,EAKPA,OAAQ2K,EALD,EAKCA,aAAcjI,EALf,EAKeA,OAAQwE,EALvB,EAKuBA,QAASoD,EALhC,EAKgCA,WALhC,EAQEd,KAFRC,EANM,EAMNA,oBAAqBC,EANf,EAMeA,uBAAwBC,EANvC,EAMuCA,eACjDE,EAPU,EAOVA,oBAAqBC,EAPX,EAOWA,uBAAwBC,EAPnC,EAOmCA,eAC7CE,EARU,EAQVA,SAEE5F,EAAM,CACRzF,KAAOuc,aACPxc,GAGJJ,qBAAU,WACN+L,GAAW,KAEZ,IAiBH,OACI,yBAAK3L,UAAW0F,EAAIC,KAAK,MACzB,kBAACuI,GAAA,EAAD,CAAYrJ,IAAI,MAAMsJ,QAAQ,OAC5B,kBAACC,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAG,SAASuJ,OAAK,GAA/C,4BACA,kBAACF,GAAA,EAAD,CAAgBG,QAAM,EAAC1J,IAAI,QAA3B,0FAEE,gCAAQ,sHAER,kBAAC,GAAD,CACI7E,UAAWC,KAAOmQ,QAClB/H,SAzBK,SAACmG,GACdA,EAAIC,iBACJ9L,QAAQC,IAAIvB,GACZkb,EAAgBlb,GACf0M,MAAK,SAACrL,GACH4I,IAAW5I,GACPA,EAAIT,IACJ2B,YAAW,WACP+J,EAAQe,KAAR,YACD,QAGVV,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,OAcpB4B,QAASA,GAGT,kBAAC,GAAD,CACI/B,KAAK,OACL2C,MAAM,2EACNwF,UAAU,EACVnH,SAAUwE,EACVvF,MAAOpF,EAAOmF,KACd0C,UAAWnF,EAAOyC,KAClBoI,UAAW,EACXC,UAAW,IACXiM,MAAM,2GAMd,kBAAC,GAAD,CACIhT,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGb,kBAAC,GAAD,CACIlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,Q,qBCqCVnH,gBARS,SAACC,GACvB,MAAO,CACHuI,QAASvI,EAAMkJ,MAAMX,WAMa,CAAEa,wBAA3BrJ,EA9GK,SAAC,GAAyD,IAAxDjE,EAAuD,EAAvDA,UAAWyM,EAA4C,EAA5CA,QAASa,EAAmC,EAAnCA,oBAGhChG,GAHmE,8DAG5D+I,eAAP/I,IACFqG,EAAUC,eAJ2D,EAOA/C,KADnEC,EANmE,EAMnEA,oBAAqBC,EAN8C,EAM9CA,uBAAwBC,EANsB,EAMtBA,eACnDE,EAPyE,EAOzEA,oBAAqBC,EAPoD,EAOpDA,uBAAwBC,EAP4B,EAO5BA,eAAgBE,EAPY,EAOZA,SAE7D1L,qBAAU,WACR0N,EAAoB,EAAEhG,IACrByG,KAAKzC,GAAS,IACdyC,MAAK,kBAAMpL,QAAQC,IAAI,4BAEvB,IAGL,IAoBQ8C,EAAM,CACRzF,KAAOwc,YACPzc,GAGJ,OAAKyM,EAMAA,EAAQnF,GAKT,yBAAKtH,UAAW0F,EAAIC,KAAK,MACpB,kBAACuI,GAAA,EAAD,CAAYrJ,IAAI,MAAMsJ,QAAQ,OAC7B,kBAACC,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAG,SAASuJ,OAAK,GAA/C,4BACA,kBAACF,GAAA,EAAD,CAAgBG,QAAM,EAAC1J,IAAI,QAA3B,iCAA8C,uCAAS4H,QAAT,IAASA,OAAT,EAASA,EAASjG,QAGlE,gCAAQ,6FAAgB,uCAASiG,QAAT,IAASA,OAAT,EAASA,EAASjG,QAE1C,kBAAC,GAAD,KACI,kBAAC,GAAD,CACI2C,MAAM,KACNxH,KAAM8K,EAAQnF,KAGlB,kBAAC,GAAD,CACI6B,MAAM,2EACNxH,KAAM8K,EAAQjG,QAItB,kBAAC,GAAD,KACE,kBAAC,GAAD,CACM/B,MAAO,YACPW,QAAS,kBAAMuI,EAAQe,KAAR,iBAAuBpH,EAAvB,aACfkB,WAAW,mFAEf,kBAAC,GAAD,CACI/D,MAAO,SACPW,QAhED,WACGyL,OAAOC,QAAQ,iIAgEjBtI,WAAW,gDAIrB,kBAAC,GAAD,CACUV,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGjB,kBAAC,GAAD,CACIlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,KA9CV,kBAAC,GAAD,MALP,6G,oBCjBOsR,GArCgB,SAAC,GAGf,IAFf1c,EAEc,EAFdA,UAAW2c,EAEG,EAFHA,gBAAiBC,EAEd,EAFcA,YAEd,IAF2BpU,kBAE3B,MAFsC,mDAEtC,EAFkDpD,EAElD,EAFkDA,QAElD,IADdX,aACc,MADR,UACQ,EAENiB,GAFM,6FAEA,CACRzF,KAAOyc,uBACP1c,IAGJ,OACI,yBAAKA,UAAW0F,EAAIC,KAAK,MACpB,kBAAC,GAAD,CACGlB,MAAOA,EACPW,QAASA,EACToD,WAAYA,IAGhB,kBAACuK,GAAA,EAAD,CAAY/S,UAAWC,KAAO8S,WAAYC,aAAW,mBAEjD,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACI9N,QAASuX,EACTxJ,UAAQ,EAACC,KAAK,OAGtB,kBAACH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACI9N,QAASwX,EACTvJ,MAAI,EAACD,KAAK,U,oBCiLnBnP,gBARS,SAACC,GACrB,MAAO,CACHkJ,MAAOlJ,EAAMkJ,MAAMA,SAMa,CAAEH,kBAA3BhJ,EAjMD,SAAC,GAAiD,IAAhDjE,EAA+C,EAA/CA,UAAWiN,EAAoC,EAApCA,cAAeG,EAAqB,EAArBA,MAEhCO,GAFqD,sDAE3CC,gBAF2C,EAIWpC,KAA/DnK,EAJoD,EAIpDA,OAAQ2K,EAJ4C,EAI5CA,aAAcjI,EAJ8B,EAI9BA,OAAQwE,EAJsB,EAItBA,QAASkD,EAJa,EAIbA,UAAWhD,EAJE,EAIFA,UAJE,EAOgBoC,KADnEC,EANmD,EAMnDA,oBAAqBC,EAN8B,EAM9BA,uBAAwBC,EANM,EAMNA,eACnDE,EAPyD,EAOzDA,oBAAqBC,EAPoC,EAOpCA,uBAAwBC,EAPY,EAOZA,eAAgBE,EAPJ,EAOIA,SAPJ,EASjC7L,oBAAS,GATwB,mBASpD0R,EAToD,KAS7CW,EAT6C,OAU/BrS,mBAAS,GAVsB,mBAUpDsS,EAVoD,KAU5CC,EAV4C,OAWzBvS,mBAAS,IAXgB,mBAWpDyR,EAXoD,KAWzCe,EAXyC,KAarDvM,EAAM,CACRzF,KAAO4c,MACP7c,GAmCJJ,qBAAU,WACNqN,IACCc,KAAKzC,GAAS,IACd0C,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,QAE7B,IA+CH,OACI,yBAAK3G,UAAW0F,EAAIC,KAAK,MACrB,gCAAQ,oGAER,kBAAC,GAAD,KACI,kBAAC,GAAD,CACI0C,SAtBC,SAACmG,GACdA,EAAIC,iBAEJ,IAAMnN,EAAaF,EAAiBC,GAEpC4L,EAAc3L,GACbyM,KAAKzC,GAAS,IACd0C,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,MAE5BhE,QAAQC,IAAItB,IAcAiH,QAASA,EACTC,WAAW,iCACXC,UAbE,WACdA,EAAU,GAAI,IAAI,KAeV,kBAAC,GAAD,CACQjC,KAAK,OACL2C,MAAM,2EACN3B,SAAUwE,EACVvF,MAAOpF,EAAOmF,KACd0C,UAAWnF,EAAOyC,KAClBoI,UAAW,EACXC,UAAW,IACXiM,MAAM,4GAMlB,kBAAC,GAAD,KACI,+BACI,4BACI,kCACA,kBAAC,GAAD,CACI1V,QAAS,kBAnHb,SAAC+M,GACjBL,GAAUX,GACVc,EAAaE,GACb1G,EAAU,2BACHpK,GADE,IAEL+Q,QAAU,CACN,CACED,QACAhB,MAAOA,EAAO,MAAQ,YAKhC,IAAM7P,EAAaF,EAAiBC,GAEpCC,EAAW8Q,QAAU,CACjB,CACED,QACAhB,MAAOA,EAAO,MAAQ,SAG5B,IAAMkB,EAAU,eACT/Q,GAGP2L,EAAcoF,GACbtE,KAAKzC,GAAS,IACd0C,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,MAwFOuL,CAAY,SAC3B/I,MAAM,2EACN8H,UAAU,OACVC,UAAWA,EACXC,MAAOA,MAInB,gCAEa,OAAL/D,QAAK,IAALA,OAAA,EAAAA,EAAOsF,QAAQtF,EAAMkC,KAAI,SAAC4F,GACtB,OACI,wBACIxT,IAAKwT,EAAK5N,GACVtH,UAAWC,KAAO2S,GAClBxN,QAAS,kBAAMuI,EAAQe,KAAR,iBAAuBwG,EAAK5N,OAE3C,wBAAIuL,MAAM,OAAOqC,EAAK5N,IACtB,4BAAK4N,EAAK1O,UAId,kBAAC,GAAD,QAMpB,kBAAC,GAAD,CACImW,gBA3FY,SAACnO,GAErB,GADAA,EAAIC,mBACAsD,GAAU,GAAd,CACA,IAAMzQ,EAAaF,EAAiBC,GAEpC2Q,EAAUD,EAAS,GACnB9E,EAAc,2BACP3L,GADM,IAETyQ,QAASA,EAAS,IAAMzQ,EAAWO,OAAS,OAE/CkM,KAAKzC,GAAS,IACdyC,MAAK,kBAAMpL,QAAQC,IAAI,mCACxBD,QAAQC,IAAItB,KAgFJsb,YA1GQ,SAACpO,GACjBA,EAAIC,iBACJ,IAAMnN,EAAaF,EAAiBC,GACpC2Q,EAAUD,EAAS,GAEnB9E,EAAc,2BACP3L,GADM,IAETyQ,QAASA,EAAS,IAAMzQ,EAAWO,OAAS,OAE/CkM,KAAKzC,GAAS,IACdyC,MAAK,kBAAMpL,QAAQC,IAAI,mCACxBD,QAAQC,IAAItB,IAgGJkH,WAAW,4EACXpD,QAAS,kBAAMuI,EAAQe,KAAR,gBAGnB,kBAAC,GAAD,CACI5G,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGb,kBAAC,GAAD,CACIlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,Q,qBC9DVnH,gBARS,SAACC,GACvB,MAAO,CACHuI,QAASvI,EAAMkJ,MAAMX,WAMa,CAAEa,uBAAqBwP,gB5CtChC,SAACC,GAC9B,8CAAO,WAAO3a,GAAP,iBAAAC,EAAA,sEAGGV,EAHH,aAID4K,aAAchM,KACXwc,GALF,SAOexa,EAAQC,KAAR,mBAAiCb,GAPhD,UAOGe,EAPH,OAQHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OAVhC,wBAWDV,EAASoL,GAAkB,CAACT,OAAQ,oMAXnC,kBAYM/K,GAAQ,EAAM,mMAZpB,eAcDI,EAAS+K,GAAkB,CAAEJ,OAAQrK,EAAIf,KAAKoC,UAd7C,kBAeM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAf9B,iEAkBHpB,QAAQC,IAAR,MACAR,EAAS+K,GAAkB,CAAEJ,OAAQ,CAAC,KAAM7K,YAnBzC,kBAoBIF,GAAQ,EAAO,CAAC,KAAME,WApB1B,0DAAP,wD4CqCa+B,EAtHI,SAAC,GAEH,IADfjE,EACc,EADdA,UAAWyM,EACG,EADHA,QAASa,EACN,EADMA,oBAAqBwP,EAC3B,EAD2BA,gBAC3B,mFAG6DjS,MADnEC,EAFM,EAENA,oBAAqBC,EAFf,EAEeA,uBAAwBC,EAFvC,EAEuCA,eACnDE,EAHY,EAGZA,oBAAqBC,EAHT,EAGSA,uBAAwBC,EAHjC,EAGiCA,eAAgBE,EAHjD,EAGiDA,SAHjD,EAM0DE,KAAjEnK,EANO,EAMPA,OAAQ2K,EAND,EAMCA,aAAcjI,EANf,EAMeA,OAAQwE,EANvB,EAMuBA,QAASkD,EANhC,EAMgCA,UAAWE,EAN3C,EAM2CA,WAElDrE,EAAM+I,eAAN/I,GACDqG,EAAUC,eAEhBhO,qBAAU,WACR+L,GAAW,KAEV,IAEH/L,qBAAU,WAGR,OAFA0N,EAAoB,EAAEhG,IACrByG,KAAKzC,GAAS,IACR,eAIN,IAEH1L,qBAAU,WACH6M,GAELhB,EAAUgB,KAET,CAACA,IAEJ,IAeQ/G,EAAM,CACRzF,KAAO+c,WACPhd,GAGJ,OAAKyM,EAMAA,EAAQnF,GAKT,yBAAKtH,UAAW0F,EAAIC,KAAK,MACrB,kBAACuI,GAAA,EAAD,CAAYrJ,IAAI,MAAMsJ,QAAQ,OAC5B,kBAACC,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAG,SAASuJ,OAAK,GAA/C,4BACA,kBAACF,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAE,iBAAYuC,GAAMgH,OAAK,GAAvD,iCAAoE,uCAAS7B,QAAT,IAASA,OAAT,EAASA,EAASjG,OACtF,kBAAC4H,GAAA,EAAD,CAAgBG,QAAM,EAAC1J,IAAI,QAA3B,+FAA0D,uCAAS4H,QAAT,IAASA,OAAT,EAASA,EAASjG,QAG9E,gCAAQ,qHAAoB,uCAASiG,QAAT,IAASA,OAAT,EAASA,EAASjG,QAEhD,kBAAC,GAAD,CACE6B,SAzCO,SAACmG,GAChBA,EAAIC,iBACJqO,EAAgBzb,GACf0M,KAAKzC,KACLyC,MAAK,SAAArL,GACEA,EAAIT,IACJ2B,YAAW,WACT+J,EAAQ8F,WACP,QAGVzF,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,MAC5BhE,QAAQC,IAAIvB,IA8BJkH,QAASA,EACTC,WAAW,0DAGP,kBAAC,GAAD,CACIhC,KAAK,OACL2C,MAAM,2EACNwF,UAAU,EACVnH,SAAUwE,EACVvF,MAAOpF,EAAOmF,KACd0C,UAAWnF,EAAOyC,KAClBoI,UAAW,EACXC,UAAW,IACXiM,MAAM,2GAKhB,kBAAC,GAAD,CACMhT,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGb,kBAAC,GAAD,CACIlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,KA1CV,kBAAC,GAAD,MALP,6GCrBK6R,GAA0B,SAAClJ,GACtC,8CAAO,WAAO3R,GAAP,eAAAC,EAAA,+EAGeE,EAAQC,KAAR,oCAAkD,CAACuR,UAHlE,UAGGrR,EAHH,OAIHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OANhC,wBAODV,EAAS8a,GAAoBxa,EAAIf,KAAKmB,OAAOqa,UAAU,KAPtD,kBAQMnb,KARN,eAUDI,EAASgb,GAAsB,CAAE3Q,QAAS/J,EAAIf,KAAKoC,UAVlD,kBAWM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAX9B,iEAcHpB,QAAQC,IAAR,MACAR,EAASgb,GAAsB,CAAE3Q,QAAS,CAAC,KAAMvK,YAf9C,kBAgBIF,GAAQ,EAAO,CAAC,KAAME,WAhB1B,0DAAP,uDAqBWmb,GAAsB,SAACC,GAClC,8CAAO,WAAOlb,GAAP,eAAAC,EAAA,+EAGeE,EAAQC,KAAR,6BAA2C8a,GAH1D,UAGG5a,EAHH,OAIHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OANhC,wBAODV,EAASmb,GAAsB,CAACxQ,OAAQ,sNAPvC,kBAQM/K,GAAQ,EAAM,mNAA0CU,EAAIf,KAAKmB,SARvE,eAUDV,EAASgb,GAAsB,CAAErQ,OAAQrK,EAAIf,KAAKoC,UAVjD,kBAWM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAX9B,iEAcHpB,QAAQC,IAAR,MACAR,EAASgb,GAAsB,CAAErQ,OAAQ,CAAC,KAAM7K,YAf7C,kBAgBIF,GAAQ,EAAO,CAAC,KAAME,WAhB1B,0DAAP,uDAuDWsb,GAAsB,SAACL,GAClC,MAAO,CACL7Z,K7D7CyB,gB6D8CzB6Z,cAISD,GAAqB,SAACzQ,GACjC,MAAO,CACLnJ,K7DnDgC,uB6DoDhCmJ,YAMS2Q,GAAwB,SAACrZ,GACpC,MAAO,CACLT,K7D/D6B,oB6DgE7BS,WAGSwZ,GAAwB,SAACrb,GACpC,MAAO,CACLoB,K7DpE6B,oB6DqE7BpB,Y,oBCiWW+B,gBAXS,SAACC,GACvB,MAAO,CACLuI,QAASvI,EAAM0X,MAAMnP,QACrB0Q,UAAWjZ,EAAMiZ,UAAUA,UAC3BvJ,UAAW1P,EAAM0P,UAAUA,UAC3BuG,SAAUjW,EAAMiW,SAASA,YAMW,CACtCiB,uBAAqBC,kBAAgBoC,iBV3ZP,SAAC1J,GAC/B,8CAAO,WAAO3R,GAAP,eAAAC,EAAA,+EAGeE,EAAQC,KAAR,2BAAyC,CAACuR,UAHzD,UAGGrR,EAHH,OAIHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OANhC,wBAODV,EAASsZ,GAAkB,CAACtG,OAAQ,gIAPnC,kBAQMpT,GAAQ,EAAM,+HARpB,eAUDI,EAASmZ,GAAkB,CAAEnG,OAAQ1S,EAAIf,KAAKoC,UAV7C,kBAWM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAX9B,iEAeHpB,QAAQC,IAAR,MACAR,EAASmZ,GAAkB,CAAEnG,OAAQ,CAAC,KAAMlT,YAhBzC,kBAiBIF,GAAQ,EAAO,CAAC,KAAME,WAjB1B,0DAAP,uDU0ZuDwb,kBD/dxB,WAAoB,IAAnBpc,EAAkB,uDAAP,GAC3C,8CAAO,WAAOc,GAAP,eAAAC,EAAA,+EAGeE,EAAQC,KAAR,2BAAyClB,GAHxD,UAGGoB,EAHH,OAIHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OANhC,wBAODV,EAASob,GAAqB9a,EAAIf,KAAKmB,OAAOqa,YAP7C,kBAQMnb,KARN,eAUDI,EAASgb,GAAsB,CAAED,UAAWza,EAAIf,KAAKoC,UAVpD,kBAWM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAX9B,iEAcHpB,QAAQC,IAAR,MACAR,EAASgb,GAAsB,CAAED,UAAW,CAAC,KAAMjb,YAfhD,kBAgBIF,GAAQ,EAAO,CAAC,KAAME,WAhB1B,0DAAP,uDC+dAwR,qBAAmB8H,oBAFNvX,EA5dK,SAAC,GAGH,IAAD,sBAFfjE,EAEe,EAFfA,UAAWyM,EAEI,EAFJA,QAAU2O,EAEN,EAFMA,oBAAqBC,EAE3B,EAF2BA,eAAgBqC,EAE3C,EAF2CA,kBACxCP,GACH,EADfM,iBACe,EADGN,WAAWvJ,EACd,EADcA,UAAWuG,EACzB,EADyBA,SAAUzG,EACnC,EADmCA,kBAAmB8H,EACtD,EADsDA,gBAG9DlU,GAFQ,+LAEF+I,eAAN/I,IACDqG,EAAUC,eAEV+P,EAAU9I,mBACV+I,EAAa/I,mBACbgJ,EAAiBhJ,mBACjBiJ,EAAcjJ,mBARL,EAUepV,mBAAS,IAVxB,mBAURse,EAVQ,KAUCC,EAVD,OAYuDxS,KAA/DnK,EAZQ,EAYRA,OAAQ2K,EAZA,EAYAA,aAAcjI,EAZd,EAYcA,OAAQwE,EAZtB,EAYsBA,QAASkD,EAZ/B,EAY+BA,UAAWhD,EAZ1C,EAY0CA,UAZ1C,EAcuBhJ,mBAAS,CAAC,CAAC+G,KAAM,6GAAyBoS,QAAQ,KAdzE,mBAcRC,EAdQ,KAcKC,EAdL,OAiB4DjO,KADnEC,EAhBO,EAgBPA,oBAAqBC,EAhBd,EAgBcA,uBAAwBC,EAhBtC,EAgBsCA,eACnDE,GAjBa,EAiBbA,oBAAqBC,GAjBR,EAiBQA,uBAAwBC,GAjBhC,EAiBgCA,eAAgBE,GAjBhD,EAiBgDA,SAjBhD,GAmBa7L,oBAAS,GAnBtB,qBAmBN0R,GAnBM,MAmBCW,GAnBD,SAoBqBrS,mBAAS,IApB9B,qBAoBNyR,GApBM,MAoBKe,GApBL,MAsBPC,GAAc,SAACC,GACnBL,IAAUX,IACVc,GAAaE,GAEb,IAAM7Q,EAAaF,EAAiBC,GAE9BgR,EAAU,2BACT/Q,GADS,IAEZ,QAAW,CACP,CACE6Q,QACAhB,MAAOA,GAAO,MAAQ,WAKhCuM,EAAkB,2BACXrL,GADU,IAEb4L,WAAY3W,KAEfyG,KAAKzC,IAAS,IACd0C,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,OAI1BuX,GAAiB,SAAChP,EAAD,GAAqC,IAArBC,EAAoB,EAApBA,QAAS1I,EAAW,EAAXA,MAC9C9D,QAAQC,IAAIsM,GACZzD,EAAU,2BACHpK,GADE,kBAEJ8N,EAAU1I,MAkBb2I,GAAW,SAACF,EAAcG,GAC5B1M,QAAQC,IAAIsM,GACZzD,EAAU,2BACHpK,GADE,kBAEJgO,EAAYF,QAAUD,EAAaI,KAAI,SAAAC,GAAC,OAAIA,EAAE9I,aAiDrD7G,qBAAU,WACN,GAAKua,GAAa1N,EAAlB,CACE,IAAM0R,EAAc,OAAGhE,QAAH,IAAGA,OAAH,EAAGA,EAAU/C,MAAK,SAAC7H,GAAD,OAAOA,EAAEe,QAAF,OAAW7D,QAAX,IAAWA,OAAX,EAAWA,EAAS2L,iBACjE4F,GAAyB,OAAdG,QAAc,IAAdA,OAAA,EAAAA,EAAgB3X,OAAQ,OAEtC,CAAC2T,EAAU1N,IAEd7M,qBAAU,WACR8T,IACC3F,KAAKzC,IAAS,IACd0C,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,QAE3B,IAEH/G,qBAAU,WACJgU,GACAkF,EAAelF,KAEpB,CAACA,IAEFhU,qBAAU,WAUR,OARAwb,EAAoB,CAAC9T,IACpByG,KAAKzC,IAAS,IACd0C,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,MAE5B+W,EAAkB,CAACO,WAAY3W,IAC9ByG,KAAKzC,IAAS,IACd0C,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,MAErB,WACL0U,EAAe,CACX/K,KAAM,GACN8H,aAAc,GACd5R,KAAM,QAIX,IAED,IAAMd,GAAM,CACRzF,KAAOme,YACPpe,GAEJ,OAAKyM,EAIAA,EAAQ6D,KAKT,yBAAKtQ,UAAW0F,GAAIC,KAAK,MACxB,kBAACuI,GAAA,EAAD,CAAYrJ,IAAI,MAAMsJ,QAAQ,OAC7B,kBAACC,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAG,YAAYuJ,OAAK,GAAlD,+FACA,kBAACF,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAE,oBAAe0H,EAAQ2L,cAAgB9J,OAAK,GAA5E,+FAAqG,gCAASyP,IAC9G,kBAAC3P,GAAA,EAAD,CAAgBG,QAAM,EAAC1J,IAAI,QAA3B,8FAAyD,gCAAS4H,EAAQjG,QAExE,gCAAQ,qJACR,kBAAC,GAAD,KACK,kBAAC,GAAD,CACG2C,MAAM,OACNxH,KAAM8K,EAAQ6D,OAEjB,kBAAC,GAAD,CACGnH,MAAM,2EACNxH,KAAM8K,EAAQjG,OAEjB,kBAAC,GAAD,CACG2C,MAAM,2BACNxH,KAAM8K,EAAQuP,OAElB,kBAAC,GAAD,CACI7S,MAAM,uCACNxH,KAAM8K,EAAQqD,QAAS,2EAAiB,gDAKhD,6BACA,6BACA,gCAAQ,uFAER,kBAAC,GAAD,KACI,kBAAC,GAAD,CAEQ3G,MAAM,8FACNxH,KAAI,UAAE8K,EAAQ4R,oBAAV,aAAE,EAAsBC,eAEhC,kBAAC,GAAD,CAEInV,MAAM,qBACNxH,KAAI,UAAE8K,EAAQ4R,oBAAV,aAAE,EAAsBxD,MAEhC,kBAAC,GAAD,CAEI1R,MAAM,qBACNxH,KAAI,UAAE8K,EAAQ4R,oBAAV,aAAE,EAAsBE,MAEhC,kBAAC,GAAD,CAEIpV,MAAM,2BACNxH,KAAI,UAAE8K,EAAQ4R,oBAAV,aAAE,EAAsBG,OAEhC,kBAAC,GAAD,CAEIrV,MAAM,oGACNxH,KAAI,UAAE8K,EAAQ4R,oBAAV,aAAE,EAAsBI,gBAEhC,kBAAC,GAAD,CAEItV,MAAM,kFACNxH,KAAI,UAAE8K,EAAQ4R,oBAAV,aAAE,EAAsBK,mBAIxC,6BACA,6BACA,gCAAQ,4KAER,kBAAC,GAAD,KACQ,kBAAC,GAAD,CACIvV,MAAM,eACNxH,KAAI,UAAE8K,EAAQkS,gBAAV,aAAE,EAAkBC,eAE5B,kBAAC,GAAD,CACIzV,MAAM,eACNxH,KAAI,UAAE8K,EAAQkS,gBAAV,aAAE,EAAkBE,eAE5B,kBAAC,GAAD,CACI1V,MAAM,iMACNxH,KAAI,UAAE8K,EAAQkS,gBAAV,aAAE,EAAkBG,kCAE5B,kBAAC,GAAD,CACI3V,MAAM,6MACNxH,KAAI,UAAE8K,EAAQkS,gBAAV,aAAE,EAAkBI,+BAE5B,kBAAC,GAAD,CACI5V,MAAM,uHACNxH,KAAI,UAAE8K,EAAQkS,gBAAV,aAAE,EAAkBK,qBAIpC,kBAAC,GAAD,KACQ,kBAAC,GAAD,CACIva,MAAO,YACPW,QAAS,kBAAMuI,EAAQe,KAAR,wBAA8BpH,KAC7CkB,WAAW,mFAEf,kBAAC,GAAD,CACIsH,QAASrD,EAAQqD,QACjBF,WAjKH,WACCiB,OAAOC,QAAQ,+JAEjC0K,EAAgB,CAAClL,KAAMhJ,EAAIwI,SAAS,IACnC/B,KAAKzC,IAAS,IACdyC,MAAK,gBAAEpM,EAAF,EAAEA,KAAF,OAAY0Z,EAAe1Z,MAChCqM,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,OA4JRkJ,QA3KN,WACIgB,OAAOC,QAAQ,qKAEjC0K,EAAgB,CAAClL,KAAMhJ,EAAIwI,SAAS,IACnC/B,KAAKzC,IAAS,IACdyC,MAAK,gBAAEpM,EAAF,EAAEA,KAAF,OAAY0Z,EAAe1Z,MAChCqM,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,UA0KpB,gCAAQ,oGACR,kBAAC,GAAD,KACI,kBAAC,GAAD,CACI0B,SA9MD,SAACmG,GAChBA,EAAIC,iBAEJ,IAAInN,EAAaF,EAAiBC,GAElC,GAAIC,EAAW2d,YAC0B,IAAjC3d,EAAW2d,WAAWvM,OAAc,CAAC,IAAD,EACNpR,EADM,EAC7B2d,WACP3d,EAFoC,+BAK5Coc,EAAkB,2BACXpc,GADU,IAEb2c,WAAY3W,KAEfyG,KAAKzC,IAAS,IACd0C,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,MAE5BhE,QAAQC,IAAItB,IA6LIiH,QAASA,EACTC,WAAW,iCACXC,UA5LF,WACdA,EAAU,GAAI,IAAI,GACH,CAACkV,EAASC,EAAYC,EAAgBC,GAC9Crc,SAAQ,SAAC8N,GAAD,OAAOA,EAAEyF,QAAQC,2BA4LpB,yBAAKjV,UAAWC,KAAOif,gBACf,yBAAKlf,UAAWC,KAAOmc,YACnB,kBAAC,GAAD,CACI5V,KAAK,OACL2C,MAAM,2EACN3B,SAAUwE,EACVvF,MAAOpF,EAAOmF,KACd0C,UAAWnF,EAAOyC,KAClBoI,UAAW,EACXC,UAAW,IACXnF,cAAezJ,KAAOyJ,gBAE1B,kBAAC,GAAD,CACIlD,KAAK,OACL2C,MAAM,OACN3B,SAAUwE,EACVvF,MAAOpF,EAAOiP,KACdpH,UAAWnF,EAAOuM,KAClB1B,UAAW,EACXC,UAAW,IACXnF,cAAezJ,KAAOyJ,gBAE1B,kBAAC,GAAD,CACIpG,KAAK,SACLkD,KAAK,QACL2C,MAAM,6EACN3B,SAAUwE,EACVvF,MAAOpF,EAAOQ,MACdqH,UAAWnF,EAAOlC,MAClB2I,MAAO,CACH+H,MAAM,SAEVC,IAAK,EACLC,IAAK,IACL/I,cAAezJ,KAAOyJ,iBAGlC,yBAAK1J,UAAWC,KAAOkf,iBACf,kBAAC,GAAD,CACIhW,MAAM,2BACN4F,QAAS8J,EACT7J,aAAa,OACbC,SArRX,SAACC,EAAcoJ,GAChC3V,QAAQC,IAAIsM,GACZzD,EAAU,2BACHpK,GADE,IAELmX,cAAeF,EAAahI,SAkRJlB,SAAUA,GACV7H,YAAY,mDACZiI,cAAY,EACZ7F,cAAe1J,KAAO0J,cACtBQ,SAAUwT,IAEd,kBAAC,GAAD,CACIxU,MAAM,wCACN4F,QAAS2F,GACT1F,aAAa,OACbC,SAAUiP,GACV9O,SAAUA,GACV7H,YAAY,mDACZiI,cAAY,EACZ7F,cAAe1J,KAAO0J,cACtBQ,SAAUyT,IAEd,kBAAC,GAAD,CACIzU,MAAM,mDACN4F,QAAS0F,GACTzF,aAAa,OACbC,SApSV,SAACC,EAAcoJ,GACjC3V,QAAQC,IAAIsM,GACZzD,EAAU,2BACHpK,GADE,kBAEJiX,EAAanJ,QAAUD,EAAaI,KAAI,SAAAC,GAAC,OAAIA,EAAE9I,aAiSxB2I,SAAUA,GACV7H,YAAY,mDACZoC,cAAe1J,KAAO0J,cACtBQ,SAAU0T,IAEd,kBAAC,GAAD,CACI1U,MAAM,0DACN4F,QAAS4F,GACT3F,aAAa,OACbC,SAAUiP,GACV9O,SAAUA,GACV7H,YAAY,mDACZiI,cAAY,EACZ7F,cAAe1J,KAAO0J,cACtBQ,SAAU2T,QAQtB,kBAAC,GAAD,KACI,+BACI,4BACI,sCACA,wDACA,kBAAC,GAAD,CACI1Y,QAAS,kBAAM8M,GAAY,YAC3B/I,MAAM,kCACN8H,UAAU,UACVC,UAAWA,GACXC,MAAOA,KAEX,kBAAC,GAAD,CACI/L,QAAS,kBAAM8M,GAAY,iBAC3B/I,MAAM,uCACN8H,UAAU,eACVC,UAAWA,GACXC,MAAOA,KAEX,kBAAC,GAAD,CACI/L,QAAS,kBAAM8M,GAAY,SAC3B/I,MAAM,2EACN8H,UAAU,OACVC,UAAWA,GACXC,MAAOA,KAEX,kFAGR,gCAEa,OAATgM,QAAS,IAATA,OAAA,EAAAA,EAAWzK,QAASyK,EAAU7N,KAAI,SAAC4F,EAAM3F,GACrC,IAAM6P,EAAYzK,GAAgByC,MAAK,SAAA7H,GACnB,OAAOA,EAAE9I,QAAUyO,EAAKmK,gBAEtCC,EAAW,OAAG1L,QAAH,IAAGA,OAAH,EAAGA,EAAWwD,MAAK,SAACmB,GACjC,OAAOA,EAAKjI,OAAS4E,EAAKsD,iBAE9B,OACQ,wBACI9W,IAAKwT,EAAK5E,KACVlL,QAAS,kBAAMuI,EAAQe,KAAR,qBAA2BwG,EAAK5E,SAE/C,4BAAKf,EAAE,GACP,mCAAK+P,QAAL,IAAKA,OAAL,EAAKA,EAAa9Y,MAClB,kBAAC,GAAD,CACK+H,QAAS2G,EAAKpF,UAEnB,sCACQoF,EAAKmK,aADb,qBAC+BD,QAD/B,IAC+BA,OAD/B,EAC+BA,EAAUG,KADzC,qBACmDH,QADnD,IACmDA,OADnD,EACmDA,EAAU5Y,OAE7D,4BAAK0O,EAAK1O,MACV,4BAAK0O,EAAK+J,WAAWtZ,KAAK,KAAK+S,mBAI3C,kBAAC,GAAD,QAMZ,kBAAC,GAAD,CACIjU,MAAO,UACPW,QAAS,kBAAMuI,EAAQe,KAAR,wBAA8BpH,KAC7CkB,WAAW,0FAGvB,kBAAC,GAAD,CACIV,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGT,kBAAC,GAAD,CACGlD,QAASoD,GACTnD,WAAYoD,GACZjJ,QAASkJ,MA1Rb,kBAAC,GAAD,MAJA,2I,qBCvLAoU,GAdD,SAAC,GAA2B,IAA1Bxf,EAAyB,EAAzBA,UAEN0F,GAF+B,8BAEzB,CACRzF,KAAOuf,MACPxf,IAGJ,OACI,yBAAKA,UAAW0F,EAAIC,KAAK,MACrB,uC,qBCsQG1B,eAAQ,KAAM,CAAEwb,gBZ9QA,SAAC/R,GAC9B,8CAAO,WAAOtL,GAAP,eAAAC,EAAA,+EAIeE,EAAQC,KAAR,uBAAqCkL,GAJpD,UAIGhL,EAJH,OAMHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OARhC,wBASCV,EAASsZ,GAAkB,CAACtb,OAAQ,4IATrC,kBAUQ4B,GAAQ,EAAM,2IAVtB,eAYCI,EAASmZ,GAAkB,CAAEnb,OAAQsC,EAAIf,KAAKoC,UAZ/C,kBAaQ/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAbhC,iEAgBHpB,QAAQC,IAAI,KAAMV,SAClBE,EAASmZ,GAAkB,CAACnb,OAAQ,CAAC,KAAM8B,YAjBxC,kBAkBIF,GAAQ,EAAO,CAAC,KAAME,WAlB1B,0DAAP,wDY6Qa+B,EAnQO,SAAC,GAA4C,IAAD,4CAA1CjE,EAA0C,EAA1CA,UAAWyf,EAA+B,EAA/BA,gBAExBxH,GAFuD,gDAE1C5H,eAAb4H,WAFuD,EAKepN,KADrEC,EAJsD,EAItDA,oBAAqBC,EAJiC,EAIjCA,uBAAwBC,EAJS,EAITA,eACjDE,EAL0D,EAK1DA,oBAAqBC,EALqC,EAKrCA,uBAAwBC,EALa,EAKbA,eAAgBE,EALH,EAKGA,SALH,EAQqBE,KAA5EnK,EARuD,EAQvDA,OAAQ2K,EAR+C,EAQ/CA,aAAcjI,EARiC,EAQjCA,OAAQwE,EARyB,EAQzBA,QAASE,EARgB,EAQhBA,UAAWkD,EARK,EAQLA,WAAYF,EARP,EAQOA,UAErE7L,qBAAU,WACN+L,GAAW,KAEZ,IAEH,IAAMjG,EAAM,CACRzF,KAAOyf,cACP1f,GAGE2f,EAA0B,SAACnR,GAAS,IAAD,EACfA,EAAIjI,OAAnBC,EAD8B,EAC9BA,KAAMC,EADwB,EACxBA,MACT4X,EAAe,GAEjBA,EADEhd,EAAOgd,aACG,2BACPhd,EAAOgd,cADA,kBAET7X,EAAOC,IAGE,eACTD,EAAOC,GAGZgF,EAAU,2BACLpK,GADI,IAEPgd,kBAEF1S,EAAW6C,EAAIjI,OAAO2F,QAAQ,QAAQC,kBAGlCyT,EAAuB,SAACpR,GAAS,IAAD,EACdA,EAAIjI,OAAnBC,EAD6B,EAC7BA,KAAMC,EADuB,EACvBA,MACTkY,EAAW,GAEbA,EADEtd,EAAOsd,SACD,2BACHtd,EAAOsd,UADJ,kBAELnY,EAAOC,IAGF,eACLD,EAAOC,GAGZgF,EAAU,2BACLpK,GADI,IAEPsd,cAEFhT,EAAW6C,EAAIjI,OAAO2F,QAAQ,QAAQC,kBA2B1C,OACI,yBAAKnM,UAAW0F,EAAIC,KAAK,MACxB,kBAACuI,GAAA,EAAD,CAAYrJ,IAAI,MAAMsJ,QAAQ,OAC7B,kBAACC,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAG,YAAYuJ,OAAK,GAAlD,+FACA,kBAACF,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAE,oBAAekT,GAAa3J,OAAK,GAAjE,yFACA,kBAACF,GAAA,EAAD,CAAgBG,QAAM,EAAC1J,IAAI,QAA3B,kHAGE,gCAAQ,8IACR,kBAAC,GAAD,CACIwD,SAlCK,SAACmG,GACdA,EAAIC,iBACJ,IAAMgN,EAAQ,2BACPpa,GADO,IAEV+W,aAAcH,IAElBtV,QAAQC,IAAI6Y,GAEZgE,EAAgBhE,GACf1N,MAAK,SAACrL,GAEH,OADA4I,IAAW5I,GACJA,KAEVqL,MAAK,SAAArL,GACEA,EAAIT,IACJ2B,YAAW,WACP6E,MACD,QAGVuF,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,OAepB4B,QAASA,GAEL,kBAAC,GAAD,CAEK/B,KAAK,OACN2C,MAAM,2EACNwF,UAAU,EACVnH,SAAUwE,EACVvF,MAAOpF,EAAOmF,KACd0C,UAAWnF,EAAOyC,KAClBoI,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CAEKrI,KAAK,OACN2C,MAAM,2BACNwF,UAAU,EACVnH,SAAUwE,EACVvF,MAAOpF,EAAO2a,KACd9S,UAAWnF,EAAOiY,KAClBpN,UAAW,EACXC,UAAW,MAGf,6BACA,6BACA,gCAAQ,uFACR,kBAAC,GAAD,CACIpF,QAAM,EACLjD,KAAK,eACN2C,MAAM,8FACN3B,SAAUmY,EACVlZ,MAAK,UAAEpF,EAAOgd,oBAAT,aAAE,EAAqBC,aAC5BpV,UAAS,UAAEnF,EAAOsa,oBAAT,aAAE,EAAqBC,aAChC1P,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACIpF,QAAM,EACLjD,KAAK,MACN2C,MAAM,qBACN3B,SAAUmY,EACVlZ,MAAK,UAAEpF,EAAOgd,oBAAT,aAAE,EAAqBxD,IAC5B3R,UAAS,UAAEnF,EAAOsa,oBAAT,aAAE,EAAqBxD,IAChCjM,UAAW,GACXC,UAAW,GACXiM,MAAM,8GAEV,kBAAC,GAAD,CACIrR,QAAM,EACLjD,KAAK,MACN2C,MAAM,qBACN3B,SAAUmY,EACVlZ,MAAK,UAAEpF,EAAOgd,oBAAT,aAAE,EAAqBE,IAC5BrV,UAAS,UAAEnF,EAAOsa,oBAAT,aAAE,EAAqBE,MAIpC,kBAAC,GAAD,CACI9U,QAAM,EACLjD,KAAK,OACN2C,MAAM,2BACN3B,SAAUmY,EACVlZ,MAAK,UAAEpF,EAAOgd,oBAAT,aAAE,EAAqBG,KAC5BtV,UAAS,UAAEnF,EAAOsa,oBAAT,aAAE,EAAqBG,OAIpC,kBAAC,GAAD,CACI/U,QAAM,EACLjD,KAAK,gBACN2C,MAAM,oGACN3B,SAAUmY,EACVlZ,MAAK,UAAEpF,EAAOgd,oBAAT,aAAE,EAAqBI,cAC5BvV,UAAS,UAAEnF,EAAOsa,oBAAT,aAAE,EAAqBI,cAChC7P,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACIpF,QAAM,EACLjD,KAAK,kBACN2C,MAAM,kFACN3B,SAAUmY,EACVlZ,MAAK,UAAEpF,EAAOgd,oBAAT,aAAE,EAAqBK,gBAC5BxV,UAAS,UAAEnF,EAAOsa,oBAAT,aAAE,EAAqBK,gBAChC9P,UAAW,EACXC,UAAW,MAEf,6BACA,6BACA,gCAAQ,4KAGR,kBAAC,GAAD,CACIpF,QAAM,EACLjD,KAAK,eACN2C,MAAM,eACN3B,SAAUoY,EACVnZ,MAAK,UAAEpF,EAAOsd,gBAAT,aAAE,EAAiBC,aACxB1V,UAAS,UAAEnF,EAAO4a,gBAAT,aAAE,EAAiBC,aAC5BhQ,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACIpF,QAAM,EACLjD,KAAK,eACN2C,MAAM,eACN3B,SAAUoY,EACVnZ,MAAK,UAAEpF,EAAOsd,gBAAT,aAAE,EAAiBE,aACxB3V,UAAS,UAAEnF,EAAO4a,gBAAT,aAAE,EAAiBE,aAC5BjQ,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACIpF,QAAM,EACLjD,KAAK,kCACN2C,MAAM,iMACN3B,SAAUoY,EACVnZ,MAAK,UAAEpF,EAAOsd,gBAAT,aAAE,EAAiBG,gCACxB5V,UAAS,UAAEnF,EAAO4a,gBAAT,aAAE,EAAiBG,gCAC5BlQ,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACIpF,QAAM,EACLjD,KAAK,+BACN2C,MAAM,6MACN3B,SAAUoY,EACVnZ,MAAK,UAAEpF,EAAOsd,gBAAT,aAAE,EAAiBI,6BACxB7V,UAAS,UAAEnF,EAAO4a,gBAAT,aAAE,EAAiBI,6BAC5BnQ,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACIpF,QAAM,EACLjD,KAAK,oBACN2C,MAAM,uHACN3B,SAAUoY,EACVnZ,MAAK,UAAEpF,EAAOsd,gBAAT,aAAE,EAAiBK,kBACxB9V,UAAS,UAAEnF,EAAO4a,gBAAT,aAAE,EAAiBK,kBAC5BpQ,UAAW,EACXC,UAAW,OAIvB,kBAAC,GAAD,CACI/G,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGT,kBAAC,GAAD,CACGlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,Q,qBC6BXnH,gBAPO,SAACC,GACvB,MAAO,CACLuI,QAASvI,EAAM0X,MAAMnP,WAKiB,CACtC2O,uBAAqBC,kBAAgBG,oBADxBvX,EAvRE,SAAC,GAGH,IAAD,4CAFdjE,EAEc,EAFdA,UAAYyM,EAEE,EAFFA,QAAU2O,EAER,EAFQA,oBAAqBC,EAE7B,EAF6BA,eAC3CG,EACc,EADdA,gBACc,oGAG+D3Q,MADnEC,EAFI,EAEJA,oBAAqBC,EAFjB,EAEiBA,uBAAwBC,EAFzC,EAEyCA,eACnDE,EAHU,EAGVA,oBAAqBC,EAHX,EAGWA,uBAAwBC,EAHnC,EAGmCA,eAAgBE,EAHnD,EAGmDA,SAHnD,EAM0DE,KAAjEnK,EANO,EAMPA,OAAQ2K,EAND,EAMCA,aAAcjI,EANf,EAMeA,OAAQwE,EANvB,EAMuBA,QAASkD,EANhC,EAMgCA,UAAWE,EAN3C,EAM2CA,WAElDrE,EAAM+I,eAAN/I,GACDqG,EAAUC,eAEhBhO,qBAAU,WAGR,OAFAwb,EAAoB,CAAC9T,IACpByG,KAAKzC,GAAS,IACR,WACL+P,EAAe,CACX/K,KAAM,GACN8H,aAAc,GACd5R,KAAM,QAIX,IAEH5G,qBAAU,WACR+L,GAAW,KAEZ,IAEH/L,qBAAU,WACR6L,EAAUgB,KAET,CAACA,IAEJ,IAeMmT,EAAuB,SAACpR,GAAS,IAAD,EACdA,EAAIjI,OAAnBC,EAD6B,EAC7BA,KAAMC,EADuB,EACvBA,MACTkY,EAAW,GAEbA,EADEtd,EAAOsd,SACD,2BACHtd,EAAOsd,UADJ,kBAELnY,EAAOC,IAGF,eACLD,EAAOC,GAGZgF,EAAU,2BACLpK,GADI,IAEPsd,cAEFhT,EAAW6C,EAAIjI,OAAO2F,QAAQ,QAAQC,kBAGlCwT,EAA0B,SAACnR,GAAS,IAAD,EACjBA,EAAIjI,OAAnBC,EADgC,EAChCA,KAAMC,EAD0B,EAC1BA,MACT4X,EAAe,GAEjBA,EADEhd,EAAOgd,aACG,2BACPhd,EAAOgd,cADA,kBAET7X,EAAOC,IAGE,eACTD,EAAOC,GAGZgF,EAAU,2BACLpK,GADI,IAEPgd,kBAEF1S,EAAW6C,EAAIjI,OAAO2F,QAAQ,QAAQC,kBAG9BzG,EAAM,CACRzF,KAAO4f,WACP7f,GAGJ,OAAKyM,EAIFA,EAAQ6D,KAKP,yBAAKtQ,UAAW0F,EAAIC,KAAK,MACxB,kBAACuI,GAAA,EAAD,CAAYrJ,IAAI,MAAMsJ,QAAQ,OAC7B,kBAACC,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAG,YAAYuJ,OAAK,GAAlD,+FACA,kBAACF,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAE,oBAAe0H,EAAQ2L,cAAgB9J,OAAK,GAA5E,yFACA,kBAACF,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAE,iBAAYuC,GAAMgH,OAAK,GAAvD,yFACA,kBAACF,GAAA,EAAD,CAAgBG,QAAM,EAAC1J,IAAI,QAA3B,8IAAiE,gCAAS4H,EAAQjG,QAEhF,gCAAQ,2OACR,kBAAC,GAAD,CACE6B,SA9EG,SAACmG,GAChBA,EAAIC,iBACJ+M,EAAgB,aAAClL,KAAMhJ,GAAOjG,IAC7B0M,KAAKzC,KACLyC,MAAK,SAAArL,GACEA,EAAIT,IACJ2B,YAAW,WACT+J,EAAQ8F,WACP,QAGVzF,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,MAC5BhE,QAAQC,IAAIvB,IAmEAkH,QAASA,EACTC,WAAY,0DAEZ,kBAAC,GAAD,CACMhC,KAAK,OACL2C,MAAM,2EACNwF,UAAU,EACVnH,SAAUwE,EACVvF,MAAOpF,EAAOmF,KACd0C,UAAWnF,EAAOyC,KAClBoI,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACMrI,KAAK,OACP2C,MAAM,2BACNwF,UAAU,EACVnH,SAAUwE,EACVvF,MAAOpF,EAAO2a,KACd9S,UAAWnF,EAAOiY,KAClBpN,UAAW,EACXC,UAAW,MAEd,6BACG,6BACA,gCAAQ,uFACR,kBAAC,GAAD,CACIpF,QAAM,EACLjD,KAAK,eACN2C,MAAM,8FACN3B,SAAUmY,EACVlZ,MAAK,UAAEpF,EAAOgd,oBAAT,aAAE,EAAqBC,aAC5BpV,UAAS,UAAEnF,EAAOsa,oBAAT,aAAE,EAAqBC,aAChC1P,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACIpF,QAAM,EACLjD,KAAK,MACN2C,MAAM,qBACN3B,SAAUmY,EACVlZ,MAAK,UAAEpF,EAAOgd,oBAAT,aAAE,EAAqBxD,IAC5B3R,UAAS,UAAEnF,EAAOsa,oBAAT,aAAE,EAAqBxD,IAChCjM,UAAW,GACXC,UAAW,GACXiM,MAAM,8GAEV,kBAAC,GAAD,CACIrR,QAAM,EACLjD,KAAK,MACN2C,MAAM,qBACN3B,SAAUmY,EACVlZ,MAAK,UAAEpF,EAAOgd,oBAAT,aAAE,EAAqBE,IAC5BrV,UAAS,UAAEnF,EAAOsa,oBAAT,aAAE,EAAqBE,MAEpC,kBAAC,GAAD,CACI9U,QAAM,EACLjD,KAAK,OACN2C,MAAM,2BACN3B,SAAUmY,EACVlZ,MAAK,UAAEpF,EAAOgd,oBAAT,aAAE,EAAqBG,KAC5BtV,UAAS,UAAEnF,EAAOsa,oBAAT,aAAE,EAAqBG,OAEpC,kBAAC,GAAD,CACI/U,QAAM,EACLjD,KAAK,gBACN2C,MAAM,oGACN3B,SAAUmY,EACVlZ,MAAK,UAAEpF,EAAOgd,oBAAT,aAAE,EAAqBI,cAC5BvV,UAAS,UAAEnF,EAAOsa,oBAAT,aAAE,EAAqBI,cAChC7P,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACIpF,QAAM,EACLjD,KAAK,kBACN2C,MAAM,kFACN3B,SAAUmY,EACVlZ,MAAK,UAAEpF,EAAOgd,oBAAT,aAAE,EAAqBK,gBAC5BxV,UAAS,UAAEnF,EAAOsa,oBAAT,aAAE,EAAqBK,gBAChC9P,UAAW,EACXC,UAAW,MAEf,6BACA,6BACA,gCAAQ,4KAGR,kBAAC,GAAD,CACIpF,QAAM,EACLjD,KAAK,eACN2C,MAAM,eACN3B,SAAUoY,EACVnZ,MAAK,UAAEpF,EAAOsd,gBAAT,aAAE,EAAiBC,aACxB1V,UAAS,UAAEnF,EAAO4a,gBAAT,aAAE,EAAiBC,aAC5BhQ,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACIpF,QAAM,EACLjD,KAAK,eACN2C,MAAM,eACN3B,SAAUoY,EACVnZ,MAAK,UAAEpF,EAAOsd,gBAAT,aAAE,EAAiBE,aACxB3V,UAAS,UAAEnF,EAAO4a,gBAAT,aAAE,EAAiBE,aAC5BjQ,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACIpF,QAAM,EACLjD,KAAK,kCACN2C,MAAM,iMACN3B,SAAUoY,EACVnZ,MAAK,UAAEpF,EAAOsd,gBAAT,aAAE,EAAiBG,gCACxB5V,UAAS,UAAEnF,EAAO4a,gBAAT,aAAE,EAAiBG,gCAC5BlQ,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACIpF,QAAM,EACLjD,KAAK,+BACN2C,MAAM,6MACN3B,SAAUoY,EACVnZ,MAAK,UAAEpF,EAAOsd,gBAAT,aAAE,EAAiBI,6BACxB7V,UAAS,UAAEnF,EAAO4a,gBAAT,aAAE,EAAiBI,6BAC5BnQ,UAAW,EACXC,UAAW,MAEf,kBAAC,GAAD,CACIpF,QAAM,EACLjD,KAAK,oBACN2C,MAAM,uHACN3B,SAAUoY,EACVnZ,MAAK,UAAEpF,EAAOsd,gBAAT,aAAE,EAAiBK,kBACxB9V,UAAS,UAAEnF,EAAO4a,gBAAT,aAAE,EAAiBK,kBAC5BpQ,UAAW,EACXC,UAAW,OAKnB,kBAAC,GAAD,CACQ/G,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGjB,kBAAC,GAAD,CACGlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,KApKf,kBAAC,GAAD,MAJA,2I,qBCwEEnH,gBAVS,SAACC,GACvB,MAAO,CACLuI,QAASvI,EAAMiZ,UAAU1Q,QACzBmH,UAAW1P,EAAM0P,UAAUA,UAC3BgI,MAAO1X,EAAM0X,MAAMA,SAMiB,CACtCqB,2BAAyB6C,qBL3FS,SAAC/L,GACnC,8CAAO,WAAO3R,GAAP,eAAAC,EAAA,+EAGeE,EAAQC,KAAR,8BAA4C,CAACuR,UAH5D,UAGGrR,EAHH,OAIHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OANhC,wBAODV,EAASmb,GAAsB,CAACnI,OAAQ,gIAPvC,kBAQMpT,GAAQ,EAAM,+HARpB,eAUDI,EAASgb,GAAsB,CAAEhI,OAAQ1S,EAAIf,KAAKoC,UAVjD,kBAWM/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAX9B,iEAeHpB,QAAQC,IAAR,MACAR,EAASgb,GAAsB,CAAEhI,OAAQ,CAAC,KAAMlT,YAhB7C,kBAiBIF,GAAQ,EAAO,CAAC,KAAME,WAjB1B,0DAAP,uDK0F+Cgb,sBAC/CxJ,qBAAmB2J,wBAFNpZ,EAvKS,SAAC,GAGR,IAFfjE,EAEc,EAFdA,UAAWyM,EAEG,EAFHA,QAASwQ,EAEN,EAFMA,wBACpBC,GACc,EAF+B4C,qBAE/B,EADd5C,oBAAoBtJ,EACN,EADMA,UAAWgI,EACjB,EADiBA,MAAOlI,EACxB,EADwBA,kBAAmB2J,EAC3C,EAD2CA,oBAGjD/V,GAFM,4KAEC+I,eAAP/I,IACFqG,EAAUC,eAHF,EAKwBnO,mBAAS,IALjC,mBAKPsgB,EALO,KAKMC,EALN,OAMkBvgB,mBAAS,IAN3B,mBAMPwgB,EANO,KAMGC,EANH,OAS6DrV,KADnEC,EARM,EAQNA,oBAAqBC,EARf,EAQeA,uBAAwBC,EARvC,EAQuCA,eACnDE,EATY,EASZA,oBAAqBC,EATT,EASSA,uBAAwBC,EATjC,EASiCA,eAAgBE,EATjD,EASiDA,SATjD,EAWU7L,mBAAS,IAXnB,mBAWP8Y,EAXO,KAWD4H,EAXC,KAadvgB,qBAAU,WAKR,OAHAqd,EAAwB,CAAC3V,IACxByG,KAAKzC,GAAS,IAER,WACL4R,EAAmB,CACjB5M,KAAM,GACNkI,cAAe,GACfhS,KAAM,GACN4Z,OAAQ,GACRf,aAAc,GACdgB,UAAW,GACXpB,WAAY,GACZhB,WAAY,QAIf,IAEHre,qBAAU,WACR8T,IACC3F,KAAKzC,GAAS,MAEhB,IAED1L,qBAAU,WACR,IAAa,OAATgU,QAAS,IAATA,OAAA,EAAAA,EAAWlB,SAAUjG,EAAS,CAChC,IAAM6S,EAAW,OAAG1L,QAAH,IAAGA,OAAH,EAAGA,EAAWwD,MAAK,SAAA7H,GAAC,OAAIA,EAAEe,OAAS7D,EAAQ+L,iBAC5D2H,EAAO,OAACb,QAAD,IAACA,OAAD,EAACA,EAAa9Y,SAEtB,CAACoN,EAAWnH,IAEf7M,qBAAU,WACR,GAAKgc,GAAUnP,EAAf,CACA,IAAM6T,EAAW,OAAG1E,QAAH,IAAGA,OAAH,EAAGA,EAAOxE,MAAK,SAAA7H,GAAC,OAAIA,EAAEe,OAAS7D,EAAQwR,cACxD+B,GAA0B,OAAXM,QAAW,IAAXA,OAAA,EAAAA,EAAalI,eAAgB,IAC5C8H,GAAuB,OAAXI,QAAW,IAAXA,OAAA,EAAAA,EAAa9Z,OAAQ,OAChC,CAACoV,EAAOnP,IAEX,IAkBQ/G,EAAM,CACRzF,KAAOsgB,gBACPvgB,GAGJ,OAAKyM,EAIAA,EAAQ6D,KAKT,yBAAKtQ,UAAW0F,EAAIC,KAAK,MACxB,kBAACuI,GAAA,EAAD,CAAYrJ,IAAI,MAAMsJ,QAAQ,OAC7B,kBAACC,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAG,YAAYuJ,OAAK,GAAlD,+FACCyR,GAAe,kBAAC3R,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAE,oBAAegb,GAAezR,OAAK,GAAnE,yFAChB,kBAACF,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAE,iBAAY0H,EAAQwR,YAAc3P,OAAK,GAAvE,8FAA+F,gCAAS2R,IACxG,kBAAC7R,GAAA,EAAD,CAAgBG,QAAM,EAAC1J,IAAI,QAA3B,kFAAuD,gCAAS4H,EAAQjG,QAErE,gCAAQ,+IACT,kBAAC,GAAD,KACI,kBAAC,GAAD,CACI2C,MAAM,OACNxH,KAAM8K,EAAQ6D,OAElB,kBAAC,GAAD,CACInH,MAAM,2BACNxH,KAAO4W,GAAQ9L,EAAQ+L,gBAE1B,kBAAC,GAAD,CACGrP,MAAM,uCACNxH,KAAM8K,EAAQqD,QAAS,2EAAiB,+CAE5C,kBAAC,GAAD,CACI3G,MAAM,0DACNxH,KAAM8K,EAAQ4S,eAElB,kBAAC,GAAD,CACIlW,MAAM,2EACNxH,KAAM8K,EAAQjG,OAElB,kBAAC,GAAD,CACI2C,MAAM,8EACNxH,KAAM8K,EAAQ4T,YAEjB,kBAAC,GAAD,CACGlX,MAAM,mDACNxH,KAAM8K,EAAQwS,WAAWtZ,KAAK,KAAK+S,iBAKhD,kBAAC,GAAD,KACG,kBAAC,GAAD,CACMjU,MAAO,YACPW,QAAS,kBAAMuI,EAAQe,KAAR,4BAAkCpH,KACjDkB,WAAW,mFAEf,kBAAC,GAAD,CACEsH,QAASrD,EAAQqD,QACjBF,WAvEO,WACCiB,OAAOC,QAAQ,+JAEjCuM,EAAoB,CAAC/M,KAAMhJ,EAAIwI,SAAS,IACvC/B,KAAKzC,GAAS,IACdyC,MAAK,gBAAEpM,EAAF,EAAEA,KAAF,OAAYub,EAAmBvb,MACpCqM,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,OAkElBkJ,QAjFI,WACIgB,OAAOC,QAAQ,qKAEjCuM,EAAoB,CAAC/M,KAAMhJ,EAAIwI,SAAS,IACvC/B,KAAKzC,GAAS,IACdyC,MAAK,gBAAEpM,EAAF,EAAEA,KAAF,OAAYub,EAAmBvb,MACpCqM,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,UA+EpB,kBAAC,GAAD,CACQmB,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGjB,kBAAC,GAAD,CACIlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,KAlEV,kBAAC,GAAD,MAJF,+H,qBCjFEoV,GAdG,SAAC,GAA2B,IAA1BxgB,EAAyB,EAAzBA,UAEV0F,GAFmC,8BAE7B,CACRzF,KAAOugB,UACPxgB,IAGJ,OACI,yBAAKA,UAAW0F,EAAIC,KAAK,MACrB,2C,qBCiNG1B,gBATS,SAACC,GACrB,MAAO,CACH0P,UAAW1P,EAAM0P,UAAUA,aAOK,CACnCF,qBAAmB+M,oBP1NW,SAAC/S,GAClC,8CAAO,WAAOtL,GAAP,eAAAC,EAAA,+EAIeE,EAAQC,KAAR,0BAAwCkL,GAJvD,UAIGhL,EAJH,OAMHC,QAAQC,IAAIF,GAEO,MAAfA,EAAIG,SAAkBH,EAAIf,KAAKmB,OARhC,wBASCV,EAASmb,GAAsB,CAACnd,OAAQ,sIATzC,kBAUQ4B,GAAQ,EAAM,qIAVtB,eAYCI,EAASgb,GAAsB,CAAEhd,OAAQsC,EAAIf,KAAKoC,UAZnD,kBAaQ/B,GAAQ,EAAOU,EAAIf,KAAKoC,SAbhC,iEAgBHpB,QAAQC,IAAI,KAAMV,SAClBE,EAASgb,GAAsB,CAAChd,OAAQ,CAAC,KAAM8B,YAjB5C,kBAkBIF,GAAQ,EAAO,CAAC,KAAME,WAlB1B,0DAAP,wDOwNa+B,EA1MW,SAAC,GAER,IADfjE,EACc,EADdA,UAAW0T,EACG,EADHA,kBAAmBE,EAChB,EADgBA,UAAW6M,EAC3B,EAD2BA,oBAGlCC,GAFO,oFAEGrQ,eAAVqQ,QACD/S,EAAUC,eAHF,EAM+D/C,KADrEC,EALM,EAKNA,oBAAqBC,EALf,EAKeA,uBAAwBC,EALvC,EAKuCA,eACjDE,EANU,EAMVA,oBAAqBC,EANX,EAMWA,uBAAwBC,EANnC,EAMmCA,eAAgBE,EANnD,EAMmDA,SANnD,EAS0DE,KAAjEnK,EATO,EASPA,OAAQ2K,EATD,EASCA,aAAcjI,EATf,EASeA,OAAQwE,EATvB,EASuBA,QAASkD,EAThC,EASgCA,UAAWE,EAT3C,EAS2CA,WAT3C,EAWwBlM,mBAAS,CAAC,CAAC+G,KAAM,6GAAyB+H,QAAQ,KAX1E,mBAWPsK,EAXO,KAWMC,EAXN,KAaRoF,EAAiB,SAAChP,EAAD,GAAqC,IAArBC,EAAoB,EAApBA,QAAS1I,EAAW,EAAXA,MAC5C9D,QAAQC,IAAIsM,GACZzD,EAAU,2BACHpK,GADE,kBAEJ8N,EAAU1I,MAkBb2I,EAAW,SAACF,EAAcG,GAC5B1M,QAAQC,IAAIsM,GACZzD,EAAU,2BACHpK,GADE,kBAEJgO,EAAYF,QAAUD,EAAaI,KAAI,SAAAC,GAAC,OAAIA,EAAE9I,aAIvD7G,qBAAU,WACN8T,IACC3F,KAAKzC,GAAS,IACd0C,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,QAG7B,IAEH/G,qBAAU,WACFgU,GACAkF,EAAelF,KAEpB,CAACA,IAEJhU,qBAAU,WACN+L,GAAW,KAEZ,IAEH,IAAMjG,EAAM,CACRzF,KAAO0gB,kBACP3gB,GA4BJ,OACI,yBAAKA,UAAW0F,EAAIC,KAAK,MACxB,kBAACuI,GAAA,EAAD,CAAYrJ,IAAI,MAAMsJ,QAAQ,OAC7B,kBAACC,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAG,YAAYuJ,OAAK,GAAlD,+FACA,kBAACF,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAE,iBAAY2b,GAAUpS,OAAK,GAA3D,yFACA,kBAACF,GAAA,EAAD,CAAgBG,QAAM,EAAC1J,IAAI,QAA3B,sGAEE,gCAAQ,kIACR,kBAAC,GAAD,CACIwD,SAlCK,SAACmG,GACdA,EAAIC,iBACJ,IAAM6O,EAAY,2BACXjc,GADW,IAEd4c,WAAYyC,IAEhB/d,QAAQC,IAAI0a,GAEZmD,EAAoBnD,GACnBvP,MAAK,SAACrL,GAEL,OADA4I,IAAW5I,GACJA,KAERqL,MAAK,SAACrL,GACDA,EAAIT,IACN2B,YAAW,WACX+J,EAAQ8F,WACL,QAGNzF,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,MAC3BoH,MAAK,kBAAMpL,QAAQC,IAAI,yBAchB2F,QAASA,GAGL,kBAAC,GAAD,CACK/B,KAAK,OACN2C,MAAM,2EACNwF,UAAU,EACVnH,SAAUwE,EACVvF,MAAOpF,EAAOmF,KACd0C,UAAWnF,EAAOyC,KAClBoI,UAAW,EACXC,UAAW,MAGf,kBAAC,GAAD,CACKrI,KAAK,sBACN2C,MAAM,mIACNwF,UAAU,EACVnH,SAAUwE,EACVvF,MAAOpF,EAAOuf,oBACd1X,UAAWnF,EAAO6c,oBAClBhS,UAAW,EACXC,UAAW,MAGf,kBAAC,GAAD,CACI1F,MAAM,2BACN4F,QAAS8J,EACT7J,aAAa,OACbC,SA/GC,SAACC,EAAcoJ,GAChC3V,QAAQC,IAAIsM,GACZzD,EAAU,2BACHpK,GADE,IAELmX,cAAeF,EAAahI,SA4GhBlB,SAAUA,EACV7H,YAAY,mDACZiI,cAAY,IAEf,kBAAC,GAAD,CACGrG,MAAM,wCACN4F,QAAS2F,GACT1F,aAAa,OACbC,SAAUiP,EACV9O,SAAUA,EACV7H,YAAY,mDACZiI,cAAY,EACZwK,eAAgB,CAAC,CAACxT,KAAM,eAAMC,OAAO,EAAM0I,QAAS,aAExD,kBAAC,GAAD,CACIhG,MAAM,mDACN4F,QAAS0F,GACTzF,aAAa,OACbC,SA3HE,SAACC,EAAcoJ,GACjC3V,QAAQC,IAAIsM,GACZzD,EAAU,2BACHpK,GADE,kBAEJiX,EAAanJ,QAAUD,EAAaI,KAAI,SAAAC,GAAC,OAAIA,EAAE9I,aAwHpC2I,SAAUA,EACV7H,YAAY,qDAEhB,kBAAC,GAAD,CACI4B,MAAM,0DACN4F,QAAS4F,GACT3F,aAAa,OACbC,SAAUiP,EACV9O,SAAUA,EACV7H,YAAY,mDACZiI,cAAY,IAEhB,kBAAC,GAAD,CACKhJ,KAAK,YACN2C,MAAM,8EACNwF,UAAU,EACVnH,SAAUwE,EACVvF,MAAOpF,EAAOgf,UACdnX,UAAWnF,EAAOsc,UAClBzR,UAAW,EACXC,UAAW,OAKvB,kBAAC,GAAD,CACI/G,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGT,kBAAC,GAAD,CACGlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,Q,qBCsCbnH,gBATS,SAACC,GACvB,MAAO,CACLuI,QAASvI,EAAMiZ,UAAU1Q,WAOW,CACrCwQ,2BAAyBC,sBAAoBG,wBADjCpZ,EAhOQ,SAAC,GAGP,IAFfjE,EAEc,EAFdA,UAAWid,EAEG,EAFHA,wBAAyBxQ,EAEtB,EAFsBA,QACpCyQ,GACc,EAF+BtJ,UAE/B,EADdsJ,oBAAoBG,EACN,EADMA,oBAGb/V,GAFO,yHAED+I,eAAN/I,IACDqG,EAAUC,eAHF,EAM6D/C,KADnEC,EALM,EAKNA,oBAAqBC,EALf,EAKeA,uBAAwBC,EALvC,EAKuCA,eACnDE,EANY,EAMZA,oBAAqBC,EANT,EAMSA,uBAAwBC,EANjC,EAMiCA,eAAgBE,EANjD,EAMiDA,SANjD,EAS8CE,KAArDnK,EATO,EASPA,OAAQ2K,EATD,EASCA,aAAcjI,EATf,EASeA,OAAQwE,EATvB,EASuBA,QAASkD,EAThC,EASgCA,UAThC,EAUgChM,mBAAS,CAAC,CAAC+G,KAAM,2EAVjD,mBAUP+S,EAVO,KAUUC,EAVV,OAWwC/Z,mBAAS,CAAC,CAAC+G,KAAM,2EAXzD,mBAWPqa,EAXO,KAWcC,EAXd,OAYoCrhB,mBAAS,CAAC,CAAC+G,KAAM,2EAZrD,mBAYPua,EAZO,KAYYC,EAZZ,KAchBphB,qBAAU,WACqC6M,EAAtC+L,cAAsC/L,EAAvBwR,WADP,IACsBgD,EADvB,aAC+BxU,EAD/B,gCAEdhB,EAAUwV,KAET,CAACxU,IAEJ7M,qBAAU,WACR,GAAI6M,EAAS,CAEX,IAAMmN,EAAWlF,GAAc0C,MAAK,SAAA7H,GAAC,OAAIA,EAAE9I,QAAUgG,EAAQ8B,UAEzDqL,GACFJ,EAAmB,CAACI,IAGtB,IAAMsH,EAAwBzM,GAAkBqF,QAAO,SAAAvK,GACnD,OAAO9C,EAAQwS,WAAWlZ,SAASwJ,EAAE9I,UAGrCya,EAAsBxO,QACxBoO,EAAuBI,GAGzB,IAAMC,EAAsBxM,GAAgByC,MAAK,SAAA7H,GAC/C,OAAO9C,EAAQ4S,eAAiB9P,EAAE9I,SAGhC0a,GACFH,EAAqB,CAACG,OAKzB,CAAC1U,IAGJ7M,qBAAU,WAKR,OAHAqd,EAAwB,CAAC3V,IACxByG,KAAKzC,GAAS,IAER,WACL4R,EAAmB,CACf5M,KAAM,GACNkI,cAAe,GACfhS,KAAM,GACN4Z,OAAQ,GACRf,aAAc,GACdgB,UAAW,GACXpB,WAAY,GACZhB,WAAY,QAIjB,IAED,IAAMC,EAAiB,SAAChP,EAAD,GAAqC,IAArBC,EAAoB,EAApBA,QAAS1I,EAAW,EAAXA,MAC5C9D,QAAQC,IAAIsM,GACZzD,EAAU,2BACHpK,GADE,kBAEJ8N,EAAU1I,MAYb2I,EAAW,SAACF,EAAcG,GAC5B1M,QAAQC,IAAIsM,GACZzD,EAAU,2BACHpK,GADE,kBAEJgO,EAAYF,QAAUD,EAAaI,KAAI,SAAAC,GAAC,OAAIA,EAAE9I,aAI/Cf,EAAM,CACRzF,KAAOmhB,eACPphB,GA4BJ,OAAKyM,EAIAA,EAAQ6D,KAKT,yBAAKtQ,UAAW0F,EAAIC,KAAK,MACxB,kBAACuI,GAAA,EAAD,CAAYrJ,IAAI,MAAMsJ,QAAQ,OAC7B,kBAACC,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAG,YAAYuJ,OAAK,GAAlD,+FACA,kBAACF,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAE,iBAAY0H,EAAQwR,YAAc3P,OAAK,GAAvE,yFACA,kBAACF,GAAA,EAAD,CAAgBvJ,IAAKwJ,IAAStJ,GAAE,qBAAgBuC,GAAMgH,OAAK,GAA3D,6EACA,kBAACF,GAAA,EAAD,CAAgBG,QAAM,EAAC1J,IAAI,QAA3B,0GAA2D,oCAAU4H,EAAQjG,MAA7E,MAEE,gCAAQ,kIACR,kBAAC,GAAD,CACI6B,SA3CK,SAACmG,GAChBA,EAAIC,iBACJ,IAAM6O,EAAY,2BACXjc,GADW,IAEdiP,KAAMhJ,IAEV3E,QAAQC,IAAI0a,GAEZD,EAAoBC,GACnBvP,MAAK,SAACrL,GAEL,OADA4I,IAAW5I,GACJA,KAERqL,MAAK,SAAArL,GACEA,EAAIT,IACJ2B,YAAW,WACT+J,EAAQ8F,WACP,QAGV1F,MAAK,kBAAMpL,QAAQC,IAAI,wBACvBoL,OAAM,SAACrH,GAAD,OAAShE,QAAQC,IAAI+D,OAuBlB4B,QAASA,EACTC,WAAW,0DAEP,kBAAC,GAAD,CACKhC,KAAK,OACN2C,MAAM,2EACN3B,SAAUwE,EACVvF,MAAOpF,EAAOmF,KACd0C,UAAWnF,EAAOyC,KAClBoI,UAAW,EACXC,UAAW,MAEd,kBAAC,GAAD,CACG1F,MAAM,wCACN4F,QAAS2F,GACT1F,aAAa,OACbC,SAAUiP,EACV9O,SAAUA,EACV7H,YAAY,mDACZiI,cAAY,EACZwK,eAAgBT,IAEpB,kBAAC,GAAD,CACIpQ,MAAM,mDACN4F,QAAS0F,GACTzF,aAAa,OACbC,SA3FA,SAACC,EAAcoJ,GACjC3V,QAAQC,IAAIsM,GACZzD,EAAU,2BACHpK,GADE,kBAEJiX,EAAanJ,QAAUD,EAAaI,KAAI,SAAAC,GAAC,OAAIA,EAAE9I,aAwFlC2I,SAAUA,EACV7H,YAAY,mDACZyS,eAAgB6G,IAEpB,kBAAC,GAAD,CACI1X,MAAM,0DACN4F,QAAS4F,GACT3F,aAAa,OACbC,SAAUiP,EACV9O,SAAUA,EACV7H,YAAY,mDACZiI,cAAY,EACZwK,eAAgB+G,IAEpB,kBAAC,GAAD,CACKva,KAAK,YACN2C,MAAM,8EACN3B,SAAUwE,EACVvF,MAAOpF,EAAOgf,UACdnX,UAAWnF,EAAOsc,UAClBzR,UAAW,EACXC,UAAW,OAInB,kBAAC,GAAD,CACQ/G,QAASgD,EACT/C,WAAYgD,EACZ7I,QAAS8I,IAGjB,kBAAC,GAAD,CACGlD,QAASoD,EACTnD,WAAYoD,EACZjJ,QAASkJ,KA3Eb,kBAAC,GAAD,MAJF,+H,qBCtEEiW,GA1CF,SAAC7hB,GAEV,OACI,yBAAKQ,UAAWC,KAAOohB,MACnB,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOC,KAAK,IAAIhT,OAAK,EAACiT,UAAW/L,KACjC,kBAAC,KAAD,CAAO8L,KAAK,YAAYhT,OAAK,EAACiT,UAAWjP,KACzC,kBAAC,KAAD,CAAOgP,KAAK,gBAAgBhT,OAAK,EAACiT,UAAWhR,KAC7C,kBAAC,KAAD,CAAO+Q,KAAK,uBAAuBhT,OAAK,EAACiT,UAAW/N,KACpD,kBAAC,KAAD,CAAO8N,KAAK,kBAAkBC,UAAWtT,KACzC,kBAAC,KAAD,CAAOqT,KAAK,SAAShT,OAAK,EAACiT,UAAW1E,KACtC,kBAAC,KAAD,CAAOyE,KAAK,aAAahT,OAAK,EAACiT,UAAW9E,KAC1C,kBAAC,KAAD,CAAO6E,KAAK,oBAAoBhT,OAAK,EAACiT,UAAWvE,KACjD,kBAAC,KAAD,CAAOsE,KAAK,YAAYhT,OAAK,EAACiT,UAAW/E,KACzC,kBAAC,KAAD,CAAO8E,KAAK,QAAQhT,OAAK,EAACiT,UAAWnL,KACrC,kBAAC,KAAD,CAAOkL,KAAK,YAAYC,UAAW9J,KACnC,kBAAC,KAAD,CAAO6J,KAAK,eAAeC,UAAWxK,KACtC,kBAAC,KAAD,CAAOuK,KAAK,aAAahT,OAAK,EAACiT,UAAWzM,KAC1C,kBAAC,KAAD,CAAOwM,KAAK,iBAAiBhT,OAAK,EAACiT,UAAWlM,KAC9C,kBAAC,KAAD,CAAOiM,KAAK,wBAAwBhT,OAAK,EAACiT,UAAWjM,KACrD,kBAAC,KAAD,CAAOgM,KAAK,gBAAgBC,UAAWhN,KACvC,kBAAC,KAAD,CAAO+M,KAAK,YAAYhT,OAAK,EAACiT,UAAWpF,KACzC,kBAAC,KAAD,CAAOmF,KAAK,gBAAgBhT,OAAK,EAACiT,UAAWxF,KAC7C,kBAAC,KAAD,CAAOuF,KAAK,uBAAuBhT,OAAK,EAACiT,UAAWlF,KACpD,kBAAC,KAAD,CAAOiF,KAAK,eAAeC,UAAW7G,KACtC,kBAAC,KAAD,CAAO4G,KAAK,iCAAiChT,OAAK,EAACiT,UAAWlJ,KAC9D,kBAAC,KAAD,CAAOiJ,KAAK,qCAAqChT,OAAK,EAACiT,UAAWrI,KAClE,kBAAC,KAAD,CAAOoI,KAAK,4CAA4ChT,OAAK,EAACiT,UAAWxH,KACzE,kBAAC,KAAD,CAAOuH,KAAK,mCAAmCC,UAAWxI,KAC1D,kBAAC,KAAD,CAAOuI,KAAK,SAAShT,OAAK,EAACiT,UAAW/B,KACtC,kBAAC,KAAD,CAAO8B,KAAK,aAAahT,OAAK,EAACiT,UAAWnD,KAC1C,kBAAC,KAAD,CAAOkD,KAAK,oBAAoBhT,OAAK,EAACiT,UAAW1B,KACjD,kBAAC,KAAD,CAAOyB,KAAK,uBAAuBC,UAAW7B,KAC9C,kBAAC,KAAD,CAAO4B,KAAK,aAAahT,OAAK,EAACiT,UAAWf,KAC1C,kBAAC,KAAD,CAAOc,KAAK,iBAAiBhT,OAAK,EAACiT,UAAWhB,KAC9C,kBAAC,KAAD,CAAOe,KAAK,wBAAwBhT,OAAK,EAACiT,UAAWH,KACrD,kBAAC,KAAD,CAAOE,KAAK,wBAAwBhT,OAAK,EAACiT,UAAWZ,Q,yCChDtDa,GApBI,SAAC,GAA4C,IAA3C1G,EAA0C,EAA1CA,MAAOxS,EAAmC,EAAnCA,SAAUtI,EAAyB,EAAzBA,UAE9BsH,GAFuD,iDAElD,UAAa5D,KAAKqG,SAAS0X,WAAWzX,MAAM,IAEjDtE,EAAM,CACVzF,KAAOuhB,WACPxhB,GAGA,OACI,kBAAC,WAAD,KACE,uBAAGsH,GAAIA,EAAItH,UAAW0F,EAAIC,KAAK,MAAQmV,GACvC,kBAAC4G,GAAA,EAAD,CAAsBC,QAAO,WAAMra,IAChCgB,GAEH,+B,+BCAKsZ,GAdA,SAACpiB,GAEZ,OACE,kBAAC6O,GAAA,EAAD,eAASxJ,IAAKgd,IACZ7hB,UAAWC,KAAO2hB,QACdpiB,EAFN,CAGEsiB,YAAa,CACXC,WAAY,OACZtd,MAAO,aAETjF,EAAM8I,W,oBCoDC0Z,GA7DE,SAAC,GAAsB,IAArB3d,EAAoB,EAApBA,OAGXqB,GAH+B,EAAZpB,OAGb,CACVrE,KAAO+hB,SACN3d,EAA2B,GAAnBpE,KAAOgiB,aAQlB,OACE,yBAAKjiB,UAAW0F,EAAIC,KAAK,MAOvB,kBAAC,GAAD,CAAYmV,MAAK,6HACf,kBAACvV,EAAA,EAAD,CAAK2c,UAAQ,GACT,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,CAAQpd,GAAG,aAAX,qDAEF,kBAACod,GAAA,EAAD,KACE,kBAAC,GAAD,CAAQpd,GAAG,mBAAX,0FAEF,kBAACod,GAAA,EAAD,KACE,kBAAC,GAAD,CAAQpd,GAAG,UAAX,6BAEF,kBAACod,GAAA,EAAD,KACE,kBAAC,GAAD,CAAQpd,GAAG,aAAX,gFAIR,kBAAC,GAAD,CAAY+V,MAAO,gEACjB,kBAACvV,EAAA,EAAD,CAAK2c,UAAQ,GACT,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,CAAQpd,GAAG,aAAX,qDAEF,kBAACod,GAAA,EAAD,KACE,kBAAC,GAAD,CAAQpd,GAAG,cAAX,qCAIR,kBAAC,GAAD,CAAY+V,MAAO,gEACjB,kBAACvV,EAAA,EAAD,CAAK2c,UAAQ,GACT,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,CAAQpd,GAAG,iBAAX,qE,qBCmBCd,gBATS,SAACC,GACrB,MAAO,CACHke,WAAYle,EAAME,MAAMge,cAOQ,CAACjgB,eAAcc,iBAAxCgB,EA9DA,SAAC,GAA+C,IAA9Cme,EAA6C,EAA7CA,WAAYjgB,EAAiC,EAAjCA,aAAcc,EAAmB,EAAnBA,cAEjCmH,EAAUC,YAAc,sBAF4B,EAG9B5K,oBAAS,GAHqB,mBAGnD4E,EAHmD,KAG3CuN,EAH2C,KAIpDtN,EAAS,kBAAMsN,GAAWvN,IAyBhC,OAtBAzE,qBAAU,WACRgS,EAAUxH,KACT,CAACA,IAEJxK,qBAAU,WACN,IAAM4D,EAAYtC,IAClB,GAAKsC,EAAL,CACA,IAEIlE,EAFE+iB,EAAYviB,KAAKkB,OAASwC,EAC1BC,EAAQC,KAAKC,MAAOH,EAAY1D,KAAKkB,OAW3C,OATA2B,QAAQC,IAAIa,GACR4e,EACAlgB,KAEAc,GAAc,GACd3D,EAAQsE,YAAW,WACfzB,MACDsB,IAEA,kBAAMJ,aAAa/D,OAC5B,CAAC6C,EAAcc,IAEZmf,EAOD,yBAAKpiB,UAAWC,KAAOqiB,QACnB,kBAAC,EAAD,CACIje,OAAQA,EACRC,OAAQA,IAEZ,yBAAKtE,UAAU,UACX,kBAAC,GAAD,CACIqE,OAAQA,EACRC,OAAQA,IAEZ,kBAAC,GAAD,OAEJ,kBAAC,EAAD,OAjBA,kBAAC,GAAD,S,6DCjBKie,G,+MAtBbre,MAAQ,CAAEse,UAAU,G,iEAOFjZ,EAAOkZ,GAEvB9f,QAAQC,IAAI2G,EAAOkZ,K,+BAInB,OAAIC,KAAKxe,MAAMse,SAEN,wBAAIxiB,UAAWC,KAAOsiB,eAAtB,mGAGFG,KAAKljB,MAAM8I,Y,gDAhBYiB,GAE9B,MAAO,CAAEiZ,UAAU,O,GANGG,IAAMC,W,mBCF5BC,GAAe,CACjBC,cAAc,GCDlB,IAAMD,GAAe,CACnBT,YAAY,EACZre,OAAQ,KACR6B,SAAS,EACTzB,KAAM,WACNpB,SAAU,KACVe,SAAS,GCJX,IAAM+e,GAAe,CACnB7M,KAAM,GACNpQ,SAAS,EACT7B,OAAQ,CACNiS,KAAM,KACNvJ,QAAS,KACTM,OAAQ,KACRqI,OAAQ,KACRhV,OAAQ,MAEVqM,QAAS,ICZX,IAAMoW,GAAe,CACnBlW,SAAU,GACV/G,SAAS,EACT6G,QAAS,CACP6D,KAAM,IAERvM,OAAQ,CACN4I,SAAU,KACVF,QAAS,KACTM,OAAQ,KACRqI,OAAQ,KACRhV,OAAQ,MAEV2iB,QAAS,CACPhW,OAAQ,KACRqI,OAAQ,KACRhV,OAAQ,MAEV0Z,OAAQ,CACNjY,MAAO,IACP2E,KAAM,GACNuL,OAAQ,EACRK,QAAS,GACT9B,KAAM,KCvBV,IAAMuS,GAAe,CACnB1I,SAAU,GACVvU,SAAS,EACT6G,QAAS,CACP6D,KAAM,GACNuK,IAAK,GACLrU,KAAM,IAERzC,OAAQ,CACNoW,SAAU,KACV1N,QAAS,KACTM,OAAQ,KACRqI,OAAQ,KACRhV,OAAQ,MAEV2iB,QAAS,CACPhW,OAAQ,KACRqI,OAAQ,KACRhV,OAAQ,MAEV0Z,OAAQ,CACNe,IAAK,GACLhZ,MAAO,IACP2E,KAAM,GACNuL,OAAQ,EACRK,QAAS,GACT9B,KAAM,KCvBV,IAAMuS,GAAe,CACnBjP,UAAW,GACXhO,SAAS,EACT6G,QAAS,CACP6D,KAAM,GACN/B,QAAQ,EACRiG,MAAO,GACPhO,KAAM,IAERzC,OAAQ,CACN6P,UAAW,KACXnH,QAAS,KACTM,OAAQ,KACRqI,OAAQ,KACRhV,OAAQ,MAEV2iB,QAAS,CACPhW,OAAQ,KACRqI,OAAQ,KACRhV,OAAQ,MAEV0Z,OAAQ,CACNjY,MAAO,IACP2E,KAAM,GACNuL,OAAQ,EACRK,QAAS,GACT9B,KAAM,GACN/B,QAAQ,EACRiG,MAAO,KC9BX,IAAMqO,GAAe,CACnBjH,MAAO,GACPhW,SAAS,EACT6G,QAAS,CACP6D,KAAM,GACN8H,aAAc,GACd5R,KAAM,IAERzC,OAAQ,CACN6X,MAAO,KACPnP,QAAS,KACTM,OAAQ,KACRqI,OAAQ,KACRhV,OAAQ,MAEV2iB,QAAS,CACPhW,OAAQ,KACRqI,OAAQ,KACRhV,OAAQ,MAEV0Z,OAAQ,CACNjY,MAAO,IACP2E,KAAM,GACNuL,OAAQ,EACRK,QAAS,GACT9B,KAAM,GACN8H,aAAc,KC1BlB,IAAMyK,GAAe,CACnB1F,UAAW,GACXvX,SAAS,EACT6G,QAAS,CACP6D,KAAM,GACNkI,cAAe,GACfhS,KAAM,GACN4Z,OAAQ,GACRf,aAAc,GACdgB,UAAW,GACXpB,WAAY,GACZhB,WAAY,IAEdla,OAAQ,CACNoZ,UAAW,KACX1Q,QAAS,KACTM,OAAQ,KACRqI,OAAQ,KACRhV,OAAQ,MAEV2iB,QAAS,CACPhW,OAAQ,KACRqI,OAAQ,KACRhV,OAAQ,MAEV0Z,OAAQ,CACNjY,MAAO,IACP2E,KAAM,GACNuL,OAAQ,EACRK,QAAS,GACT9B,KAAM,KC/BV,IAAMuS,GAAe,CACnB/K,iBAAkB,GAClBlS,SAAS,EACT6G,QAAS,CACP6D,KAAM,GACNkI,cAAe,GACfjK,OAAQ,GACR4J,YAAa,GACbC,aAAc,GACdK,SAAU,IAEZ1U,OAAQ,CACN+T,iBAAkB,KAClBrL,QAAS,KACTM,OAAQ,KACRqI,OAAQ,KACRhV,OAAQ,MAEV2iB,QAAS,CACPhW,OAAQ,KACRqI,OAAQ,KACRhV,OAAQ,MAEV0Z,OAAQ,CACNjY,MAAO,IACPkQ,OAAQ,EACRK,QAAS,GACT9B,KAAM,KC3BV,IAAMuS,GAAe,CACnBzV,MAAO,GACPxH,SAAS,EACT6G,QAAS,CACP6D,KAAM,IAERvM,OAAQ,CACNqJ,MAAO,KACPX,QAAS,KACTM,OAAQ,KACRqI,OAAQ,KACRhV,OAAQ,MAEV2iB,QAAS,CACPhW,OAAQ,KACRqI,OAAQ,KACRhV,OAAQ,MAEV0Z,OAAQ,CACNjY,MAAO,IACP2E,KAAM,GACNuL,OAAQ,EACRK,QAAS,GACT9B,KAAM,KCvBV,IAAMuS,GAAe,CACnBG,aAAc,GACdpd,SAAS,EACT6G,QAAS,CACP6D,KAAM,IAERvM,OAAQ,CACNif,aAAc,KACdvW,QAAS,KACTM,OAAQ,KACRqI,OAAQ,KACRhV,OAAQ,MAEV2iB,QAAS,CACPhW,OAAQ,KACRqI,OAAQ,KACRhV,OAAQ,MAEV0Z,OAAQ,CACNjY,MAAO,IACP2E,KAAM,GACNuL,OAAQ,EACRK,QAAS,GACT9B,KAAM,KCZK2S,oBAAgB,CAC3BC,OXPW,WAAsD,IAA/Bhf,EAA8B,uDAAtB2e,GAAcM,EAAQ,uCAChE,OAAQA,EAAO7f,MACX,I5ETiB,Y4EUb,OAAO,2BAAKY,GAAZ,IAAmB4e,cAAc,IACrC,I5EVkB,a4EWd,OAAO,2BAAK5e,GAAZ,IAAmB4e,cAAc,IACrC,QACI,OAAO5e,IWCfE,MVJW,WAAqD,IAA/BF,EAA8B,uDAAtB2e,GAAcM,EAAQ,uCACjE,OAAQA,EAAO7f,MACb,I7EP4B,mB6EQ1B,OAAO,2BACFY,GADL,IAEEke,WAAYe,EAAOtgB,OACnBE,SAAUogB,EAAOpgB,WAErB,I7EVwB,e6EWtB,OAAO,2BACFmB,GADL,IAEEJ,QAASqf,EAAOrf,QAChBK,KAAM,UAEV,I7ElB4B,mB6EmB1B,OAAO,2BACFD,GADL,IAEEH,OAAQof,EAAOpf,SAEnB,I7EtB6B,oB6EuB3B,OAAO,2BACFG,GADL,IAEE0B,QAASud,EAAOtgB,SAEpB,I7EzBmB,U6E0BjB,OAAOggB,GACT,QACE,OAAO3e,IUtBTgS,KTCW,WAAoD,IAA/BhS,EAA8B,uDAAtB2e,GAAcM,EAAQ,uCAChE,OAAQA,EAAO7f,MACb,I9EJ4B,mB8EK1B,OAAO,2BACFY,GADL,IAEE8R,KAAMmN,EAAOnN,OAEjB,I9EVwB,e8EWtB,OAAO,2BACF9R,GADL,IAEE0B,QAASud,EAAOtgB,SAEpB,I9Eb4B,mB8Ec1B,OAAO,2BACFqB,GADL,IAEEH,OAAO,2BACFG,EAAMH,QACNof,EAAOpf,UAGhB,I9EpB4B,mB8EqBxB,OAAO,2BACFG,GADL,IAEEuI,QAAS0W,EAAO1W,UAEtB,QACE,OAAOvI,IS1BTyI,SRYW,WAAuD,IAA/BzI,EAA8B,uDAAtB2e,GAAcM,EAAQ,uCACnE,OAAQA,EAAO7f,MACb,I/EN4B,mB+EO1B,OAAO,2BACFY,GADL,IAEE0B,QAASud,EAAOtgB,SAGpB,I/ETwB,e+EUtB,OAAO,2BACFqB,GADL,IAEEyI,SAAUwW,EAAOxW,WAGrB,I/EdgC,uB+Ee9B,OAAO,2BACFzI,GADL,IAEEuI,QAAS0W,EAAO1W,UAGpB,I/EtB4B,mB+EuB1B,OAAO,2BACFvI,GADL,IAEEH,OAAO,2BACFG,EAAMH,QACNof,EAAOpf,UAIhB,I/EhC4B,mB+EiC1B,OAAO,2BACFG,GADL,IAEE6e,QAAQ,2BACH7e,EAAM6e,SACNI,EAAOjhB,WAIhB,QACE,OAAOgC,IQlDTiW,SPcW,WAAuD,IAA/BjW,EAA8B,uDAAtB2e,GAAcM,EAAQ,uCACnE,OAAQA,EAAO7f,MAEb,IhFe4B,mBgFd1B,OAAO,2BACFY,GADL,IAEE0B,QAASud,EAAOtgB,SAGpB,IhFYwB,egFXtB,OAAO,2BACFqB,GADL,IAEEiW,SAAUgJ,EAAOhJ,WAGrB,IhFO+B,sBgFN7B,OAAO,2BACFjW,GADL,IAEEuI,QAAS0W,EAAO1W,UAGlB,IhFF0B,mBgFGxB,OAAO,2BACFvI,GADL,IAEEH,OAAO,2BACFG,EAAMH,QACNof,EAAOpf,UAIhB,IhFV0B,mBgFWxB,OAAO,2BACFG,GADL,IAEE6e,QAAQ,2BACH7e,EAAM6e,SACNI,EAAOjhB,WAIlB,QACE,OAAOgC,IOrDT0P,UNkBW,WAAwD,IAA/B1P,EAA8B,uDAAtB2e,GAAcM,EAAQ,uCACpE,OAAQA,EAAO7f,MACb,IjFsB6B,oBiFrB3B,OAAO,2BACFY,GADL,IAEE0B,QAASud,EAAOtgB,SAEpB,IjFmB6B,oBiFlB3B,OAAO,2BACFqB,GADL,IAEE6e,QAAQ,2BACH7e,EAAM6e,SACNI,EAAOjhB,WAGhB,IjFU6B,oBiFT3B,OAAO,2BACFgC,GADL,IAEEH,OAAO,2BACFG,EAAMH,QACNof,EAAOpf,UAGhB,IjFKgC,uBiFJ9B,OAAO,2BACFG,GADL,IAEEuI,QAAS0W,EAAO1W,UAEpB,IjFDyB,gBiFEvB,OAAO,2BACFvI,GADL,IAEE0P,UAAWuP,EAAOvP,YAGtB,QACE,OAAO1P,IMpDT0X,MLaW,WAAoD,IAA/B1X,EAA8B,uDAAtB2e,GAAcM,EAAQ,uCAChE,OAAQA,EAAO7f,MACb,IlFqCyB,gBkFpCvB,OAAO,2BACFY,GADL,IAEE0B,QAASud,EAAOtgB,SAEpB,IlFkCyB,gBkFjCvB,OAAO,2BACFqB,GADL,IAEE6e,QAAQ,2BACH7e,EAAM6e,SACNI,EAAOjhB,WAGhB,IlFyByB,gBkFxBvB,OAAO,2BACFgC,GADL,IAEEH,OAAO,2BACFG,EAAMH,QACNof,EAAOpf,UAGhB,IlFoB4B,mBkFnB1B,OAAO,2BACFG,GADL,IAEEuI,QAAS0W,EAAO1W,UAEpB,IlFcqB,YkFbnB,OAAO,2BACFvI,GADL,IAEE0X,MAAOuH,EAAOvH,QAGlB,QACE,OAAO1X,IK/CTiZ,UJgBW,WAAwD,IAA/BjZ,EAA8B,uDAAtB2e,GAAcM,EAAQ,uCACpE,OAAQA,EAAO7f,MACb,InF4C6B,oBmF3C3B,OAAO,2BACFY,GADL,IAEE0B,QAASud,EAAOtgB,SAEpB,InFyC6B,oBmFxC3B,OAAO,2BACFqB,GADL,IAEE6e,QAAQ,2BACH7e,EAAM6e,SACNI,EAAOjhB,WAGhB,InFgC6B,oBmF/B3B,OAAO,2BACFgC,GADL,IAEEH,OAAO,2BACFG,EAAMH,QACNof,EAAOpf,UAGhB,InF2BgC,uBmF1B9B,OAAO,2BACFG,GADL,IAEEuI,QAAS0W,EAAO1W,UAEpB,InFqByB,gBmFpBvB,OAAO,2BACFvI,GADL,IAEEiZ,UAAWgG,EAAOhG,YAGtB,QACE,OAAOjZ,IIlDT4T,iBHWW,WAA+D,IAA/B5T,EAA8B,uDAAtB2e,GAAcM,EAAQ,uCAC3E,OAAQA,EAAO7f,MAEb,IpFuDqC,4BoFtDnC,OAAO,2BACFY,GADL,IAEE0B,QAASud,EAAOtgB,SAGpB,IpFoDiC,wBoFnD/B,OAAO,2BACFqB,GADL,IAEE4T,iBAAkBqL,EAAOrL,mBAG7B,IpF+CwC,+BoF9CtC,OAAO,2BACF5T,GADL,IAEEuI,QAAS0W,EAAO1W,UAGlB,IpFsCmC,4BoFrCjC,OAAO,2BACFvI,GADL,IAEEH,OAAO,2BACFG,EAAMH,QACNof,EAAOpf,UAIhB,IpF8BmC,4BoF7BjC,OAAO,2BACFG,GADL,IAEE6e,QAAQ,2BACH7e,EAAM6e,SACNI,EAAOjhB,WAIlB,QACE,OAAOgC,IGlDTkJ,MFMW,WAAoD,IAA/BlJ,EAA8B,uDAAtB2e,GAAcM,EAAQ,uCAChE,OAAQA,EAAO7f,MACb,IrFEyB,gBqFDvB,OAAO,2BACFY,GADL,IAEE0B,QAASud,EAAOtgB,SAGpB,IrFDqB,YqFEnB,OAAO,2BACFqB,GADL,IAEEkJ,MAAO+V,EAAO/V,QAGlB,IrFN6B,oBqFO3B,OAAO,2BACFlJ,GADL,IAEEuI,QAAS0W,EAAO1W,UAGpB,IrFdyB,gBqFevB,OAAO,2BACFvI,GADL,IAEEH,OAAO,2BACFG,EAAMH,QACNof,EAAOpf,UAIhB,IrFxByB,gBqFyBvB,OAAO,2BACFG,GADL,IAEE6e,QAAQ,2BACH7e,EAAM6e,SACNI,EAAOjhB,WAIhB,QACE,OAAOgC,IE5CT8e,aDKW,WAA4D,IAA/B9e,EAA8B,uDAAtB2e,GAAcM,EAAQ,uCACxE,OAAQA,EAAO7f,MACb,ItFUiC,wBsFT/B,OAAO,2BACFY,GADL,IAEE0B,QAASud,EAAOtgB,SAGpB,ItFO6B,oBsFN3B,OAAO,2BACFqB,GADL,IAEE8e,aAAcG,EAAOH,eAGzB,ItFEqC,4BsFDnC,OAAO,2BACF9e,GADL,IAEEuI,QAAS0W,EAAO1W,UAGpB,ItFNiC,wBsFO/B,OAAO,2BACFvI,GADL,IAEEH,OAAO,2BACFG,EAAMH,QACNof,EAAOpf,UAIhB,ItFhBiC,wBsFiB/B,OAAO,2BACFG,GADL,IAEE6e,QAAQ,2BACH7e,EAAM6e,SACNI,EAAOjhB,WAIhB,QACE,OAAOgC,ME9DPkf,GACc,kBAAXvS,QACPA,OAAOwS,qCACLxS,OAAOwS,qCAAqC,IAEvCC,KASMC,GAPDC,aACZC,GACAL,GACEM,aAAgBC,QCQLC,OAhBf,WACE,OACE,6BACE,kBAAC,IAAD,CAAUL,MAAOA,IAEf,kBAAC,IAAD,CAAeM,SAAS,gBAEtB,kBAAC,GAAD,KACE,kBAAC,GAAD,WCJQC,QACW,cAA7BjT,OAAOkT,SAASC,UAEe,UAA7BnT,OAAOkT,SAASC,UAEhBnT,OAAOkT,SAASC,SAASzM,MACvB,2DCXN0M,IAASC,OACL,kBAAC,GAAD,MACFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxW,MAAK,SAAAyW,GACJA,EAAaC,gBAEdzW,OAAM,SAAAzE,GACL5G,QAAQ4G,MAAMA,EAAMrH,e","file":"static/js/main.c1d19a90.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Partners\":\"Partners_Partners__wwER6\",\"tableBotton\":\"Partners_tableBotton__2mEqg\",\"flexInputs\":\"Partners_flexInputs__2Gu4z\",\"DivTableTHcls\":\"Partners_DivTableTHcls__3CW1e\",\"TableInput\":\"Partners_TableInput__wD7P9\",\"Pagination\":\"Partners_Pagination__1xgU4\",\"active\":\"Partners_active__2hKP4\",\"pageClass\":\"Partners_pageClass__-vqil\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ShopDetails\":\"ShopDetails_ShopDetails__2l0py\",\"flexInputsWrap\":\"ShopDetails_flexInputsWrap__2ohIH\",\"flexInputs\":\"ShopDetails_flexInputs__KiZTy\",\"DivTableTDcls\":\"ShopDetails_DivTableTDcls__5hE_g\",\"DivTableTHcls\":\"ShopDetails_DivTableTHcls__3XLh7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyTableForm\":\"MyTableForm_MyTableForm__NRbnR\",\"buttonsWrap\":\"MyTableForm_buttonsWrap__2wxxW\",\"button\":\"MyTableForm_button__1_0dx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TableInput\":\"TableInput_TableInput__2A-fe\",\"inputStyles\":\"TableInput_inputStyles__27jwG\",\"MyInput\":\"TableInput_MyInput__1u75d\",\"column\":\"TableInput_column__1e6CK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DetailsTableRow\":\"DetailsTableRow_DetailsTableRow__2iGBU\",\"DivTableTH\":\"DetailsTableRow_DivTableTH__303BA\",\"span\":\"DetailsTableRow_span__saqwY\",\"column\":\"DetailsTableRow_column__8H_s3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Accounts\":\"Accounts_Accounts__ocwRD\",\"tr\":\"Accounts_tr__2Ilrp\",\"Pagination\":\"Accounts_Pagination__1UfW2\",\"tableBotton\":\"Accounts_tableBotton__1YurI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__tE4NM\",\"formWrapper\":\"Login_formWrapper__2ozNL\",\"spinner\":\"Login_spinner__2CkRo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyInput\":\"MyInput_MyInput__2mCAw\",\"input\":\"MyInput_input__14CAW\",\"error\":\"MyInput_error__1kGCQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ClickableTH\":\"ClickableTH_ClickableTH__3oFKW\",\"arrowDown\":\"ClickableTH_arrowDown__3Rgck\",\"arrowUp\":\"ClickableTH_arrowUp__2dJ7t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StatusTD\":\"StatusTD_StatusTD__3_sDd\",\"active\":\"StatusTD_active__1-hWj\",\"notActive\":\"StatusTD_notActive__2aGAy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PartnerAddition\":\"PartnerAddition_PartnerAddition__g7DJy\",\"MyTable\":\"PartnerAddition_MyTable__1MfE6\",\"DivTableTDcls\":\"PartnerAddition_DivTableTDcls__SP5ux\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TableTextArea\":\"TableTextArea_TableTextArea__WUO42\",\"DivTableTD\":\"TableTextArea_DivTableTD__1-pnf\",\"DivTableTH\":\"TableTextArea_DivTableTH__l2vek\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2CE7u\",\"logout\":\"Header_logout__WsaaX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__5nkCa\",\"lds-spinner\":\"Spinner_lds-spinner__3be76\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FailureAlert\":\"FailureAlert_FailureAlert__2sF1D\",\"mainMessage\":\"FailureAlert_mainMessage__H5Uqu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyCollapse\":\"MyCollapse_MyCollapse__3Qxqh\",\"button\":\"MyCollapse_button__39aMl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"News\":\"News_News__eESvs\",\"listItem\":\"News_listItem__2BE1a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PartnerUpdate\":\"PartnerUpdate_PartnerUpdate__23Neh\",\"MyTable\":\"PartnerUpdate_MyTable__3o4f-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddButtonAndPagination\":\"AddButtonAndPagination_AddButtonAndPagination__2z5CD\",\"Pagination\":\"AddButtonAndPagination_Pagination__1iNhx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideMenu\":\"SideMenu_SideMenu__2LorB\",\"sideMenuBtn\":\"SideMenu_sideMenuBtn__Ym0_L\",\"strok\":\"SideMenu_strok__2Rq8E\",\"hiddenMenu\":\"SideMenu_hiddenMenu__1oiay\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__2PgQ-\"};","module.exports = __webpack_public_path__ + \"static/media/logo-white-text.24b74a4b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SuccessAlert\":\"SuccessAlert_SuccessAlert__30BqF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DivTableRow\":\"DivTableRow_DivTableRow__3QNw_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DivTableTD\":\"DivTableTD_DivTableTD__QHpT_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DivTableTH\":\"DivTableTH_DivTableTH__1EbTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TableMultiselect\":\"TableMultiselect_TableMultiselect__MGMpA\",\"inputStyles\":\"TableMultiselect_inputStyles__CFovN\",\"MyInput\":\"TableMultiselect_MyInput__1QTly\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FlexBlock\":\"FlexBlock_FlexBlock__9OSLy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyButton\":\"MyButton_MyButton__2CybH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DivTable\":\"DivTable_DivTable__2B5Zz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyTable\":\"MyTable_MyTable__2bv-q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HoverTable\":\"HoverTable_HoverTable__BinY9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewsCreation\":\"NewsCreation_NewsCreation__3qKjN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewsDetails\":\"NewsDetails_NewsDetails__3SVfA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PartnerDetails\":\"PartnerDetails_PartnerDetails__t_gp3\",\"buttonsBlock\":\"PartnerDetails_buttonsBlock__ZTqka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__FARTk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyDropDown\":\"MyDropDown_MyDropDown__VwQan\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyLink\":\"MyLink_MyLink__11W8c\"};","// import myAxios from '../../configs/modified-axios'\r\nimport {accountAxios as myAxios} from '../../configs/modified-axios'\r\nimport { clearLocalStorage, getAccessExpiry, getRefreshToken, setAccessExpiry, setAccessToken, setRefreshExpiry, setRefreshToken } from '../../utils/utils'\r\nimport { SET_IS_ADMIN, SET_IS_LOGGED_IN, SET_LOGIN_ERRORS, SET_LOGIN_LOADING,\r\n  LOG_OUT, \r\n} from \"./actionTypes\"\r\n\r\nlet timer;\r\n\r\nexport const logInThunk = (loginData) => {\r\n  return async (dispatch) => {\r\n    const data = {}\r\n    Object.keys(loginData).forEach(key => {\r\n      if (loginData[key].trim()) {\r\n        data[key] = loginData[key].trim()\r\n      }\r\n    })\r\n    dispatch(setLoginLoading(true))\r\n    try {\r\n      const res = await myAxios.post(`/api/login`, data)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n          if (res.data.result['role_names'].includes('admin')) {\r\n            dispatch(setIsAdmin(true))\r\n            const authData = res.data.result\r\n            dispatch(setLoginErrors(null))\r\n\r\n            setAccessToken(authData['access_token'])\r\n            setAccessExpiry(authData['access_token_expires_in'])\r\n            setRefreshToken(authData['refresh_token'])\r\n            setRefreshExpiry(authData['refresh_token_expires_in'])\r\n\r\n            dispatch(setIsLoggedIn(true, authData))\r\n            autoRefresh(() => dispatch(refreshToken()))\r\n\r\n          } else {\r\n            dispatch(setLoginErrors(['Недостаточно прав']))\r\n          }\r\n      } else {\r\n        dispatch(setLoginErrors(res.data.errors))\r\n        console.log(res.data.errors);\r\n      }\r\n    } catch (error) {\r\n      dispatch(setLoginErrors(['Сервер временно недоступен']))\r\n      console.log(error);\r\n    } finally {\r\n      dispatch(setLoginLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const refreshToken = () => {\r\n  return async (dispatch) => {\r\n    const refToken = getRefreshToken()\r\n    try {\r\n      const res = await myAxios.post(`/api/refresh_token`, {refresh_token: refToken})\r\n      console.log(res);\r\n      if (res.status === 200 && res.data.result) {\r\n        const authData = res.data.result\r\n        dispatch(setLoginErrors(null))\r\n         // ====== TEST =========\r\n        setAccessToken(authData['access_token'])\r\n        setAccessExpiry(authData['access_token_expires_in'])\r\n        setRefreshToken(authData['refresh_token'])\r\n        setRefreshExpiry(authData['refresh_token_expires_in'])\r\n        // ====== TEST =========\r\n        dispatch(setIsLoggedIn(true, authData))\r\n        autoRefresh(() => dispatch(refreshToken()))\r\n\r\n      } else {\r\n        dispatch(logout())\r\n        console.log('dispatch(logout())');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const logout = () => {\r\n  clearLocalStorage()\r\n  clearTimeout(timer)\r\n  return {\r\n    type: LOG_OUT,\r\n  }\r\n}\r\n\r\nexport const autoRefresh = (refresh) => {\r\n  console.log('autoRefresh ' + timer );\r\n  clearTimeout(timer)\r\n  const tokenTime = getAccessExpiry()\r\n  const delay = Math.floor((tokenTime - Date.now()))\r\n  timer = setTimeout(() => {\r\n    refresh()\r\n  }, delay)\r\n}\r\n\r\n\r\nexport const setIsLoggedIn = (status, authData) => {\r\n  \r\n  return {\r\n    type: SET_IS_LOGGED_IN,\r\n    status,\r\n    authData\r\n  }\r\n}\r\n\r\nexport const setIsAdmin = (isAdmin) => {\r\n  return {\r\n    type: SET_IS_ADMIN,\r\n    isAdmin\r\n  }\r\n}\r\n\r\nexport const setLoginErrors = (errors) => {\r\n  return {\r\n    type: SET_LOGIN_ERRORS,\r\n    errors\r\n  }\r\n}\r\n\r\nexport const setLoginLoading = (status) => {\r\n  return {\r\n    type: SET_LOGIN_LOADING,\r\n    status\r\n  }\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport styles from './Footer.module.scss'\r\n\r\nconst Footer = (props) => {\r\n\r\n    const [date, setDate] = useState()\r\n\r\n    useEffect(() => {\r\n        const currentYear = new Date().getFullYear()\r\n        setDate(currentYear)\r\n    }, [])\r\n\r\n    return (\r\n        <div className={styles.Footer}>\r\n            <span>ООО \"ПРОЦЕССИНГОВАЯ КОМПАНИЯ БЫСТРЫХ ПЛАТЕЖЕЙ\" © 1999-{date}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import axios from 'axios'\r\n\r\nexport const accountAxios = axios.create({\r\n    baseURL: 'https://env-desc-accounts.backend.vepay.cf'\r\n    // baseURL: 'https://vpbc-111-admin.backend.vepay.cf/'\r\n    // baseURL: 'https://vpbc-527-admin.backend.vepay.cf/'\r\n    \r\n})\r\nexport const rolesAxios = axios.create({\r\n    baseURL: 'https://env-desc-accounts.backend.vepay.cf'\r\n    // baseURL: 'https://vpbc-111-admin.backend.vepay.cf/'\r\n    // baseURL: 'https://vpbc-527-admin.backend.vepay.cf/'\r\n\r\n})\r\n\r\nexport default axios.create({\r\n    // baseURL: 'http://develop-admin.192-168-110-2.nip.io'\r\n    // baseURL: 'https://vpbc-111-admin.backend.vepay.cf/'\r\n    // baseURL: 'https://vpbc-527-admin.backend.vepay.cf/'\r\n\r\n    baseURL: 'https://vpbc-334-integrations.backend.vepay.cf'\r\n})","export const getAccessToken = () => {\r\n  return localStorage.getItem('access_token')\r\n}\r\n\r\nexport const setAccessToken = (token) => {\r\n  localStorage.setItem('access_token', token)\r\n}\r\n\r\nexport const getRefreshToken = () => {\r\n  return localStorage.getItem('refresh_token')\r\n}\r\n\r\nexport const setRefreshToken = (token) => {\r\n  return localStorage.setItem('refresh_token', token)\r\n}\r\n\r\nexport const setAccessExpiry = (seconds) => {\r\n  localStorage.setItem('access_token_expires_in', Date.now() + Number(seconds) * 1000)\r\n}\r\nexport const getAccessExpiry = () => {\r\n   return Number(localStorage.getItem('access_token_expires_in'))\r\n}\r\n\r\nexport const setRefreshExpiry = (seconds) => {\r\n  localStorage.setItem('refresh_token_expires_in', Date.now() + Number(seconds) * 1000)\r\n}\r\n\r\nexport const getRefreshExpiry = () => {\r\n  return Number(localStorage.getItem('refresh_token_expires_in'))\r\n}\r\n\r\nexport const clearLocalStorage = () => {\r\n  localStorage.removeItem('access_token')\r\n  localStorage.removeItem('access_token_expires_in')\r\n  localStorage.removeItem('refresh_token')\r\n  localStorage.removeItem('refresh_token_expires_in')\r\n}\r\n\r\nexport const getTrimmedValues = (values) => {\r\n  const filterData = {}\r\n\r\n    Object.keys(values).forEach(key => {\r\n      const data = values[key]\r\n      if (typeof data === 'string') {\r\n        if (data.trim()) {\r\n          filterData[key] = data.trim()\r\n        }\r\n      } else if (typeof data === 'boolean') {\r\n        filterData[key] = data\r\n      } else {\r\n        filterData[key] = data\r\n      }\r\n    })\r\n\r\n    if (filterData.limit) {\r\n      filterData.limit = Number(filterData.limit)\r\n    }\r\n    if (filterData.priority_to) {\r\n      filterData.priority_to = Number(filterData.priority_to)\r\n    }\r\n    if (filterData.priority_from) {\r\n        filterData.priority_from = Number(filterData.priority_from)\r\n    }\r\n\r\n    return filterData\r\n}\r\n\r\nexport const checkResponse = (resetForm=(() => {}), message='') => {\r\n  return (res) => {\r\n    if (res === 'success') {\r\n      console.log( `${message} ${res}`)\r\n      resetForm()\r\n    }\r\n  }\r\n} \r\n\r\n\r\nexport const makeRes = (ok=true, message='Успешно', data={}) => {\r\n  return {\r\n    ok,\r\n    message,\r\n    data\r\n  }\r\n}","export const OPEN_MENU = 'OPEN_MENU'\r\nexport const CLOSE_MENU = 'CLOSE_MENU'\r\n\r\n\r\n// ========== login =========================\r\n\r\nexport const SET_IS_LOGGED_IN = 'SET_IS_LOGGED_IN'\r\nexport const SET_LOGIN_ERRORS = 'SET_LOGIN_ERRORS'\r\nexport const SET_LOGIN_LOADING = 'SET_LOGIN_LOADING'\r\nexport const SET_IS_ADMIN = 'SET_IS_ADMIN'\r\nexport const LOG_OUT = 'LOG_OUT'\r\n\r\n// ================ Blog ==================================\r\n\r\nexport const NEWS_LOADING = 'NEWS_LOADING'\r\nexport const GET_NEWS_SUCCESS = 'GET_NEWS_SUCCESS'\r\nexport const SET_NEWS_FAILURE = 'SET_NEWS_FAILURE'\r\nexport const GET_NEWS_DETAILS = 'GET_NEWS_DETAILS'\r\n\r\nexport const UPDATE_NEWS_DETAILS_SUCCESS = 'UPDATE_NEWS_DETAILS_SUCCESS'\r\n\r\nexport const DELETE_NEWS_SUCCESS = 'DELETE_NEWS_SUCCESS'\r\n\r\n// =============== Accounts ================================\r\n\r\nexport const ACCOUNTS_LOADING = 'ACCOUNTS_LOADING'\r\nexport const ACCOUNTS_SUCCESS = 'ACCOUNTS_SUCCESS'\r\nexport const ACCOUNTS_FAILURE = 'ACCOUNTS_FAILURE'\r\nexport const SET_ACCOUNTS = 'SET_ACCOUNTS'\r\nexport const SET_ACCOUNTS_DETAILS = 'SET_ACCOUNTS_DETAILS'\r\n\r\n// =============== Roles ================================\r\n\r\nexport const ROLES_LOADING = 'ROLES_LOADING'\r\nexport const ROLES_SUCCESS = 'ROLES_SUCCESS'\r\nexport const ROLES_FAILURE = 'ROLES_FAILURE'\r\nexport const SET_ROLES = 'SET_ROLES'\r\nexport const SET_ROLES_DETAILS = 'SET_ROLES_DETAILS'\r\n\r\n// =============== Accounts ================================\r\n\r\nexport const ACCOUNT_ROLES_LOADING = 'ACCOUNT_ROLES_LOADING'\r\nexport const ACCOUNT_ROLES_SUCCESS = 'ACCOUNT_ROLES_SUCCESS'\r\nexport const ACCOUNT_ROLES_FAILURE = 'ACCOUNT_ROLES_FAILURE'\r\nexport const SET_ACCOUNT_ROLES = 'SET_ACCOUNT_ROLES'\r\nexport const SET_ACCOUNT_ROLES_DETAILS = 'SET_ACCOUNT_ROLES_DETAILS'\r\n\r\n// =============== Partners ==============================\r\n\r\n\r\nexport const PARTNERS_LOADING = 'PARTNERS_LOADING'\r\nexport const PARTNERS_FAILURE = 'PARTNERS_FAILURE'\r\nexport const PARTNERS_SUCCESS = 'PARTNERS_SUCCESS'\r\nexport const SET_PARTNERS = 'SET_PARTNERS'\r\nexport const SET_PARTNER_DETAILS = 'SET_PARTNER_DETAILS'\r\nexport const GET_PARTNER_DETAILS_FAILURE = 'GET_PARTNER_DETAILS_FAILURE'\r\nexport const UPDATE_PARTNER_DETAILS_FAILURE = 'UPDATE_PARTNER_DETAILS_FAILURE'\r\nexport const DELETE_PARTNER_FAILURE = 'DELETE_PARTNER_FAILURE'\r\n\r\n// ================ Acquirers ============================\r\n\r\nexport const ACQUIRERS_LOADING = 'ACQUIRERS_LOADING'\r\nexport const ACQUIRERS_FAILURE = 'ACQUIRERS_FAILURE'\r\nexport const ACQUIRERS_SUCCESS = 'ACQUIRERS_SUCCESS'\r\nexport const SET_ACQUIRERS = 'SET_ACQUIRERS'\r\nexport const SET_ACQUIRER_DETAILS = 'SET_ACQUIRER_DETAILS'\r\nexport const GET_ACQUIRER_DETAILS_FAILURE = 'GET_ACQUIRER_DETAILS_FAILURE'\r\nexport const UPDATE_ACQUIRER_DETAILS_FAILURE = 'UPDATE_ACQUIRER_DETAILS_FAILURE'\r\nexport const DELETE_ACQUIRER_FAILURE = 'DELETE_ACQUIRER_FAILURE'\r\n\r\n// ============== Shops ===================================\r\n\r\nexport const SHOPS_LOADING = 'SHOPS_LOADING'\r\nexport const SHOPS_FAILURE = 'SHOPS_FAILURE'\r\nexport const SHOPS_SUCCESS = 'SHOPS_SUCCESS'\r\nexport const SET_SHOPS = 'SET_SHOPS'\r\nexport const SET_SHOP_DETAILS = 'SET_SHOP_DETAILS'\r\nexport const GET_SHOP_DETAILS_FAILURE = 'GET_SHOP_DETAILS_FAILURE'\r\nexport const UPDATE_SHOP_DETAILS_FAILURE = 'UPDATE_SHOP_DETAILS_FAILURE'\r\nexport const DELETE_SHOP_FAILURE = 'DELETE_SHOP_FAILURE'\r\n\r\n// ============== Terminals ===============================\r\n\r\nexport const TERMINALS_LOADING = 'TERMINALS_LOADING'\r\nexport const TERMINALS_FAILURE = 'TERMINALS_FAILURE'\r\nexport const TERMINALS_SUCCESS = 'TERMINALS_SUCCESS'\r\nexport const SET_TERMINALS = 'SET_TERMINALS'\r\nexport const SET_TERMINAL_DETAILS = 'SET_TERMINAL_DETAILS'\r\n\r\n// ============= Partner Acquirers =======================\r\n\r\nexport const PARTNER_ACQUIRERS_LOADING = 'PARTNER_ACQUIRERS_LOADING'\r\nexport const PARTNER_ACQUIRERS_FAILURE = 'PARTNER_ACQUIRERS_FAILURE'\r\nexport const PARTNER_ACQUIRERS_SUCCESS = 'PARTNER_ACQUIRERS_SUCCESS'\r\nexport const SET_PARTNER_ACQUIRERS = 'SET_PARTNER_ACQUIRERS'\r\nexport const SET_PARTNER_ACQUIRER_DETAILS = 'SET_PARTNER_ACQUIRER_DETAILS'\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavbarText,\r\n} from \"reactstrap\";\r\nimport { logout } from \"../../redux/actions/loginActions\";\r\nimport whiteLogo from '../../img/logo-white-text.svg'\r\n\r\nimport styles from \"./Header.module.scss\";\r\n\r\nconst Header = ({user, logout, isOpen, toggle}) => {\r\n\r\n  return (\r\n    <div className={styles.Header}>\r\n      <Navbar color=\"dark\" dark expand=\"md\">\r\n        <NavbarBrand tag={Link} to='/'>\r\n          <img src={whiteLogo} alt=\"whiteLogo\"/>\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            \r\n            \r\n          </Nav>\r\n          <NavbarText className='mr-4'>пользователь: <strong>{user}</strong> </NavbarText>\r\n          <NavbarText \r\n            onClick={logout}\r\n            // onClick={() => alert('функция пока отключена. Загляните в Header')}\r\n            className={styles.logout}\r\n            >выйти</NavbarText>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.login.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout})(Header);\r\n","import React from 'react'\r\n\r\nimport styles from './Spinner.module.scss'\r\n\r\nconst Spinner = ({className}) => {\r\n\r\n  const cls = [\r\n    styles.Spinner,\r\n    className\r\n  ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n           <div className={styles[\"lds-spinner\"]}><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Form, FormGroup, Label, Input, UncontrolledAlert } from \"reactstrap\";\r\nimport { logInThunk } from \"../../redux/actions/loginActions\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\n\r\nimport styles from \"./Login.module.scss\";\r\n\r\nconst Login = ({logInThunk, loading, errors, isAdmin}) => {\r\n\r\n  const [controls, setControls] = useState({\r\n    email: '',\r\n    password: '',\r\n    login: ''\r\n  })\r\n  // const [touched, setTouched] = useState({\r\n  //   email: false,\r\n  //   password: false,\r\n  //   login: false\r\n  // })\r\n\r\n  const onControlChange = (e) => {\r\n    const control = e.target\r\n    setControls((controls) => {\r\n      return {\r\n        ...controls,\r\n        [control.name]: control.value\r\n      }\r\n    })\r\n    // setTouched((touched) => {\r\n    //   return {\r\n    //     ...touched,\r\n    //     [control.name]: true\r\n    //   }\r\n    // })\r\n  }\r\n\r\n  let errorMessage = 'Попробуйте еще раз позже';\r\n  // if (!isAdmin) {\r\n  //   errorMessage = 'Недостаточно прав'\r\n  // }\r\n  if (errors) {\r\n    errors.forEach((err) => {\r\n      if (/Accounts service error/g.test(err)) {\r\n        errorMessage = 'Ошибка сервиса'\r\n      } else if (/Credentials incorrect/g.test(err)) {\r\n        errorMessage = 'Неверный логин или пароль'\r\n      } else if (/Недостаточно прав/g.test(err)) {\r\n        errorMessage = 'Недостаточно прав'\r\n      } else if (/Сервер временно недоступен/g.test(err)) {\r\n        errorMessage = 'Сервер временно недоступен'\r\n      }\r\n    })\r\n  }\r\n  \r\n\r\n  const {email, password, login} = controls\r\n\r\n  // console.log(controls, touched);\r\n\r\n  if (loading) {\r\n    return <Spinner className={styles.spinner}/>\r\n  }\r\n\r\n  return (\r\n    <div className={styles.Login}>\r\n      <div className={styles.formWrapper}>\r\n        <Form>\r\n          <center>Vepay admin</center>\r\n         {errors && (\r\n          <UncontrolledAlert color={'danger'}>\r\n            {errorMessage}\r\n          </UncontrolledAlert>\r\n         )}\r\n          <FormGroup>\r\n            <Label for=\"login\">Login</Label>\r\n            <Input\r\n              //  invalid={touched.login && !login}\r\n              type=\"text\"\r\n              name=\"login\"\r\n              id=\"login\"\r\n              placeholder=\"login\"\r\n              value={login}\r\n              onChange={onControlChange}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"email\">Email</Label>\r\n            <Input\r\n              //  invalid={touched.email && !email}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              placeholder=\"email\"\r\n              value={email}\r\n              onChange={onControlChange}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"password\">Пароль</Label>\r\n            <Input\r\n            // invalid={touched.password && !password}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"пароль\"\r\n              value={password}\r\n              onChange={onControlChange}\r\n            />\r\n          </FormGroup>\r\n          <Button \r\n           disabled={!((email || login) && password)}\r\n           onClick={() => logInThunk(controls)}\r\n          >Войти</Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.login.loading,\r\n    errors: state.login.errors,\r\n    isAdmin: state.login.isAdmin,\r\n     \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logInThunk})(Login);\r\n","import React from 'react'\r\nimport { Alert } from 'reactstrap'\r\n\r\nimport styles from './FailureAlert.module.scss'\r\n\r\nconst FailureAlert = ({\r\n  className, alertHeading='Ошибка!', message='Что-то пошло не так',\r\n  bottomMessage='', visible=false, setVisible,\r\n  ...props}) => {\r\n\r\n  const onDismiss = () => setVisible(false);\r\n\r\n\r\n    const cls = [\r\n        styles.FailureAlert,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n             <Alert color=\"danger\" isOpen={visible} toggle={onDismiss}>\r\n                <h4 className=\"alert-heading\">{alertHeading}</h4>\r\n                <p className={styles.mainMessage}>\r\n                  {message}\r\n                </p>\r\n                <hr />\r\n                <p className=\"mb-0\">\r\n                  {bottomMessage}\r\n                </p>\r\n              </Alert>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FailureAlert","import React, { useEffect } from 'react'\r\nimport { Alert } from 'reactstrap'\r\n\r\nimport styles from './SuccessAlert.module.scss'\r\n\r\nconst SuccessAlert = ({\r\n  className, alertHeading='Всё отлично!', message='Запись добавлена успешно',\r\n  bottomMessage='', visible=false, setVisible,\r\n  ...props}) => {\r\n\r\n\r\n  const onDismiss = () => setVisible(false);\r\n\r\n\r\n    useEffect(() => {\r\n      let timer;\r\n\r\n      if (visible) {\r\n       timer = setTimeout(() => {\r\n          onDismiss()\r\n        }, 3000)\r\n      }\r\n\r\n      return () => {\r\n        clearTimeout(timer)\r\n      }\r\n      // eslint-disable-next-line\r\n    }, [visible])\r\n\r\n    const cls = [\r\n        styles.SuccessAlert,\r\n        className\r\n    ]\r\n\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n             <Alert color=\"success\" isOpen={visible} toggle={onDismiss}>\r\n                <h4 className=\"alert-heading\">{alertHeading}</h4>\r\n                <p>\r\n                  {message}\r\n                </p>\r\n                <hr />\r\n                <p className=\"mb-0\">\r\n                  {bottomMessage}\r\n                </p>\r\n              </Alert>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuccessAlert","import React from 'react'\r\nimport { Button } from 'reactstrap'\r\n\r\nimport styles from './MyTableForm.module.scss'\r\n\r\nconst MyTableForm = ({\r\n  className, onSubmit, children, isValid, buttonText='Добавить', resetForm, ...props\r\n}) => {\r\n\r\n    const cls = [\r\n        styles.MyTableForm,\r\n        className\r\n    ]\r\n\r\n    const onReset = resetForm || (() => console.log('нет функции очистки'))\r\n\r\n\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n           <form onSubmit={onSubmit}>\r\n                <div>\r\n                   {children}\r\n                </div>\r\n\r\n\r\n               <div className={styles.buttonsWrap} >\r\n                <Button\r\n                        color={isValid? \"primary\": 'secondary'}\r\n                        disabled={!isValid}\r\n                        className={styles.button}\r\n                    >\r\n                    \r\n                        {buttonText}\r\n                    </Button>\r\n\r\n                    { resetForm && (\r\n                        <Button\r\n                            type='reset'\r\n                            className={styles.button}\r\n                            onClick={onReset}\r\n                        >\r\n                            очистить\r\n                        </Button>\r\n                    )}\r\n               </div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyTableForm","import React from 'react'\r\n\r\nimport styles from './DivTableRow.module.scss'\r\n\r\nconst DivTableRow = ({className, children, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.DivTableRow,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DivTableRow","import React from 'react'\r\n\r\nimport styles from './DivTableTD.module.scss'\r\n\r\nconst DivTableTD = ({className, children, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.DivTableTD,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DivTableTD","import React from 'react'\r\n\r\nimport styles from './DivTableTH.module.scss'\r\n\r\nconst DivTableTH = ({className, children,  ...props}) => {\r\n\r\n    const cls = [\r\n        styles.DivTableTH,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DivTableTH","import React from 'react'\r\n\r\nimport styles from './MyInput.module.scss'\r\n\r\nconst MyInput = ({className, type='text', inputStyles, value='', onChange, \r\nlabel, errorText, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.MyInput,\r\n        className\r\n    ]\r\n\r\n    const inputCls = [\r\n      styles.input,\r\n      inputStyles,\r\n    ]\r\n\r\n    const handleInputChange = onChange? onChange: () => console.log('add onChange')\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n           {/* <label>\r\n           {label} */}\r\n              <input \r\n                {...props}\r\n                className={inputCls.join(' ')}\r\n                type={type} \r\n                value={value}\r\n                onChange={handleInputChange}\r\n              />\r\n           {/* </label> */}\r\n           { errorText && ( \r\n              <>\r\n              <br/>\r\n                <span className={styles.error} >{errorText}</span>\r\n              </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyInput","import React, { useEffect, useState } from 'react'\r\nimport DivTableRow from '../../DivTable/DivTableRow/DivTableRow'\r\nimport DivTableTD from '../../DivTable/DivTableTD/DivTableTD'\r\nimport DivTableTH from '../../DivTable/DivTableTH/DivTableTH'\r\nimport MyInput from '../../MyInput/MyInput'\r\n\r\nimport styles from './TableInput.module.scss'\r\n\r\nconst TableInput = ({\r\n  className, label, column, DivTableTDcls, DivTableTHcls, ...props\r\n}) => {\r\n    const [inputId, setInputId] = useState('')\r\n\r\n    useEffect(() => {\r\n      setInputId(`${props.name}${String(Math.random()).slice(2)}`)\r\n      // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const cls = [\r\n        styles.TableInput,\r\n        column && styles.column,\r\n        className,\r\n    ]\r\n\r\n    return (\r\n        <DivTableRow className={cls.join(' ')}>\r\n              <DivTableTH className={DivTableTHcls}>\r\n                <label htmlFor={inputId}>{label}</label>\r\n              </DivTableTH>\r\n              <DivTableTD className={DivTableTDcls}>\r\n                  <MyInput\r\n                    className={styles.MyInput}\r\n                      inputStyles={styles.inputStyles}\r\n                      {...props}\r\n                      id={inputId}\r\n                  />\r\n              </DivTableTD>\r\n        </DivTableRow>\r\n    )\r\n}\r\n\r\nexport default TableInput","import React, { useEffect, useState } from 'react'\r\nimport {useMediaQuery} from '@react-hook/media-query'\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\n\r\nimport styles from './TableMultiselect.module.scss'\r\nimport DivTableRow from '../../DivTable/DivTableRow/DivTableRow';\r\nimport DivTableTH from '../../DivTable/DivTableTH/DivTableTH';\r\nimport DivTableTD from '../../DivTable/DivTableTD/DivTableTD';\r\n\r\nconst TableMultiselect = ({\r\n    className, label, multiRef, DivTableTHcls, ...props\r\n}) => {\r\n\r\n    const matches = useMediaQuery('(min-width: 900px)')\r\n\r\n    const [inputId, setInputId] = useState('')\r\n\r\n    useEffect(() => {\r\n        setInputId(`${String(Math.random()).slice(2)}`)\r\n      }, [])\r\n\r\n    const cls = [\r\n        styles.TableMultiselect,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <DivTableRow className={cls.join(' ')}>\r\n            <DivTableTH className={DivTableTHcls}>\r\n            {label}\r\n            </DivTableTH>\r\n            <DivTableTD>\r\n                <Multiselect\r\n                    emptyRecordMsg='Нет данных'\r\n                    id={inputId}\r\n                    {...props}\r\n                    ref={multiRef}\r\n                    style={{ \r\n                        multiselectContainer: { \r\n                            margin: '1rem',\r\n                            marginLeft: '0rem',\r\n                            paddingLeft: matches? `2rem`: '0'\r\n                            // width: '80%'\r\n                        },\r\n                    }}\r\n                />\r\n            </DivTableTD>\r\n        </DivTableRow>\r\n    )\r\n}\r\n\r\nexport default TableMultiselect","import { useState } from \"react\";\r\n\r\n\r\n\r\nexport const useAlert = () => {\r\n\r\n  const [successAlertVisible, setSuccessAlertVisible] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState('Успешно');\r\n  const [failureAlertVisible, setFailureAlertVisible] = useState(false);\r\n  const [failureMessage, setFailureMessage] = useState('Ошибка');\r\n\r\n  const checkRes = (withSuccessAlert=true) => {\r\n    return (res) => {\r\n      if (res.ok) {\r\n        if (withSuccessAlert) {\r\n          setSuccessAlertVisible(true)\r\n          setSuccessMessage(`${res.message}`)\r\n        }\r\n      } else {\r\n          setFailureAlertVisible(true)\r\n          setFailureMessage(`${res.message.join(' \\n ')}`)\r\n      }\r\n\r\n      return res\r\n  }\r\n  }\r\n\r\n  return {\r\n    successAlertVisible, setSuccessAlertVisible, successMessage, setSuccessMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, setFailureMessage,\r\n    checkRes\r\n  }\r\n  \r\n}\r\n\r\n","import {useState, useCallback} from 'react';\r\n\r\nexport function useFormAndValidation() {\r\n  const [ values, setValues ] = useState({});\r\n  const [ errors, setErrors ] = useState({});\r\n  const [ isValid, setIsValid ] = useState(true);\r\n\r\n  const handleChange = (e) => {\r\n    const {name, value} = e.target\r\n    setValues({...values, [name]: value });\r\n    setErrors({...errors, [name]: e.target.validationMessage});\r\n    setIsValid(e.target.closest('form').checkValidity());\r\n  };\r\n\r\n\r\n\r\n  const resetForm = useCallback((newValues = {}, newErrors = {}, newIsValid = false) => {\r\n    setValues(newValues);\r\n    setErrors(newErrors);\r\n    setIsValid(newIsValid);\r\n  }, [setValues, setErrors, setIsValid]);\r\n\r\n  return { values, handleChange, errors, isValid, resetForm, setValues, setIsValid };\r\n}\r\n","// import myAxios from '../../configs/modified-axios'\r\nimport {accountAxios as myAxios} from '../../configs/modified-axios'\r\n\r\n// import { mockAccounts } from '../../utils/mock-accounts'\r\nimport { getAccessToken, makeRes } from '../../utils/utils'\r\nimport { ACCOUNTS_LOADING, SET_ACCOUNTS_DETAILS, ACCOUNTS_FAILURE, SET_ACCOUNTS, ACCOUNTS_SUCCESS } from './actionTypes'\r\n\r\n\r\nexport const createAccountThunk = (inputData) => {\r\n  return async (dispatch) => {\r\n\r\n    \r\n    try {\r\n      \r\n      const data = {\r\n        ...inputData,\r\n        access_token: getAccessToken(),\r\n      }\r\n      const res = await myAxios.post(`/api/add_account`, data)\r\n\r\n      console.log(res);\r\n      \r\n      if (res.status === 200 && res.data.result) {\r\n          dispatch(alertAccountsSuccess({create: 'Аккаунт добавлен успешно'}))\r\n          return makeRes(true, 'Аккаунт добавлен успешно', res.data.result)\r\n        } else {\r\n          dispatch(alertAccountsFailure({ create: res.data.errors }))\r\n          return makeRes(false, res.data.errors)\r\n        } \r\n    } catch (error) {\r\n      console.log(error.message);\r\n      dispatch(alertAccountsFailure({create: [error.message]}))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n} \r\n\r\n\r\nexport const getAccountsThunk = (filterData={}) => {\r\n  return async (dispatch) => {\r\n    dispatch(setAccountsLoading(true))\r\n\r\n    try {\r\n      // dispatch(setAccounts(mockAccounts)) // TEST\r\n      const data = {\r\n        access_token: getAccessToken(),\r\n        ...filterData,\r\n      }\r\n      const res = await myAxios.post(`/api/get_accounts`, data)\r\n      console.log(res);\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertAccountsFailure({ accounts: null }))\r\n        dispatch(setAccounts(res.data.result.accounts))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertAccountsFailure({ accounts: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      dispatch(alertAccountsFailure({ accounts: ['Сервер недоступен'] }))\r\n      return makeRes(false, [error.message])\r\n    } finally {\r\n      dispatch(setAccountsLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const getAccountDetailsThunk = (ids) => {\r\n  return async (dispatch) => {\r\n    dispatch(setAccountsLoading(true))\r\n\r\n    try {\r\n      // dispatch(setAccountDetails(mockAccounts.find((account) => account.id === +id))) // TEST\r\n\r\n      const data = {\r\n        access_token: getAccessToken(),\r\n        ids\r\n      }\r\n      const res = await myAxios.post(`/api/get_accounts_by_ids`, data)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n          dispatch(alertAccountsFailure({ details: null }))\r\n        dispatch(setAccountDetails(res.data.result.accounts[0]))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertAccountsFailure({ details: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertAccountsFailure({ details: ['Сервер недоступен'] }))\r\n      return makeRes(false, [error.message])\r\n    } finally {\r\n      dispatch(setAccountsLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateAccountThunk = (accountData) => {\r\n  return async (dispatch) => {\r\n    \r\n    try {\r\n      const data = {\r\n        access_token: getAccessToken(),\r\n        ...accountData\r\n      }\r\n      const res = await myAxios.post(`/api/update_account`, data)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertAccountsSuccess({update: 'информация об аккаунте успешно обновлена'}))\r\n        return makeRes(true, 'информация об аккаунте успешно обновлена', res.data.result)\r\n      } else {\r\n        dispatch(alertAccountsFailure({ update: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertAccountsFailure({ update: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const setAccountsLoading = (status) => {\r\n  return {\r\n    type: ACCOUNTS_LOADING,\r\n    status\r\n  }\r\n}\r\n\r\nexport const alertAccountsFailure = (errors) => {\r\n  return {\r\n    type: ACCOUNTS_FAILURE,\r\n    errors\r\n  }\r\n}\r\n\r\nexport const alertAccountsSuccess = (message) => {\r\n  return {\r\n    type: ACCOUNTS_SUCCESS,\r\n    message\r\n  }\r\n}\r\n\r\nexport const setAccounts = (accounts) => {\r\n  return {\r\n    type: SET_ACCOUNTS,\r\n    accounts\r\n  }\r\n}\r\n\r\nexport const setAccountDetails = (details) => {\r\n  return {\r\n    type: SET_ACCOUNTS_DETAILS,\r\n    details\r\n  }\r\n}","// import myAxios from '../../configs/modified-axios'\r\nimport {rolesAxios as myAxios} from '../../configs/modified-axios'\r\n\r\nimport { getAccessToken, makeRes } from '../../utils/utils'\r\nimport { ROLES_LOADING, SET_ROLES_DETAILS, ROLES_FAILURE, SET_ROLES, ROLES_SUCCESS } from './actionTypes'\r\n\r\n\r\nexport const createRoleThunk = (inputData) => {\r\n  return async (dispatch) => {\r\n\r\n    \r\n    try {\r\n      \r\n      const data = {\r\n        ...inputData,\r\n        access_token: getAccessToken(),\r\n      }\r\n      const res = await myAxios.post(`/api/add_role`, data)\r\n\r\n      console.log(res);\r\n      \r\n      if (res.status === 200 && res.data.result) {\r\n          dispatch(alertRolesSuccess({create: 'Роль добавлена успешно'}))\r\n          return makeRes(true, 'Роль добавлена успешно', res.data.result)\r\n        } else {\r\n          dispatch(alertRolesFailure({ create: res.data.errors }))\r\n          return makeRes(false, res.data.errors)\r\n        } \r\n    } catch (error) {\r\n      console.log(error.message);\r\n      dispatch(alertRolesFailure({create: [error.message]}))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n} \r\n\r\n\r\nexport const getRolesThunk = (filterData={}) => {\r\n  return async (dispatch) => {\r\n    dispatch(setRolesLoading(true))\r\n\r\n    try {\r\n      const data = {\r\n        access_token: getAccessToken(),\r\n        ...filterData,\r\n      }\r\n      const res = await myAxios.post(`/api/get_roles`, data)\r\n      console.log(res);\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertRolesFailure({ roles: null }))\r\n        dispatch(setRoles(res.data.result.roles))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertRolesFailure({ roles: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      dispatch(alertRolesFailure({ roles: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    } finally {\r\n      dispatch(setRolesLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const getRoleDetailsThunk = (ids) => {\r\n  return async (dispatch) => {\r\n    dispatch(setRolesLoading(true))\r\n\r\n    try {\r\n\r\n      const data = {\r\n        access_token: getAccessToken(),\r\n        ids\r\n      }\r\n      const res = await myAxios.post(`/api/get_roles_by_ids`, data)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n          dispatch(alertRolesFailure({ details: null }))\r\n        dispatch(setRoleDetails(res.data.result.roles[0]))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertRolesFailure({ details: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertRolesFailure({ details: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    } finally {\r\n      dispatch(setRolesLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateRoleThunk = (roleData) => {\r\n  return async (dispatch) => {\r\n    \r\n    try {\r\n      const data = {\r\n        access_token: getAccessToken(),\r\n        ...roleData\r\n      }\r\n      const res = await myAxios.post(`/api/update_role`, data)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertRolesSuccess({update: 'информация о роли успешно обновлена'}))\r\n        return makeRes(true, 'информация о роли успешно обновлена')\r\n      } else {\r\n        dispatch(alertRolesFailure({ update: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertRolesFailure({ update: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const setRolesLoading = (status) => {\r\n  return {\r\n    type: ROLES_LOADING,\r\n    status\r\n  }\r\n}\r\n\r\nexport const alertRolesFailure = (errors) => {\r\n  return {\r\n    type: ROLES_FAILURE,\r\n    errors\r\n  }\r\n}\r\n\r\nexport const alertRolesSuccess = (message) => {\r\n  return {\r\n    type: ROLES_SUCCESS,\r\n    message\r\n  }\r\n}\r\n\r\nexport const setRoles = (roles) => {\r\n  return {\r\n    type: SET_ROLES,\r\n    roles\r\n  }\r\n}\r\n\r\nexport const setRoleDetails = (details) => {\r\n  return {\r\n    type: SET_ROLES_DETAILS,\r\n    details\r\n  }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport TableMultiselect from '../../../components/UI/MyTable/TableMultiselect/TableMultiselect'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport { createAccountThunk } from '../../../redux/actions/accountActions'\r\nimport { getRolesThunk } from '../../../redux/actions/roleActions'\r\n\r\nimport styles from './AccountCreation.module.scss'\r\n\r\nconst AccountCreation = ({\r\n  createAccountThunk, roles, getRolesThunk, \r\n}) => {\r\n\r\n    const history = useHistory()\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n\r\n  const {values, handleChange, errors, isValid, setIsValid, setValues } = useFormAndValidation()\r\n \r\n  const [rolesOptions, setRolesOptions] = useState()\r\n  const onSingleSelect = (selectedList, {jsonKey, value}) => {\r\n    console.log(selectedList);\r\n    setValues({\r\n        ...values,\r\n        [jsonKey]: value\r\n    })\r\n}\r\n\r\nconst onRemove = (selectedList, removedItem) => {\r\n    console.log(selectedList);\r\n    setValues({\r\n        ...values,\r\n        [removedItem.jsonKey]: selectedList.map(i => i.value)\r\n    })\r\n}\r\n\r\nuseEffect(() => {\r\n    getRolesThunk()\r\n    .then(checkRes(false))\r\n    .catch((err) => console.log(err))\r\n\r\n    // eslint-disable-next-line\r\n}, [])\r\n\r\nuseEffect(() => {\r\n    if (roles) {\r\n        setRolesOptions(roles)\r\n    }\r\n}, [roles])\r\n \r\n \r\n  useEffect(() => {\r\n    setIsValid(false)\r\n    // eslint-disable-next-line\r\n}, [])\r\n\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault()\r\n   \r\n    console.log(values);\r\n\r\n    createAccountThunk(values)\r\n    .then(checkRes())\r\n    .then(res => {\r\n        if (res.ok) {\r\n            setTimeout(() => {\r\n                // history.push(`/accounts/${res.data.id}`)\r\n                history.push(`/accounts`)\r\n            }, 3000)\r\n        }\r\n    })\r\n    .catch((err) => console.log(err))\r\n\r\n}\r\n\r\n    return (\r\n        <div className={styles.AccountCreation}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/accounts' exact>Аккаунты</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Создание аккаунта</BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <center><h1>Создание аккаунта</h1></center>\r\n            <MyTableForm\r\n                onSubmit={onSubmit}\r\n                isValid={isValid}\r\n            >\r\n                    <TableInput\r\n                        type='email'\r\n                         name='email'\r\n                        label='email'\r\n                        required={true}\r\n                        onChange={handleChange}\r\n                        value={values.email}\r\n                        errorText={errors.email}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                         name='login'\r\n                        label='Логин'\r\n                        required={true}\r\n                        onChange={handleChange}\r\n                        value={values.login}\r\n                        errorText={errors.login}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                         name='password'\r\n                        label='Пароль'\r\n                        required={true}\r\n                        onChange={handleChange}\r\n                        value={values.password}\r\n                        errorText={errors.password}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                         name='phone_number'\r\n                        label='Телефон'\r\n                        onChange={handleChange}\r\n                        value={values.phone_number}\r\n                        errorText={errors.phone_number}\r\n                        minLength={5}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableMultiselect\r\n                        label='Роли'\r\n                        options={rolesOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onSingleSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                    />\r\n            </MyTableForm>\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        roles: state.roles.roles,\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { \r\n    createAccountThunk, getRolesThunk \r\n})(AccountCreation)","import React from 'react'\r\n\r\nimport styles from './FlexBlock.module.scss'\r\n\r\nconst FlexBlock = ({className, children, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.FlexBlock,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FlexBlock","import React from 'react'\r\nimport { Button } from 'reactstrap'\r\n\r\nimport styles from './MyButton.module.scss'\r\n\r\nconst MyButton = ({\r\n  className, onClick, color='secondary', buttonText='Сохранить', ...props\r\n}) => {\r\n\r\n    const cls = [\r\n        styles.MyButton,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <Button\r\n                color={color}\r\n                onClick={onClick}\r\n            >\r\n                {buttonText}\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyButton","import React from 'react'\r\nimport MyButton from '../MyButton'\r\n\r\nimport styles from './BlockingButton.module.scss'\r\n\r\nconst BlockingButton = ({\r\n  className, onActivate, onBlock, blocked, ...props\r\n}) => {\r\n\r\n    const cls = [\r\n        styles.BlockingButton,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <MyButton\r\n                color={blocked? 'success' : 'danger'}\r\n                onClick={blocked? onActivate : onBlock}\r\n                buttonText={blocked? 'активировать' : 'заблокировать'}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlockingButton","import React from 'react'\r\nimport DivTableRow from '../../DivTable/DivTableRow/DivTableRow'\r\nimport DivTableTD from '../../DivTable/DivTableTD/DivTableTD'\r\nimport DivTableTH from '../../DivTable/DivTableTH/DivTableTH'\r\n\r\nimport styles from './DetailsTableRow.module.scss'\r\n\r\nconst DetailsTableRow = ({\r\n  className, data, label, column, ...props\r\n}) => {\r\n\r\n    const checkData = (data) => {\r\n      if (data === undefined) return 'нет данных' \r\n      if (data === null) return 'нет данных' \r\n      return data\r\n    }\r\n\r\n    const cls = [\r\n        styles.DetailsTableRow,\r\n        column && styles.column,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <DivTableRow className={cls.join(' ')}>\r\n                    <DivTableTH className={styles.DivTableTH} >\r\n                        {label}\r\n                    </DivTableTH>\r\n                    <DivTableTD >\r\n                      <span className={styles.span}>\r\n                        {checkData(data)}\r\n                      </span>\r\n                    </DivTableTD>\r\n        </DivTableRow>\r\n    )\r\n}\r\n\r\nexport default DetailsTableRow","import React from 'react'\r\n\r\nimport styles from './DivTable.module.scss'\r\n\r\nconst DivTable = ({className, children, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.DivTable,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DivTable","import React from 'react'\r\nimport DivTable from '../DivTable/DivTable'\r\n\r\nimport styles from './MyTable.module.scss'\r\n\r\nconst MyTable = ({className, children, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.MyTable,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <DivTable>\r\n                    {children}\r\n            </DivTable>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyTable","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink, useHistory, useParams } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem} from 'reactstrap'\r\nimport FlexBlock from '../../../components/Blocks/FlexBlock/FlexBlock'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport BlockingButton from '../../../components/UI/MyButton/BlockingButton/BlockingButton'\r\nimport MyButton from '../../../components/UI/MyButton/MyButton'\r\nimport DetailsTableRow from '../../../components/UI/MyTable/DetailsTableRow/DetailsTableRow'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport { getAccountDetailsThunk, updateAccountThunk, setAccountDetails } from '../../../redux/actions/accountActions'\r\n\r\nimport styles from './AccountDetails.module.scss'\r\n\r\n\r\n\r\nconst AccountDetails = ({\r\n  details, getAccountDetailsThunk, updateAccountThunk, setAccountDetails,\r\n}) => {\r\n\r\n  const { id } = useParams()\r\n  const history = useHistory()\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n\r\n\r\n  useEffect(() => {\r\n    getAccountDetailsThunk([+id])\r\n    .then(checkRes(false))\r\n    .then(() => console.log('getAccountDetailsThunk'))\r\n    .catch((err) => console.log(err))\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const onBlock = () => {\r\n    const confirmed = window.confirm(\"Вы точно хотите заблокировать?\");\r\n    if (!confirmed) return;\r\n    updateAccountThunk({id: +id, blocked: true})\r\n    .then(checkRes(false))\r\n    .then(({data}) => setAccountDetails(data))\r\n    .catch((err) => console.log(err))\r\n  }\r\n\r\n  const onActivate = () => {\r\n    const confirmed = window.confirm(\"Вы точно хотите активировать?\");\r\n    if (!confirmed) return;\r\n    updateAccountThunk({id: +id, blocked: false})\r\n    .then(checkRes(false))\r\n    .then(({data}) => setAccountDetails(data))\r\n    .catch((err) => console.log(err))\r\n  }\r\n\r\n  if (!details) {\r\n    return (\r\n      <h1>Нет такого аккаунта</h1>\r\n    )\r\n  }\r\n\r\n  if (!details.uuid) {\r\n      return <Spinner/>\r\n  }\r\n\r\n    return (\r\n        <div className={styles.AccountDetails}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/accounts' exact>Аккаунты</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Детали аккаунта &nbsp; <strong>{details && details.login}</strong></BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <center><h1>Детали аккаунта   <strong>{details && details.login}</strong></h1></center>\r\n            <MyTable>\r\n                <DetailsTableRow\r\n                    label='uuid'\r\n                    data={details.uuid}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Статус'\r\n                    data={(details.blocked && 'заблокирован') || 'активен'}\r\n                />\r\n                {details.deleted &&  (\r\n                    <DetailsTableRow\r\n                      label='Удален'\r\n                      data={details.deleted && 'удален'}\r\n                    />\r\n                )}\r\n                <DetailsTableRow\r\n                    label='E-mail'\r\n                    data={details.email}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Логин'\r\n                    data={details.login}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Создан'\r\n                    data={(new Date(details.created).toLocaleDateString())}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Телефон'\r\n                    data={details.phone_number}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Верификация'\r\n                    data={(details.verification_required && 'требуется') || 'не требуется'}\r\n                />\r\n                {details.suspended_until && (\r\n                  <DetailsTableRow\r\n                    label='Приостановлен до'\r\n                    data={(new Date(details.suspended_until).toLocaleDateString())}\r\n                  />\r\n                )}\r\n                \r\n        </MyTable>\r\n\r\n        <FlexBlock>\r\n          <MyButton\r\n                color={'secondary'}\r\n                onClick={() => history.push(`/accounts/${id}/update`)}\r\n                buttonText='редактировать'\r\n            />\r\n            <BlockingButton\r\n              blocked={details.blocked}\r\n              onActivate={onActivate}\r\n              onBlock={onBlock}\r\n            />\r\n       </FlexBlock>\r\n\r\n          <SuccessAlert\r\n                    visible={successAlertVisible}\r\n                    setVisible={setSuccessAlertVisible}\r\n                    message={successMessage}\r\n                />\r\n\r\n            <FailureAlert\r\n                visible={failureAlertVisible}\r\n                setVisible={setFailureAlertVisible}\r\n                message={failureMessage}\r\n            />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      details: state.accounts.details,\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n  getAccountDetailsThunk, updateAccountThunk, setAccountDetails\r\n})(AccountDetails)","import React from 'react'\r\n\r\nimport styles from './TableNotFound.module.scss'\r\n\r\nconst TableNotFound = ({className, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.TableNotFound,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <tr className={cls.join(' ')}>\r\n            <th>\r\n                <h1>Ничего не найдено</h1>\r\n            </th>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TableNotFound","import React from 'react'\r\n\r\nimport styles from './ClickableTH.module.scss'\r\n\r\nconst ClickableTH = ({\r\n    className, label, onClick, thisField='', sortField, order, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.ClickableTH,\r\n        className\r\n    ]\r\n\r\n    if (thisField === sortField) {\r\n        cls.push(order? styles.arrowUp: styles.arrowDown)\r\n    }\r\n\r\n    return (\r\n        <th onClick={onClick} className={cls.join(' ')}>\r\n           {label}\r\n        </th>\r\n    )\r\n}\r\n\r\nexport default ClickableTH","import React from 'react'\r\nimport { Table } from 'reactstrap'\r\n\r\nimport styles from './HoverTable.module.scss'\r\n\r\nconst HoverTable = ({className, children, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.HoverTable,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n          <Table hover>\r\n            {children}\r\n          </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HoverTable","import React from 'react'\r\n\r\nimport styles from './StatusTD.module.scss'\r\n\r\nconst StatusTD = ({className, active, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.StatusTD,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <td className={cls.join(' ')}>\r\n        <span className={active? styles.active: styles.notActive}>\r\n           {(active && 'активен') || 'неактивен'}\r\n        </span>\r\n        </td>\r\n    )\r\n}\r\n\r\nexport default StatusTD","import React, { useState } from 'react'\r\nimport { Button, Collapse } from 'reactstrap'\r\n\r\nimport styles from './MyCollapse.module.scss'\r\n\r\nconst MyCollapse = ({\r\n  className, children, color=\"primary\", buttonText='Показать фильтр', ...props\r\n}) => {\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n\r\n    const cls = [\r\n        styles.MyCollapse,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <Button \r\n              color={isOpen? color : 'success'} \r\n              onClick={toggle}\r\n              className={styles.button}\r\n            >\r\n            {isOpen? 'Скрыть фильтр' : buttonText}\r\n            </Button>\r\n            <Collapse isOpen={isOpen}>\r\n              {children}\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyCollapse","import React, { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap'\r\nimport { getAccountsThunk } from '../../redux/actions/accountActions'\r\n\r\nimport styles from './Accounts.module.scss'\r\nimport MyTableForm from '../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../hooks/useFormValiation'\r\nimport { getTrimmedValues } from '../../utils/utils'\r\nimport { useAlert } from '../../hooks/useAlert'\r\nimport SuccessAlert from '../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport TableNotFound from '../../components/UI/MyTable/TableNotFound/TableNotFound'\r\nimport ClickableTH from '../../components/UI/MyTable/ClickableTH/ClickableTH'\r\nimport MyButton from '../../components/UI/MyButton/MyButton'\r\nimport HoverTable from '../../components/UI/MyTable/HoverTable/HoverTable'\r\nimport StatusTD from '../../components/UI/MyTable/StatusTD/StatusTD'\r\nimport MyCollapse from '../../components/UI/MyCollapse/MyCollapse'\r\n\r\nconst Accounts = ({accounts, getAccountsThunk, history}) => {\r\n\r\n  const {values, handleChange, errors, isValid, setValues, resetForm} = useFormAndValidation()\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n\r\n  const [order, setOrder] = useState(true)\r\n  const [offset, setOffset] = useState(0)\r\n  const [sortField, setSortField] = useState('')\r\n\r\n  const changeOrder = (field) => {\r\n    setOrder(!order)\r\n    setSortField(field)\r\n    setValues({\r\n        ...values,\r\n        sort_by:  [\r\n            {\r\n              field,\r\n              order: order? 'asc' : 'desc'\r\n            }\r\n        ]\r\n    })\r\n\r\n    const filterData = getTrimmedValues(values)\r\n\r\n    filterData.sort_by = [\r\n        {\r\n          field,\r\n          order: order? 'asc' : 'desc'\r\n        }\r\n    ]\r\n    const sortedData = {\r\n        ...filterData,\r\n    }\r\n    \r\n    getAccountsThunk(sortedData)\r\n    .then(checkRes(false))\r\n    .catch((err) => console.log(err))\r\n\r\n}\r\n\r\n\r\n    useEffect(() => {\r\n        getAccountsThunk()\r\n        .then(checkRes(false))\r\n        .catch((err) => console.log(err))\r\n        // eslint-disable-next-line\r\n    }, []) \r\n\r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n    \r\n        const filterData = getTrimmedValues(values)\r\n    \r\n        getAccountsThunk(filterData)\r\n        .then(checkRes(false))\r\n        .catch((err) => console.log(err))\r\n    \r\n        console.log(filterData);\r\n      }\r\n\r\n      \r\n    const onReset = () => {\r\n      resetForm({}, {}, true)\r\n    }\r\n\r\n      const onNextClick = (evt) => {\r\n        evt.preventDefault()\r\n        const filterData = getTrimmedValues(values)\r\n        setOffset(offset + 1)\r\n  \r\n        getAccountsThunk({\r\n            ...filterData,\r\n            offset: (offset + 1) * (filterData.limit || 20 )\r\n        })\r\n        .then(checkRes(false))\r\n        .then(() => console.log('onNextClick getPartnersThunk'))\r\n        console.log(filterData);\r\n\r\n    }\r\n    const onPreviousClick = (evt) => {\r\n        evt.preventDefault()\r\n        if (offset <= 0) return\r\n        const filterData = getTrimmedValues(values)\r\n\r\n        setOffset(offset - 1)\r\n        getAccountsThunk({\r\n            ...filterData,\r\n            offset: (offset - 1) * (filterData.limit || 20 )\r\n        })\r\n        .then(checkRes(false))\r\n        .then(() => console.log('onPreviousClick getPartnersThunk'))\r\n        console.log(filterData);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.Accounts}>\r\n            <center><h1>Список аккаунтов</h1></center>\r\n            <MyCollapse>\r\n                <MyTableForm\r\n                    onSubmit={onSubmit}\r\n                    isValid={isValid}\r\n                    buttonText='Найти'\r\n                    resetForm={onReset}\r\n                >\r\n                \r\n                    <TableInput\r\n                        name='login'\r\n                        label='Логин'\r\n                        onChange={handleChange}\r\n                        value={values.login}\r\n                        errorText={errors.login}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                        name='email'\r\n                        label='email'\r\n                        onChange={handleChange}\r\n                        value={values.email}\r\n                        errorText={errors.email}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                        name='uuid'\r\n                        label='uuid'\r\n                        onChange={handleChange}\r\n                        value={values.uuid}\r\n                        errorText={errors.uuid}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                            type='number'\r\n                            name='limit'\r\n                            label='Кол-во записей'\r\n                            onChange={handleChange}\r\n                            value={values.limit}\r\n                            errorText={errors.limit}\r\n                            style={{\r\n                                width: `140px`\r\n                            }}\r\n                            min={1}\r\n                            max={100}\r\n                        />\r\n                </MyTableForm>\r\n            </MyCollapse>\r\n            \r\n\r\n            <HoverTable>\r\n                <thead>\r\n                    <tr>\r\n                        <th>id</th>\r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('login')}\r\n                            label='Логин'\r\n                            thisField='login'\r\n                            sortField={sortField}\r\n                            order={order}\r\n                        />\r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('email')}\r\n                            label='Email'\r\n                            thisField='email'\r\n                            sortField={sortField}\r\n                            order={order}\r\n                        />\r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('phone_number')}\r\n                            label='Телефон'\r\n                            thisField='phone_number'\r\n                            sortField={sortField}\r\n                            order={order}\r\n                        />\r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('created')}\r\n                            label='Создан'\r\n                            thisField='created'\r\n                            sortField={sortField}\r\n                            order={order}\r\n                        />\r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('blocked')}\r\n                            label='Cтатус'\r\n                            thisField='blocked'\r\n                            sortField={sortField}\r\n                            order={order}\r\n                        />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        accounts?.length?  accounts.map((account) => {\r\n                            return (\r\n                                <tr \r\n                                    key={account.id}\r\n                                    className={styles.tr} \r\n                                    onClick={() => history.push(`/accounts/${account.id}`)}\r\n                                >\r\n                                    <th scope=\"row\">{account.id}</th>\r\n                                    <td>{account.login}</td>\r\n                                    <td>{account.email}</td>\r\n                                    <td>{account.phone_number}</td>\r\n                                    <td>{(new Date(account.created).toLocaleDateString())}</td>\r\n                                    <StatusTD\r\n                                        active={!account.blocked}\r\n                                    />\r\n                                </tr>\r\n                            )\r\n                        }):\r\n                            (\r\n                                <TableNotFound/>\r\n                            )\r\n                    }\r\n                    \r\n                    \r\n                </tbody>\r\n            </HoverTable>\r\n\r\n            <div className={styles.tableBotton} >\r\n\r\n            <MyButton\r\n                color={'primary'}\r\n                onClick={() => history.push(`/create-account`)}\r\n                buttonText='добавить аккаунт'\r\n            />\r\n\r\n            <Pagination className={styles.Pagination} aria-label=\"Page navigation\">\r\n             \r\n                <PaginationItem>\r\n                    <PaginationLink \r\n                        onClick={onPreviousClick}\r\n                        previous href=\"#\" />\r\n                </PaginationItem>\r\n             \r\n                <PaginationItem>\r\n                    <PaginationLink \r\n                        onClick={onNextClick}\r\n                        next href=\"#\" />\r\n                </PaginationItem>\r\n              \r\n            </Pagination>\r\n\r\n            {/* <ReactPaginate\r\n                previousLabel={'назад'}\r\n                nextLabel={'вперед'}\r\n                breakLabel={'...'}\r\n                breakClassName={'break-me'}\r\n                pageCount={15/limit}\r\n                marginPagesDisplayed={2}\r\n                pageRangeDisplayed={5}\r\n                onPageChange={handlePageClick}\r\n                containerClassName={'pagination'}\r\n                activeClassName={styles.active}\r\n                pageClassName={styles.pageClass}\r\n                /> */}\r\n\r\n            </div>\r\n\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        accounts: state.accounts.accounts\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps, {getAccountsThunk})(Accounts)","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport { getAccountDetailsThunk, updateAccountThunk } from '../../../redux/actions/accountActions'\r\n\r\nimport styles from './AccountsUpdate.module.scss'\r\n\r\nconst AccountsUpdate = ({\r\n    className, details, getAccountDetailsThunk, updateAccountThunk, \r\n    ...props}) => {\r\n\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n        failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n    \r\n    \r\n    const {values, handleChange, errors, isValid, setValues, setIsValid } = useFormAndValidation()\r\n    \r\n    const {id} = useParams()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        setIsValid(false)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getAccountDetailsThunk([+id])\r\n        .then(checkRes(false))\r\n        .catch((err) => console.log(err))\r\n        return () => {\r\n        //   setShopDetails({\r\n        //       uuid: '',\r\n        //       partner_uuid: '',\r\n        //       name: '',\r\n        //     })\r\n        }\r\n        // eslint-disable-next-line \r\n      }, [])\r\n\r\n    useEffect(() => {\r\n        if (!details) return;\r\n\r\n        let updateValues = details;\r\n        // сервер ругается на `null` в parent_id и suspended_until, поэтому убираем их\r\n        if (!details.parent_id) {\r\n            const {parent_id, ...rest} = details\r\n            updateValues = rest\r\n        }\r\n        if (!details.suspended_until) {\r\n            const {suspended_until, ...rest} = details\r\n            updateValues = rest\r\n        }\r\n        if (!details.parent_id && !details.suspended_until) {\r\n            const {parent_id, suspended_until, ...rest} = details\r\n            updateValues = rest\r\n        }\r\n\r\n        setValues(updateValues)\r\n        // eslint-disable-next-line\r\n      }, [details])\r\n\r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        updateAccountThunk(values)\r\n        .then(checkRes())\r\n        .then(res => {\r\n            if (res.ok) {\r\n                setTimeout(() => {\r\n                  history.goBack()\r\n                }, 1000)\r\n            }\r\n        })\r\n        .catch((err) => console.log(err))\r\n        console.log(values);\r\n      }\r\n      \r\n\r\n    const cls = [\r\n        styles.AccountsUpdate,\r\n        className\r\n    ]\r\n\r\n    if (!details) {\r\n        return <h1>нет такого аккаунта</h1>\r\n    }\r\n  \r\n    if (!details.uuid) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n             <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n                <BreadcrumbItem tag={NavLink} to='/accounts' exact>Аккаунты</BreadcrumbItem>\r\n                <BreadcrumbItem tag={NavLink} to={`/accounts/${id}`} exact>Детали аккаунта &nbsp; <strong>{details?.login}</strong></BreadcrumbItem>\r\n                <BreadcrumbItem active tag=\"span\">Редактирование аккаунта &nbsp; <strong>{details?.login}</strong></BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <center><h1>Редактирование аккаунта   <strong>{details?.login}</strong></h1></center>\r\n\r\n            <MyTableForm\r\n                onSubmit={onSubmit}\r\n                isValid={isValid}\r\n                buttonText='Сохранить'\r\n            >\r\n                    <TableInput\r\n                        type='email'\r\n                         name='email'\r\n                        label='email'\r\n                        required={true}\r\n                        onChange={handleChange}\r\n                        value={values.email}\r\n                        errorText={errors.email}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                         name='login'\r\n                        label='Логин'\r\n                        required={true}\r\n                        onChange={handleChange}\r\n                        value={values.login}\r\n                        errorText={errors.login}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                         name='password'\r\n                        label='Пароль'\r\n                        onChange={handleChange}\r\n                        value={values.password}\r\n                        errorText={errors.password}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                         name='phone_number'\r\n                        label='Телефон'\r\n                        onChange={handleChange}\r\n                        value={values.phone_number}\r\n                        errorText={errors.phone_number}\r\n                        minLength={5}\r\n                        maxLength={199}\r\n                    />\r\n            </MyTableForm>\r\n\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n            <FailureAlert\r\n                visible={failureAlertVisible}\r\n                setVisible={setFailureAlertVisible}\r\n                message={failureMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      details: state.accounts.details,\r\n    }\r\n  }\r\n\r\n  \r\n\r\nexport default connect(mapStateToProps, {\r\n    getAccountDetailsThunk, updateAccountThunk, \r\n })(AccountsUpdate)","import myAxios from '../../configs/modified-axios'\r\nimport { makeRes } from '../../utils/utils';\r\nimport { ACQUIRERS_FAILURE, ACQUIRERS_LOADING, ACQUIRERS_SUCCESS, SET_ACQUIRERS, SET_ACQUIRER_DETAILS } from './actionTypes';\r\n\r\n\r\nexport const createAcquirerThunk = (inputData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n\r\n      const res = await myAxios.post(`/api/admin/add_acquirer`, inputData)\r\n\r\n      console.log(res);\r\n      \r\n      if (res.status === 200 && res.data.result) {\r\n          dispatch(alertAcquirersSuccess({create: 'Эквайер добавлен успешно'}))\r\n          return makeRes(true, 'Эквайер добавлен успешно')\r\n        } else {\r\n          dispatch(alertAcquirersFailure({ create: res.data.errors }))\r\n          return makeRes(false, res.data.errors)\r\n        } \r\n    } catch (error) {\r\n      console.log(error.message);\r\n      dispatch(alertAcquirersFailure({create: [error.message]}))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n} \r\n\r\nexport const getAcquirersThunk = (filterData={}) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_acquirers`, filterData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(getAcquirersSuccess( res.data.result.acquirers))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertAcquirersFailure({ acquirers: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertAcquirersFailure({ acquirers: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const getAcquirerDetailsThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_acquirers_by_uuids`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setAcquirerDetails( res.data.result.acquirers[0]))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertAcquirersFailure({ details: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertAcquirersFailure({ details: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateAcquirerThunk = (acquirerData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/update_acquirer`, acquirerData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertAcquirersSuccess({update: 'информация о эквайере успешно обновлена'}))\r\n        return makeRes(true, 'информация о эквайере успешно обновлена', res.data.result)\r\n      } else {\r\n        dispatch(alertAcquirersFailure({ update: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertAcquirersFailure({ update: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const deleteAcquirersThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/delete_acquirers`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertAcquirersSuccess({delete: 'Эквайер успешно удалён'}))\r\n        return makeRes(true, 'Эквайер успешно удалён')\r\n      } else {\r\n        dispatch(alertAcquirersFailure({ delete: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertAcquirersFailure({ delete: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const setAcquirersLoading = (status) => {\r\n  return {\r\n    type: ACQUIRERS_LOADING,\r\n    status\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const getAcquirersSuccess = (acquirers) => {\r\n  return {\r\n    type: SET_ACQUIRERS,\r\n    acquirers\r\n  }\r\n}\r\n\r\nexport const setAcquirerDetails = (details) => {\r\n  return {\r\n    type: SET_ACQUIRER_DETAILS,\r\n    details\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const alertAcquirersFailure = (errors) => {\r\n  return {\r\n    type: ACQUIRERS_FAILURE,\r\n    errors\r\n  }\r\n}\r\nexport const alertAcquirersSuccess = (message) => {\r\n  return {\r\n    type: ACQUIRERS_SUCCESS,\r\n    message\r\n  }\r\n}\r\n\r\n\r\n","import React, { useEffect, useState }  from 'react'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport {  Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from './AcquirerAddition.module.scss'\r\nimport { connect } from 'react-redux'\r\nimport { createAcquirerThunk } from '../../../redux/actions/acquirerActions'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\n\r\nconst AcquirerAddition = ({\r\n    className, createAcquirerThunk, ...props\r\n}) => {\r\n\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n        failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n    \r\n\r\n    const {values, handleChange, errors, isValid, resetForm, setIsValid } = useFormAndValidation()\r\n\r\n    const [checked, setChecked] = useState(true)\r\n    useEffect(() => {\r\n        setIsValid(false)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        console.log(values);\r\n        createAcquirerThunk({\r\n            ...values,\r\n            active: checked\r\n        })\r\n        .then((res) => {\r\n            checkRes()(res)\r\n            return res\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  setTimeout(() => {\r\n                    resetForm()\r\n                  }, 1000)\r\n              }\r\n          })\r\n          .then(() => console.log('AcquirerAddition'))\r\n          .catch((err) => console.log(err))\r\n\r\n    }\r\n\r\n    const handleCheckBoxChange = (evt) => {\r\n        setChecked(evt.target.checked)\r\n    }\r\n\r\n    const cls = [\r\n        styles.AcquirerAddition,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/acquirers' exact>Банки</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Добавление банка </BreadcrumbItem>\r\n        </Breadcrumb>\r\n           <center> <h1>Добавление банка</h1></center>\r\n            <MyTableForm\r\n              onSubmit={onSubmit}\r\n              isValid={isValid}\r\n            >\r\n                <TableInput\r\n                    name='name'\r\n                    label='Наименование'\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    errorText={errors.name}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                />\r\n                <TableInput\r\n                    name='alias'\r\n                    label='alias'\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    value={values.alias}\r\n                    errorText={errors.alias}\r\n                    // pattern={'[a-z0-9_]{2,50}'}\r\n                    minLength={2}\r\n                    maxLength={50}\r\n                />\r\n                <TableInput\r\n                    name='active'\r\n                    label='Активен'\r\n                    onChange={handleCheckBoxChange}\r\n                    type='checkbox'\r\n                    checked={checked}\r\n                    \r\n                />\r\n\r\n            </MyTableForm>\r\n\r\n\r\n                <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default connect(null, { createAcquirerThunk })(AcquirerAddition)","export const operationsOptions = [\r\n  {name: 'payin e-com', value: 'ecom', jsonKey: 'operations'},\r\n  {name: 'payout (oct)', value: 'oct_card', jsonKey: 'operations'},\r\n  {name: 'payin AFT', value: 'aft', jsonKey: 'operations'},\r\n  {name: 'payout (ПСР)', value: 'oct_account', jsonKey: 'operations'},\r\n  {name: 'card registration', value: 'ecom_recurring_reg', jsonKey: 'operations'},\r\n  {name: 'recurrent e-com', value: 'ecom_recurring', jsonKey: 'operations'},\r\n  {name: 'recurrent AFT', value: 'aft_recurring', jsonKey: 'operations'},\r\n  {name: 'recurrent e-com (splitted)', value: 'ecom_recurring_splitted', jsonKey: 'operations'},\r\n  {name: 'recurrent AFT (splitted)', value: 'aft_recurring_splitted', jsonKey: 'operations'},\r\n  {name: 'payin e-com (splitted)', value: 'ecom_splitted', jsonKey: 'operations'},\r\n  {name: 'payin AFT (splitted)', value: 'aft_splitted', jsonKey: 'operations'},\r\n  {name: 'УПРИД', value: 'uprid', jsonKey: 'operations'},\r\n]\r\n\r\n\r\nexport const activeOptions = [\r\n  {name: 'Да', value: false, jsonKey: 'blocked'},\r\n  {name: 'Нет', value: true, jsonKey: 'blocked'},\r\n]\r\n\r\n\r\nexport const currencyOptions = [\r\n  {\"value\": \"643\", \"code\": \"RUB\", \"name\": \"Российский рубль\", jsonKey: 'currency_num'},\r\n  {\"value\": \"840\", \"code\": \"USD\", \"name\": \"Доллар США\", jsonKey: 'currency_num'},\r\n  {\"value\": \"978\", \"code\": \"EUR\", \"name\": \"Евро\", jsonKey: 'currency_num'},\r\n  {\"value\": \"392\", \"code\": \"JPY\", \"name\": \"Японская йена\", jsonKey: 'currency_num'},\r\n  {\"value\": \"156\", \"code\": \"CNY\", \"name\": \"Китайский юань женьминьби\", jsonKey: 'currency_num'},\r\n]\r\n\r\nexport const cardBrandsOptions = [\r\n  {name: 'VISA', value: 'visa', jsonKey: 'card_brands'},\r\n  {name: 'Master card', value: 'mc', jsonKey: 'card_brands'},\r\n  {name: 'JCB', value: 'jcb', jsonKey: 'card_brands'},\r\n  {name: 'AMEX', value: 'amex', jsonKey: 'card_brands'},\r\n  {name: 'Discover', value: 'discover', jsonKey: 'card_brands'},\r\n  {name: 'MIR', value: 'mir', jsonKey: 'card_brands'},\r\n]\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport MyTableForm from '../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../hooks/useFormValiation'\r\nimport { getAcquirersThunk } from '../../redux/actions/acquirerActions'\r\n\r\nimport styles from './Acquirers.module.scss'\r\nimport TableMultiselect from '../../components/UI/MyTable/TableMultiselect/TableMultiselect';\r\nimport { activeOptions } from '../../utils/constants';\r\nimport { getTrimmedValues } from '../../utils/utils';\r\nimport MyButton from '../../components/UI/MyButton/MyButton';\r\nimport StatusTD from '../../components/UI/MyTable/StatusTD/StatusTD';\r\nimport ClickableTH from '../../components/UI/MyTable/ClickableTH/ClickableTH';\r\nimport SuccessAlert from '../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../hooks/useAlert'\r\nimport TableNotFound from '../../components/UI/MyTable/TableNotFound/TableNotFound'\r\nimport HoverTable from '../../components/UI/MyTable/HoverTable/HoverTable'\r\nimport MyCollapse from '../../components/UI/MyCollapse/MyCollapse'\r\n\r\nconst Acquirers = ({className, getAcquirersThunk, acquirers=[], ...props}) => {\r\n    \r\n    const history = useHistory()\r\n\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n        failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n    \r\n    const {values, handleChange, errors, setValues, isValid, resetForm} = useFormAndValidation()\r\n    const [order, setOrder] = useState(true)\r\n  const [sortField, setSortField] = useState('')\r\n\r\n  const multiRef = useRef()\r\n\r\n\r\n    const changeOrder = (field) => {\r\n      setOrder(!order)\r\n      setSortField(field)\r\n  \r\n      const filterData = getTrimmedValues(values)\r\n  \r\n      const sortedData = {\r\n          ...filterData,\r\n          \"sort_by\": [\r\n              {\r\n                field,\r\n                order: order? 'asc' : 'desc'\r\n              }\r\n          ]\r\n      }\r\n      \r\n      getAcquirersThunk(sortedData)\r\n      .then(checkRes(false))\r\n  \r\n  }\r\n\r\n    const onRemove = (selectedList, removedItem) => {\r\n        console.log(selectedList);\r\n    }\r\n\r\n\r\n      const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        \r\n        const filterData = getTrimmedValues(values)\r\n\r\n        getAcquirersThunk(filterData)\r\n        .then(checkRes(false))\r\n     \r\n        console.log(filterData);\r\n      }\r\n\r\n      const onReset = () => {\r\n          const {name, blocked, active, ...restValues} = values\r\n        resetForm(restValues, {}, true)\r\n        multiRef.current.resetSelectedValues();\r\n      }\r\n\r\n\r\n    const onSingleSelect = (selectedList, {jsonKey, value}) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [jsonKey]: value\r\n        })\r\n    }\r\n\r\n    const cls = [\r\n        styles.Acquirers,\r\n        className\r\n    ]\r\n    \r\n\r\n    useEffect(() => {\r\n        getAcquirersThunk()\r\n        .then(checkRes(false))\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <center><h1>Список банков</h1></center>\r\n            \r\n            <MyCollapse>\r\n                <MyTableForm\r\n                    onSubmit={onSubmit}\r\n                    isValid={isValid}\r\n                    buttonText='Найти'\r\n                    resetForm={onReset}\r\n                >\r\n                    <TableInput\r\n                        name='name'\r\n                        label='Наименование'\r\n                        onChange={handleChange}\r\n                        value={values.name}\r\n                        errorText={errors.name}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    \r\n                    <TableMultiselect\r\n                            label='Aктивен'\r\n                            options={activeOptions}\r\n                            displayValue=\"name\"\r\n                            onSelect={onSingleSelect}\r\n                            onRemove={onRemove}\r\n                            placeholder='Выберите'\r\n                            singleSelect\r\n                            multiRef={multiRef}\r\n                        />\r\n                    \r\n                </MyTableForm>\r\n            </MyCollapse>\r\n            <HoverTable>\r\n                <thead>\r\n                    <tr>\r\n                        <th>№</th>\r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('name')}\r\n                            label='Наименование'\r\n                            thisField='name'\r\n                            sortField={sortField}\r\n                            order={order}\r\n                        />\r\n                         <ClickableTH\r\n                            onClick={() => changeOrder('blocked')}\r\n                            label='Cтатус'\r\n                            thisField='blocked'\r\n                            sortField={sortField}\r\n                            order={order}\r\n                        />\r\n                        \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        acquirers?.length?\r\n                          acquirers.map((item, i) => {\r\n                            return (\r\n                                <tr \r\n                                    key={item.uuid}\r\n                                    onClick={() => history.push(`/acquirers/${item.uuid}`)}\r\n                                >\r\n                                    <td>{i+1}</td>\r\n                                    <td>{item.name}</td>\r\n                                    <StatusTD\r\n                                        active={!item.blocked}\r\n                                    />\r\n                                </tr>\r\n                            )\r\n                        }) :\r\n                        (\r\n                            <TableNotFound/>\r\n                        )\r\n                    }\r\n                    \r\n                    \r\n                </tbody>\r\n            </HoverTable>\r\n\r\n\r\n            <MyButton\r\n                color={'primary'}\r\n                onClick={() => history.push('/add-acquirer')}\r\n                buttonText='добавить банк'\r\n            />\r\n\r\n                <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        acquirers: state.acquirers.acquirers\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default  connect(mapStateToProps, { getAcquirersThunk })(Acquirers)","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport MyButton from '../../../components/UI/MyButton/MyButton'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\n\r\nimport styles from './AcquirersDetails.module.scss'\r\nimport { deleteAcquirersThunk, getAcquirerDetailsThunk, setAcquirerDetails, updateAcquirerThunk } from '../../../redux/actions/acquirerActions'\r\nimport DetailsTableRow from '../../../components/UI/MyTable/DetailsTableRow/DetailsTableRow'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport FlexBlock from '../../../components/Blocks/FlexBlock/FlexBlock'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport BlockingButton from '../../../components/UI/MyButton/BlockingButton/BlockingButton'\r\n\r\nconst AcquirersDetails = ({\r\n  className, details, getAcquirerDetailsThunk, setAcquirerDetails, \r\n  deleteAcquirersThunk, updateAcquirerThunk,\r\n   ...props}) => {\r\n\r\n  const {id} = useParams()\r\n  const history = useHistory()\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n\r\n\r\n  const onBlock = () => {\r\n    const confirmed = window.confirm(\"Вы точно хотите заблокировать?\");\r\n    if (!confirmed) return;\r\n    updateAcquirerThunk({uuid: id, blocked: true})\r\n    .then(checkRes(false))\r\n    .then(({data}) => setAcquirerDetails(data))\r\n    .catch((err) => console.log(err))\r\n  }\r\n\r\n  const onActivate = () => {\r\n    const confirmed = window.confirm(\"Вы точно хотите активировать?\");\r\n    if (!confirmed) return;\r\n    updateAcquirerThunk({uuid: id, blocked: false})\r\n    .then(checkRes(false))\r\n    .then(({data}) => setAcquirerDetails(data))\r\n    .catch((err) => console.log(err))\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAcquirerDetailsThunk([id])\r\n    return () => {\r\n      setAcquirerDetails({\r\n          uuid: '',\r\n          active: true,\r\n          alias: '',\r\n          name: '',\r\n        })\r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n    const cls = [\r\n        styles.AcquirersDetails,\r\n        className\r\n    ]\r\n    if (!details) {\r\n      return <h1>нет такого эквайера</h1>\r\n  }\r\n\r\n  if (!details.uuid) {\r\n      return <Spinner/>\r\n  }\r\n\r\n  return (\r\n    <div className={cls.join(' ')}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/acquirers' exact>Список банков</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Детали банка {details.name}</BreadcrumbItem>\r\n        </Breadcrumb>\r\n\r\n        <center><h1>Информация об эквайере</h1></center>\r\n        <MyTable>\r\n            <DetailsTableRow\r\n                label='uuid'\r\n                data={details.uuid}\r\n            />\r\n            <DetailsTableRow\r\n                label='Наименование'\r\n                data={details.name}\r\n            />\r\n            <DetailsTableRow\r\n                label='Статус'\r\n                data={!details.blocked? 'активен' : 'неактивен'}\r\n            />\r\n             <DetailsTableRow\r\n                label='alias'\r\n                data={details.alias}\r\n            />\r\n\r\n        </MyTable>\r\n\r\n        <FlexBlock>\r\n            <MyButton\r\n                onClick={() => history.push(`/acquirers/update/${id}`)}\r\n                buttonText='редактировать'\r\n            />\r\n\r\n            <BlockingButton\r\n              blocked={details.blocked}\r\n              onActivate={onActivate}\r\n              onBlock={onBlock}\r\n            />\r\n\r\n        </FlexBlock>\r\n        \r\n        <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\nreturn {\r\n  details: state.acquirers.details,\r\n}\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { \r\n  getAcquirerDetailsThunk, setAcquirerDetails, deleteAcquirersThunk,\r\n  updateAcquirerThunk,\r\n})(AcquirersDetails)","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport { getAcquirerDetailsThunk, setAcquirerDetails, updateAcquirerThunk } from '../../../redux/actions/acquirerActions'\r\nimport styles from './AcquirersUpdate.module.scss'\r\n\r\nconst AcquirersUpdate = ({\r\n  className, getAcquirerDetailsThunk, setAcquirerDetails, details,\r\n  updateAcquirerThunk, ...props\r\n}) => {\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n\r\n\r\n  const {values, handleChange, errors, isValid, setValues } = useFormAndValidation()\r\n  const [checked, setChecked] = useState(true)\r\n  \r\n  const {id} = useParams()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    getAcquirerDetailsThunk([id])\r\n    .then(checkRes(false))\r\n    return () => {\r\n      setAcquirerDetails({\r\n          uuid: '',\r\n          active: true,\r\n          alias: '',\r\n          name: '',\r\n        })\r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\nuseEffect(() => {\r\n  setValues(details)\r\n  setChecked(details?.active)\r\n  // eslint-disable-next-line\r\n}, [details])\r\n\r\nconst onSubmit = (evt) => {\r\n  evt.preventDefault()\r\n  updateAcquirerThunk({uuid: id, ...values, active: checked})\r\n  .then((res) => {\r\n    checkRes()(res)\r\n    return res\r\n  })\r\n  .then(res => {\r\n      if (res.ok) {\r\n          setTimeout(() => {\r\n            history.goBack()\r\n          }, 1000)\r\n      }\r\n  })\r\n  .catch((err) => console.log(err))\r\n  console.log(values);\r\n}\r\n\r\n// const handleCheckBoxChange = (evt) => {\r\n//   setChecked(evt.target.checked)\r\n// }\r\n\r\n    const cls = [\r\n        styles.AcquirersUpdate,\r\n        className\r\n    ]\r\n    if (!details) {\r\n      return <h1>нет такого эквайера</h1>\r\n  }\r\n\r\n  if (!details.uuid) {\r\n      return <Spinner/>\r\n  }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n         <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/acquirers' exact>Список банков</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/acquirers/${id}`} exact>Детали банка &nbsp; <strong>{details.name}</strong></BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Редактирование банка &nbsp; <strong>{details.name}</strong></BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <h1>Редактирование информации эквайера </h1>\r\n              <MyTableForm\r\n                onSubmit={onSubmit}\r\n                isValid={isValid}\r\n                buttonText={'Сохранить'}\r\n              >\r\n              <TableInput\r\n                    name='name'\r\n                    label='Наименование'\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    errorText={errors.name}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                />\r\n                <TableInput\r\n                    name='alias'\r\n                    label='alias'\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    value={values.alias}\r\n                    errorText={errors.alias}\r\n                    pattern={'[a-z0-9_]{2,50}'}\r\n                    minLength={2}\r\n                    maxLength={50}\r\n                />\r\n                {/* <TableInput\r\n                    name='active'\r\n                    label='Активен'\r\n                    onChange={handleCheckBoxChange}\r\n                    type='checkbox'\r\n                    checked={checked}\r\n                    \r\n                /> */}\r\n\r\n              </MyTableForm>\r\n\r\n            \r\n            <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      details: state.acquirers.details,\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n   getAcquirerDetailsThunk, setAcquirerDetails, updateAcquirerThunk,\r\n  })(AcquirersUpdate)","import React from 'react'\r\n\r\nimport styles from './HomePage.module.scss'\r\n\r\nconst HomePage = (props) => {\r\n\r\n    return (\r\n        <div className={styles.HomePage}>\r\n            <h1>Главная страница</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage","export const mockNews = [\r\n  {\r\n    id: 1,\r\n    image: 'https://vepay.online/upload/iblock/9a6/9a658816a540dc262a0881104877e2ae.jpg',\r\n    short: '6-ОЙ ЮЖНОРОССИЙСКИЙ МИКРОФИНАНСОВЫЙ ФОРУМ',\r\n    full: `\r\n    10 сентября процессинговая компания VEPAY принимала участие в 6-ом Южнороссийском Микрофинансовом форуме в качестве мерчанта.\r\n    ⠀\r\n    Генеральный директор компании Евгений Колобов в рамках выступления на тему «Цифровизация бизнеса. Платежные тренды для микрофинансовых организаций» затронул вопросы финансовых решений для МФО, которые может предоставить VEPAY:\r\n    -Рекуррент\r\n    -УПРИД (удаленная упрощенная идентификация клиентов)\r\n    -Оплата по ссылке\r\n    -Получение платежей\r\n    -Мобильное приложение\r\n    -Верификация заемщика\r\n    -Кастомизация\r\n    \r\n    VEPAY - технологии в действии!\r\n    \r\n    Свяжитесь с нами: info@vepay.online или по телефону +7 495 954 84 95`,\r\n    date: \"2020-09-25T18:25:43.511Z\"\r\n  },\r\n  {\r\n    id: 2,\r\n    image: 'https://vepay.online/upload/iblock/6f9/6f9e2cd88d82c555816ba89ace29f5e8.jpeg',\r\n    short: 'Пресс-релиз от 10.09.2020 УПРИД для МФО',\r\n    full: `Процессинговая компания VEPAY сообщает о запуске сервиса для микрофинансовых организаций об упрощенной идентификации клиентов, соответствующего требованиям Федерального закона № 115-ФЗ, а, также, сервиса верификации банковской карты заемщика через систему быстрых платежей.\r\n\r\n    Данный сервис позволяет проверить следующие данные: ФИО, серия и номер паспорта, ИНН, СНИЛС, номер полиса ОМС, пол, дата рождения, а также производить авторизацию заемщиков через портал Госуслуг.\r\n    \r\n    Удаленная идентификация - это механизм, позволяющий россиянам получать финансовые услуги дистанционно в различных финансовых учреждениях, подтвердив свою личность с помощью биометрических персональных данных. \r\n    \r\n    Сервис для микрофинансовых и других кредитных организаций VEPAY по верификации карты клиента и упрощенной идентификации позволит компании ускорить время принятия решения по выдаче займа и его зачисления на банковскую карту заемщика, снизить количество мошеннических операций, актуализировать информацию по действующим клиентам и выявить дополнительные данные в режиме онлайн. \r\n    \r\n    VEPAY обеспечивает помощь в интеграции, а также оказывает техническую поддержку по возникающим вопросам.\r\n    \r\n    Процессинговая компания VEPAY – это российская компания, предоставляющая отраслевой сервис в области платежных технологий на рынках России, Западной Европы и СНГ для юридических лиц и самозанятых лиц.\r\n    \r\n    Основными направлениями работы являются отрасли МФО и финансовые организации, интернет-магазины и маркетплейс, краудфандинговые платформы, сервисы онлайн-образования, ЖКХ.\r\n    \r\n    Свяжитесь с нами: info@vepay.online или по телефону +7 495 954 84 95`,\r\n    date: \"2020-09-11T18:25:43.511Z\"\r\n  },\r\n  {\r\n    id: 3,\r\n    image: 'https://vepay.online/upload/iblock/b09/b09f72fb03c21c30637baec98dbd4aa6.jpg',\r\n    short: 'Интервью генерального директора VEPAY Евгения Колобова Digital MFO Forum',\r\n    full: `Генеральный директор процессинговой компании «VEPAY» Евгений Колобов 27.08.2020г. принимал участие в конференции Digital MFO.\r\n\r\n    В рамках интервью с Евгением Колобовым, модераторы Владимир Шикин и Вячеслав Семенихин обсудили наиболее важные вопросы, в отношение рынка МФО и краудфандинга, а именно: верификация карт заемщика МФО через СБП, \"click-to-offer\", продукт для инвестиционных платформ и его отличие от банковских продуктов.\r\n    \r\n    Также, обсуждение коснулось темы начинающих предпринимателей (самозанятые) и быстрых вариантов оплаты товаров и услуг, которые не требуют сложной технической интеграции с системой VEPAY.\r\n    \r\n    Мы благодарим наших коллег за приглашение на конференцию!\r\n    \r\n    Запись интервью с генеральным директором процессинговой компании «VEPAY» Евгением Колобовым, можно увидеть на сайте форума digital-mfo.ru\r\n    \r\n    VEPAY - технологии в действии!\r\n    \r\n    Свяжитесь с нами: info@vepay.online или по телефону +7 495 954 84 95`,\r\n    date: \"2020-08-28T18:25:43.511Z\"\r\n  },\r\n  {\r\n    id: 4,\r\n    image: 'https://vepay.online/upload/iblock/0b9/0b9941a78dc742162794b2d1a3e5c11d.png',\r\n    short: 'VEPAY: бренд с индивидуальным подходом и корпоративными ценностями',\r\n    full: `Евгений Колобов, сооснователь и генеральный директор процессинговой компании VEPAY, в своем интервью журналу «ПЛАС» рассказывает о последних трендах финтеха, возникших под влиянием пандемии, а также новых возможностях для начинающих предпринимателей.\r\n\r\n    В интервью вы узнаете:\r\n    о последних трендах платежного рынка;\r\n    как сэкономить на платежах, и каковы нюансы арифметики платежного бизнеса;\r\n    об эффективных платежных инструментах для небольших интернет-магазинов;\r\n    о сервисах процессинговой компании VEPAY для микрофинансовых организаций и краудфандинговых платформ;\r\n    о бренде VEPAY и его отношению к клиентам;\r\n    а также много всего интересного.\r\n    Прочесть интервью https://plusworld.ru/lr/vepay-brend-s-individualnym-podkhodom/\r\n    \r\n    О процессинговой компании VEPAY\r\n    Процессинговая компания VEPAY – это российская компания, предоставляющая отраслевой сервис в области платежных технологий на рынках России и СНГ для юридических лиц.\r\n    \r\n    Основными направлениями работы являются отрасли МФО и финансовые организации, интернет-магазины и маркетплейс, краудфандинговые платформы, сервисы онлайн-образования, ЖКХ.\r\n    \r\n    Задать вопрос info@vepay.online\r\n    Позвонить +7 499 954-84-95\r\n    Заполнить заявку на подключение https://vepay.online/new.php\r\n    Начните принимать платежи уже завтра!`,\r\n    date: \"2020-08-25T18:25:43.511Z\"\r\n  },\r\n\r\n]","import myAxios from '../../configs/modified-axios'\r\n\r\nimport { mockNews } from '../../utils/mock-news'\r\nimport { getAccessToken } from '../../utils/utils'\r\n\r\n\r\nimport { SET_NEWS_FAILURE, GET_NEWS_SUCCESS, NEWS_LOADING,\r\n  GET_NEWS_DETAILS\r\n } from \"./actionTypes\"\r\n\r\n\r\nexport const getNewsThunk = () => {\r\n  return async (dispatch) => {\r\n    dispatch(setNewsLoading(true))\r\n\r\n    try {\r\n      dispatch(setNews(mockNews)) // TEST\r\n      // const data = {\r\n      //   access_token: getAccessToken(),\r\n\r\n      // }\r\n      // const res = await myAxios.post(`/api/get_news`, data)\r\n      // if (res.status === 200 && res.data.result) {\r\n        // dispatch(setNewsFailure({ news: null }))\r\n      //   dispatch(setNews(res.data.result.news))\r\n      // } else {\r\n        // dispatch(setNewsFailure({ news: res.data.errors }))\r\n      // } \r\n    } catch (error) {\r\n      dispatch(setNewsFailure({ news: ['Сервер недоступен'] }))\r\n      console.log(error);\r\n    } finally {\r\n     dispatch(setNewsLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const getNewsDetailsThunk = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch(setNewsLoading(true))\r\n    \r\n    try {\r\n      dispatch(setNewsDetails(mockNews.find((news) => news.id === +id)))\r\n\r\n      // const data = {\r\n      //   access_token: getAccessToken(),\r\n      //   ids: [id]\r\n      // }\r\n      // const res = await myAxios.post(`/api/get_news_by_ids`, data)\r\n      // if (res.status === 200 && res.data.result) {\r\n          // dispatch(setNewsFailure({ details: null }))\r\n      //   dispatch(setNewsDetails(res.data.result.news[0]))\r\n      // } else {\r\n      //   dispatch(setNewsFailure({ details: res.data.errors }))\r\n      // }\r\n    } catch (error) {\r\n      dispatch(setNewsFailure({ details: ['Сервер недоступен'] }))\r\n      console.log(error);\r\n    } finally {\r\n      dispatch(setNewsLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateNewsDetailsThunk = (newsData) => {\r\n  return async (dispatch) => {\r\n    dispatch(setNewsLoading(true))\r\n    try {\r\n      const data = {\r\n        ...newsData,\r\n        access_token: getAccessToken(),\r\n        // date: new Date(),\r\n        // category_alias: \"site\"\r\n\r\n      }\r\n      const res = await myAxios.post(`/api/update_news`, data)\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setNewsFailure({ update: null }))\r\n        dispatch(setNewsDetails(res.data.result))\r\n      } else {\r\n        dispatch(setNewsFailure({ update: res.data.errors }))\r\n      }\r\n    } catch (error) {\r\n      dispatch(setNewsFailure({ update: ['Сервер недоступен'] }))\r\n      console.log(error);\r\n    } finally {\r\n      dispatch(setNewsLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteNewsThunk = (id) => {\r\n  return async (dispatch) => {\r\n\r\n    dispatch(setNewsLoading(true))\r\n    try {\r\n      const data = {\r\n        access_token: getAccessToken(),\r\n        ids: [id]\r\n      }\r\n      const res = await myAxios.post(`/api/delete_news`, data)\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setNewsFailure({ delete: null }))\r\n      } else {\r\n        dispatch(setNewsFailure({ delete: res.data.errors }))\r\n      }\r\n    } catch (error) {\r\n      dispatch(setNewsFailure({ delete: ['Сервер недоступен'] }))\r\n      console.log(error);\r\n    } finally {\r\n      dispatch(setNewsLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const createNewsThunk = (newsData) => {\r\n  return async (dispatch) => {\r\n    dispatch(setNewsLoading(true))\r\n    try {\r\n      const data = {\r\n        ...newsData,\r\n        access_token: getAccessToken(),\r\n        // date: new Date(),\r\n        // category_alias: \"site\"\r\n      }\r\n      const res = await myAxios.post(`/api/add_news`, data)\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setNewsFailure({ create: null }))\r\n        dispatch(setNewsDetails(res.data.result))\r\n      } else {\r\n        dispatch(setNewsFailure({ create: res.data.errors }))\r\n      }\r\n    } catch (error) {\r\n      dispatch(setNewsFailure({ create: ['Сервер недоступен'] }))\r\n      console.log(error);\r\n    } finally {\r\n      dispatch(setNewsLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const setNewsLoading = (status) => {\r\n  return {\r\n    type: NEWS_LOADING,\r\n    status\r\n  }\r\n}\r\n\r\nexport const setNewsFailure = (errors) => {\r\n  return {\r\n    type: SET_NEWS_FAILURE,\r\n    errors\r\n  }\r\n}\r\n\r\nexport const setNews = (news) => {\r\n  return {\r\n    type: GET_NEWS_SUCCESS,\r\n    news\r\n  }\r\n}\r\nexport const setNewsDetails = (details) => {\r\n  return {\r\n    type: GET_NEWS_DETAILS,\r\n    details\r\n  }\r\n}","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { ListGroup, ListGroupItem } from 'reactstrap'\r\nimport { getNewsThunk } from '../../redux/actions/blogActions'\r\n\r\nimport styles from './News.module.scss'\r\n\r\nconst News = ({news, getNewsThunk, history}) => {\r\n\r\n  useEffect(() => {\r\n    getNewsThunk()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n    return (\r\n        <div className={styles.News}>\r\n        \r\n            <h1>Новости</h1>\r\n            <ListGroup tag='ol'>\r\n              {\r\n                news.map((item) => {\r\n                  return (\r\n                    <ListGroupItem \r\n                    className={styles.listItem}\r\n                      key={item.id}\r\n                      onClick={() => history.push(`/news/${item.id}`)}\r\n                    >\r\n                      {item.short}\r\n                    </ListGroupItem>\r\n                  )\r\n                })\r\n              }\r\n            </ListGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      news: state.blog.news\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {getNewsThunk}) (News)","import React, { useEffect, useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button, Input } from 'reactstrap'\r\nimport { createNewsThunk } from '../../../redux/actions/blogActions'\r\n\r\nimport styles from './NewsCreation.module.scss'\r\n\r\n\r\n\r\nconst NewsCreation = ({createNewsThunk, }) => {\r\n    const [short, setShort] = useState('')\r\n    const [full, setFull] = useState('')\r\n    const [picture, setPicture] = useState('')\r\n    console.log(picture);\r\n\r\n    const fileInput = useRef()\r\n\r\n    useEffect(() => {\r\n        // getNewsDetailsThunk(match.params.id)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(fileInput.current.files[0]);\r\n        let ok = window.confirm('Вы действительно хотите создать новость?')\r\n        if (ok) {\r\n            console.log('ok');\r\n            // history.push('/news')\r\n            createNewsThunk({\r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.NewsCreation}>\r\n            <h1>Создание новости</h1>\r\n            <form onSubmit={onSubmit} >\r\n                <h3>Добавить картинку новости</h3>\r\n                <Input \r\n                    type='file' \r\n                    name='picture'\r\n                    innerRef={fileInput}\r\n                    onChange={() => setPicture(fileInput.current.files[0])}\r\n                />\r\n                <h3>Название новости (short)</h3>\r\n                <textarea \r\n                    name=\"short\" \r\n                    value={short}  \r\n                    onChange={(e) => setShort(e.target.value)}\r\n                    rows=\"3\">\r\n                </textarea>\r\n                <h3>Полный текст (full)</h3>\r\n                <textarea \r\n                    name=\"full\" \r\n                    value={full}  \r\n                    onChange={(e) => setFull(e.target.value)}\r\n                    rows=\"20\">\r\n                </textarea>\r\n                <Button \r\n                    color='success'\r\n                    disabled={!(short && full && picture)}\r\n                >\r\n                    Создать новость\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, {createNewsThunk})(NewsCreation)","import React, { useEffect, useState } from 'react'\r\nimport { useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem, Button, Input } from 'reactstrap'\r\nimport { deleteNewsThunk, getNewsDetailsThunk, updateNewsDetailsThunk } from '../../../redux/actions/blogActions'\r\n\r\nimport styles from './NewsDetails.module.scss'\r\n\r\nconst NewsDetails = ({\r\n    details, \r\n    getNewsDetailsThunk, \r\n    updateNewsDetailsThunk, \r\n    deleteNewsThunk,\r\n    history, \r\n    match, \r\n    ...props}) => {\r\n    const [short, setShort] = useState(details.short)\r\n    const [full, setFull] = useState(details.full)\r\n    const [picture, setPicture] = useState('')\r\n    console.log(picture);\r\n\r\n    const fileInput = useRef()\r\n\r\n    useEffect(() => {\r\n        getNewsDetailsThunk(match.params.id)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n    useEffect(() => {\r\n        setShort(details.short)\r\n        setFull(details.full)\r\n    }, [details])\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(fileInput.current.files[0]);\r\n        let ok = window.confirm('Вы действительно хотите обновить новость?')\r\n        if (ok) {\r\n            console.log('ok');\r\n            // history.push('/news')\r\n            updateNewsDetailsThunk({\r\n                id: details.id,\r\n                short,\r\n                full,\r\n                picture\r\n            })\r\n        }\r\n    }\r\n\r\n    return details && (\r\n        <div className={styles.NewsDetails}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/news' exact>Новости</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Детали новости</BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <h1>Детали новости</h1>\r\n            <form onSubmit={onSubmit} >\r\n                <h3>Обновить фото</h3>\r\n                <Input \r\n                    type='file' \r\n                    name='picture'\r\n                    innerRef={fileInput}\r\n                    onChange={() => setPicture(fileInput.current.files[0])}\r\n                />\r\n                <h3>Название новости (short)</h3>\r\n                <textarea \r\n                    name=\"short\" \r\n                    value={short}  \r\n                    onChange={(e) => setShort(e.target.value)}\r\n                    rows=\"3\">\r\n                </textarea>\r\n                <h3>Полный текст (full)</h3>\r\n                <textarea \r\n                    name=\"full\" \r\n                    value={full}  \r\n                    onChange={(e) => setFull(e.target.value)}\r\n                    rows=\"20\">\r\n                </textarea>\r\n                <Button \r\n                    color='success'\r\n                >\r\n                    Сохранить\r\n                </Button>\r\n            </form>\r\n            <Button \r\n                color='danger'\r\n                className='mt-3'\r\n                onClick={() => console.log('delete')}\r\n            >\r\n                Удалить новость\r\n            </Button>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        details: state.blog.details,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    getNewsDetailsThunk, \r\n    updateNewsDetailsThunk,\r\n    deleteNewsThunk,\r\n})(NewsDetails)","import myAxios from '../../configs/modified-axios'\r\nimport { makeRes } from '../../utils/utils'\r\nimport { SET_PARTNER_ACQUIRERS, SET_PARTNER_ACQUIRER_DETAILS, PARTNER_ACQUIRERS_LOADING, PARTNER_ACQUIRERS_FAILURE, PARTNER_ACQUIRERS_SUCCESS } from './actionTypes'\r\n\r\n\r\nexport const createPartnerAcquirerThunk = (inputData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n\r\n      const res = await myAxios.post(`/api/admin/add_partner_acquirer`, inputData)\r\n\r\n      console.log(res);\r\n      \r\n      if (res.status === 200 && res.data.result) {\r\n          dispatch(alertPartnerAcquirersSuccess({create: 'Банк мерчанта добавлен успешно'}))\r\n          return makeRes(true, 'Банк мерчанта добавлен успешно')\r\n        } else {\r\n          dispatch(alertPartnerAcquirersFailure({ create: res.data.errors }))\r\n          return makeRes(false, res.data.errors)\r\n        } \r\n    } catch (error) {\r\n      console.log(error.message);\r\n      dispatch(alertPartnerAcquirersFailure({create: [error.message]}))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n} \r\n\r\nexport const getPartnerAcquirersThunk = (filterData={}) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_partners_acquirers`, filterData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(getPartnerAcquirersSuccess( res.data.result['partners_acquirers']))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertPartnerAcquirersFailure({ partnerAcquirers: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertPartnerAcquirersFailure({ partnerAcquirers: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const getPartnerAcquirerDetailsThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_partners_acquirers_by_uuids`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setPartnerAcquirerDetails( res.data.result['partners_acquirers'][0]))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertPartnerAcquirersFailure({ details: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertPartnerAcquirersFailure({ details: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const updatePartnerAcquirerThunk = (partnerData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/update_partner_acquirer`, partnerData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertPartnerAcquirersSuccess({update: 'информация о банке мерчанта успешно обновлена'}))\r\n        return makeRes(true, 'информация о банке мерчанта успешно обновлена')\r\n      } else {\r\n        dispatch(alertPartnerAcquirersFailure({ update: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertPartnerAcquirersFailure({ update: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const deletePartnerAcquirersThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/delete_partners_acquirers`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertPartnerAcquirersSuccess({delete: 'Банк мерчанта успешно удалён'}))\r\n        return makeRes(true, 'Банк мерчанта успешно удалён')\r\n      } else {\r\n        dispatch(alertPartnerAcquirersFailure({ delete: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertPartnerAcquirersFailure({ delete: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const setPartnerAcquirersLoading = (status) => {\r\n  return {\r\n    type: PARTNER_ACQUIRERS_LOADING,\r\n    status\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const getPartnerAcquirersSuccess = (partnerAcquirers) => {\r\n  return {\r\n    type: SET_PARTNER_ACQUIRERS,\r\n    partnerAcquirers\r\n  }\r\n}\r\n\r\nexport const setPartnerAcquirerDetails = (details) => {\r\n  return {\r\n    type: SET_PARTNER_ACQUIRER_DETAILS,\r\n    details\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const alertPartnerAcquirersFailure = (errors) => {\r\n  return {\r\n    type: PARTNER_ACQUIRERS_FAILURE,\r\n    errors\r\n  }\r\n}\r\nexport const alertPartnerAcquirersSuccess = (message) => {\r\n  return {\r\n    type: PARTNER_ACQUIRERS_SUCCESS,\r\n    message\r\n  }\r\n}\r\n\r\n\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { NavLink, useHistory, useParams } from 'react-router-dom'\r\nimport MyTableForm from '../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../hooks/useFormValiation'\r\n\r\nimport styles from './PartnerAcquierers.module.scss'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport TableMultiselect from '../../components/UI/MyTable/TableMultiselect/TableMultiselect'\r\nimport { connect } from 'react-redux'\r\nimport { getPartnerAcquirersThunk } from '../../redux/actions/partnerAcquirersActions'\r\nimport MyButton from '../../components/UI/MyButton/MyButton'\r\nimport StatusTD from '../../components/UI/MyTable/StatusTD/StatusTD'\r\nimport { getTrimmedValues } from '../../utils/utils'\r\nimport { activeOptions, cardBrandsOptions } from '../../utils/constants'\r\nimport { getAcquirersThunk } from '../../redux/actions/acquirerActions'\r\nimport SuccessAlert from '../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../hooks/useAlert'\r\nimport ClickableTH from '../../components/UI/MyTable/ClickableTH/ClickableTH'\r\nimport HoverTable from '../../components/UI/MyTable/HoverTable/HoverTable'\r\n\r\nconst PartnerAcquierers = ({\r\n    className, getPartnerAcquirersThunk, partnerAcquirers=[],\r\n    acquirers, getAcquirersThunk,\r\n    ...props}) => {\r\n\r\n    const {partnerId} = useParams()\r\n    const history = useHistory()\r\n\r\n    const activeRef = useRef()\r\n\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n        failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n    \r\n\r\n    const {values, handleChange, errors, setValues, isValid } = useFormAndValidation()\r\n   \r\n    const onSingleSelect = (selectedList, {jsonKey, value}) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [jsonKey]: value\r\n        })\r\n    }\r\n    // const onBankSelect = (selectedList, selectedItem) => {\r\n    //     console.log(selectedList);\r\n    //     setValues({\r\n    //         ...values,\r\n    //         acquirer_uuid: selectedItem.uuid\r\n    //     })\r\n    // }\r\n    const onMultiSelect = (selectedList, selectedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [selectedItem.jsonKey]: selectedList.map(i => i.value)\r\n        })\r\n    }\r\n\r\n    const [order, setOrder] = useState(true)\r\n\r\n    const changeOrder = (field) => {\r\n      setOrder(!order)\r\n      let filterData = getTrimmedValues(values)\r\n\r\n      if (filterData.priority_to) {\r\n          filterData.priority_to = Number(filterData.priority_to)\r\n      }\r\n      if (filterData.priority_from) {\r\n          filterData.priority_from = Number(filterData.priority_from)\r\n      }\r\n\r\n      if (filterData.card_brands) {\r\n          if (filterData.card_brands.length === 0) {\r\n              const {card_brands, ...rest} = filterData\r\n              filterData = rest\r\n          }\r\n      }\r\n  \r\n      const sortedData = {\r\n          ...filterData,\r\n          \"sort_by\": [\r\n              {\r\n                field,\r\n                order: order? 'asc' : 'desc'\r\n              }\r\n          ]\r\n      }\r\n      \r\n      getPartnerAcquirersThunk({\r\n        ...sortedData,\r\n        partner_uuid: partnerId\r\n     })\r\n     .then(checkRes(false))\r\n  \r\n  }\r\n\r\n    const onRemove = (selectedList, removedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [removedItem.jsonKey]: selectedList.map(i => i.value)\r\n        })\r\n    }\r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        let filterData = getTrimmedValues(values)\r\n\r\n        if (filterData.priority_to) {\r\n            filterData.priority_to = Number(filterData.priority_to)\r\n        }\r\n        if (filterData.priority_from) {\r\n            filterData.priority_from = Number(filterData.priority_from)\r\n        }\r\n\r\n        if (filterData.card_brands) {\r\n            if (filterData.card_brands.length === 0) {\r\n                const {card_brands, ...rest} = filterData\r\n                filterData = rest\r\n            }\r\n        }\r\n\r\n        getPartnerAcquirersThunk({\r\n            ...filterData,\r\n            partner_uuid: partnerId\r\n        })\r\n        .then(checkRes(false))\r\n\r\n        console.log(filterData);\r\n      }\r\n    const cls = [\r\n        styles.PartnerAcquierers,\r\n        className\r\n    ]\r\n\r\n\r\n    useEffect(() => {\r\n        getAcquirersThunk()\r\n        .then(checkRes(false))\r\n        .catch((err) => console.log(err))\r\n    // eslint-disable-next-line\r\n      }, [])\r\n\r\n    useEffect(() => {\r\n        getPartnerAcquirersThunk({\r\n            partner_uuid: partnerId\r\n        })\r\n        .then(checkRes(false))\r\n        .catch((err) => console.log(err))\r\n        // eslint-disable-next-line \r\n      }, [])\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список мерчантов</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners/${partnerId}`} exact>Детали мерчанта</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Список банков мерчанта</BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <center><h1>Список банков мерчанта</h1></center>\r\n\r\n            <MyTableForm\r\n                 onSubmit={onSubmit}\r\n                isValid={isValid}\r\n                buttonText='Найти'\r\n            >\r\n\r\n                <TableMultiselect\r\n                    label='Aктивен'\r\n                    options={activeOptions}\r\n                    displayValue=\"name\"\r\n                    onSelect={onSingleSelect}\r\n                    onRemove={onRemove}\r\n                    placeholder='Выберите'\r\n                    singleSelect\r\n                    multiRef={activeRef}\r\n                />\r\n                <TableMultiselect\r\n                    label='Бренды карт'\r\n                    options={cardBrandsOptions}\r\n                    displayValue=\"name\"\r\n                    onSelect={onMultiSelect}\r\n                    onRemove={onRemove}\r\n                    placeholder='Выберите'\r\n                />\r\n                 <TableInput\r\n                        type='number'\r\n                        name='priority_from'\r\n                        label='Приоритет от'\r\n                        onChange={handleChange}\r\n                        value={values.priority_from}\r\n                        errorText={errors.priority_from}\r\n                        style={{\r\n                            width: `140px`\r\n                        }}\r\n                        min={1}\r\n                        max={100}\r\n                    />\r\n                 <TableInput\r\n                        type='number'\r\n                        name='priority_to'\r\n                        label='Приоритет до'\r\n                        onChange={handleChange}\r\n                        value={values.priority_to}\r\n                        errorText={errors.priority_to}\r\n                        style={{\r\n                            width: `140px`\r\n                        }}\r\n                        min={1}\r\n                        max={100}\r\n                    />\r\n\r\n            </MyTableForm>\r\n\r\n            <HoverTable>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Банк</th>\r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('active')}\r\n                            label='Cтатус'\r\n                        />\r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('priority')}\r\n                            label='Приоритет'\r\n                        />\r\n                        {/* <th>Приоритет</th> */}\r\n                        <th>Карты</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                   \r\n                    {\r\n                        partnerAcquirers && partnerAcquirers.map((item) => {\r\n                            const bank = acquirers?.find((bank) => {\r\n                                    return bank.uuid === item.acquirer_uuid\r\n                                })\r\n\r\n                            return (\r\n                                <tr \r\n                                    key={item.uuid} \r\n                                    onClick={() => history.push(`/partners-acquirers/${partnerId}/${item.uuid}`)}\r\n                                >\r\n                                    <td>{bank?.name}</td>\r\n                                    <StatusTD\r\n                                        active={item.active}\r\n                                    />\r\n                                    <td>{item.priority}</td>\r\n                                    <td>{item.card_brands.join(' ').toUpperCase()}</td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                    \r\n                </tbody>\r\n            </HoverTable>\r\n            {/* <Link to={`/add-partner-acquirer/${partnerId}`} >добавить банк</Link> */}\r\n\r\n            <MyButton\r\n                color={'primary'}\r\n                onClick={() => history.push(`/add-partner-acquirer/${partnerId}`)}\r\n                buttonText='добавить банк'\r\n            />\r\n\r\n                <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        partnerAcquirers: state.partnerAcquirers.partnerAcquirers,\r\n        acquirers: state.acquirers.acquirers,\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    getPartnerAcquirersThunk, getAcquirersThunk,\r\n})(PartnerAcquierers)","import React, { useState, useEffect } from 'react'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport TableMultiselect from '../../../components/UI/MyTable/TableMultiselect/TableMultiselect'\r\n\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport { getAcquirersThunk } from '../../../redux/actions/acquirerActions'\r\nimport { activeOptions, cardBrandsOptions, } from '../../../utils/constants'\r\nimport { createPartnerAcquirerThunk } from '../../../redux/actions/partnerAcquirersActions'\r\n\r\n\r\nimport styles from './PartnerAcquierersAddition.module.scss'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\n\r\nconst PartnerAcquierersAddition = ({\r\n    className, acquirers, getAcquirersThunk, createPartnerAcquirerThunk,\r\n\r\n    ...props}) => {\r\n\r\n    const { partnerId } = useParams()\r\n    const history = useHistory()\r\n\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n        failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n    \r\n\r\n    const {values, handleChange, errors, isValid, setValues } = useFormAndValidation()\r\n\r\n    const [bankOptions, setBankOptions] = useState([{name: 'Загружаются данные...', avtive: true}])\r\n\r\n    const onSingleSelect = (selectedList, {jsonKey, value}) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [jsonKey]: value\r\n        })\r\n    }\r\n    const onBankSelect = (selectedList, selectedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            acquirer_uuid: selectedItem.uuid\r\n        })\r\n    }\r\n    const onMultiSelect = (selectedList, selectedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [selectedItem.jsonKey]: selectedList.map(i => i.value)\r\n        })\r\n    }\r\n\r\n    const onRemove = (selectedList, removedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [removedItem.jsonKey]: selectedList.map(i => i.value)\r\n        })\r\n    }\r\n\r\n   \r\n    \r\n    useEffect(() => {\r\n        getAcquirersThunk()\r\n        .then(checkRes(false))\r\n        // eslint-disable-next-line\r\n    }, [])\r\n    useEffect(() => {\r\n        if (acquirers) {\r\n            setBankOptions(acquirers)\r\n        }\r\n    }, [acquirers])\r\n\r\n    // useEffect(() => {\r\n    //     setIsValid(false)\r\n    //     // eslint-disable-next-line\r\n    // }, [])\r\n\r\n    const cls = [\r\n        styles.PartnerAcquierersAddition,\r\n        className\r\n    ]\r\n    \r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        const partnerBankData = {\r\n            ...values,\r\n            partner_uuid: partnerId\r\n        }\r\n        if (partnerBankData.priority) {\r\n            partnerBankData.priority = Number(partnerBankData.priority)\r\n        }\r\n        console.log(partnerBankData);\r\n\r\n        createPartnerAcquirerThunk(partnerBankData)\r\n        .then((res) => {\r\n            checkRes()(res)\r\n            return res\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  setTimeout(() => {\r\n                    history.goBack()\r\n                  }, 1000)\r\n              }\r\n          })\r\n          .then(() => console.log('createPartnerAcquirerThunk'))\r\n          .catch((err) => console.log(err))\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список мерчантов</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners/${partnerId}`} exact>Детали мерчанта</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners-acquirers/${partnerId}`} exact>Список банков мерчанта</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Детали банка</BreadcrumbItem>\r\n        </Breadcrumb>\r\n             <center><h1>Добавление банка мерчанта</h1></center>\r\n            <MyTableForm\r\n                onSubmit={onSubmit}\r\n                isValid={isValid}\r\n            >\r\n                    <TableMultiselect\r\n                        label='Банк'\r\n                        options={bankOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onBankSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                    />\r\n                     <TableMultiselect\r\n                        label='Aктивен'\r\n                        options={activeOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onSingleSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                    />\r\n                    <TableMultiselect\r\n                        label='Карточные бренды'\r\n                        options={cardBrandsOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onMultiSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                    />\r\n                    <TableInput\r\n                        type='number'\r\n                        name='priority'\r\n                        label='Приоритет'\r\n                        onChange={handleChange}\r\n                        value={values.priority || 10}\r\n                        errorText={errors.priority}\r\n                        min={1}\r\n                        max={100}\r\n                    />\r\n                    \r\n            </MyTableForm>\r\n\r\n            \r\n            <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        acquirers: state.acquirers.acquirers,\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n     getAcquirersThunk, createPartnerAcquirerThunk, \r\n    })(PartnerAcquierersAddition)","import React, { useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport { deletePartnerAcquirersThunk, getPartnerAcquirerDetailsThunk, setPartnerAcquirerDetails } from '../../../redux/actions/partnerAcquirersActions'\r\n\r\n\r\nimport styles from './PartnerAcquierersDetails.module.scss'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport DetailsTableRow from '../../../components/UI/MyTable/DetailsTableRow/DetailsTableRow'\r\nimport MyButton from '../../../components/UI/MyButton/MyButton'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport FlexBlock from '../../../components/Blocks/FlexBlock/FlexBlock'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\n\r\nconst PartnerAcquierersDetails = ({\r\n  className, details, getPartnerAcquirerDetailsThunk, deletePartnerAcquirersThunk,\r\n  setPartnerAcquirerDetails, \r\n  ...props}) => {\r\n\r\n  const {partnerId, id} = useParams()\r\n  const history = useHistory()\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    getPartnerAcquirerDetailsThunk([id])\r\n    .then(checkRes(false))\r\n\r\n    return () => {\r\n      setPartnerAcquirerDetails({\r\n        uuid: '',\r\n        acquirer_uuid: '',\r\n        active: '',\r\n        card_brands: [],\r\n        partner_uuid: '',\r\n        priority: '',\r\n        })\r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n  const onDelete = () => {\r\n    const confirmed = window.confirm(\"Вы точно хотите удалить?\");\r\n    if (confirmed) {\r\n      deletePartnerAcquirersThunk([id])\r\n      .then((res) => {\r\n        checkRes()(res)\r\n        return res\r\n      })\r\n      .then(res => {\r\n          if (res.ok) {\r\n              setTimeout(() => {\r\n                history.goBack()\r\n              }, 1000)\r\n          }\r\n      })\r\n      .then(() => {\r\n        console.log('deletePartnerAcquirersThunk');\r\n      })\r\n      .catch((err) => console.log(err))\r\n    }\r\n  }\r\n\r\n    const cls = [\r\n        styles.PartnerAcquierersDetails,\r\n        className\r\n    ]\r\n    if (!details) {\r\n      return <h1>нет такого банка мерчанта</h1>\r\n    }\r\n\r\n    if (!details.uuid) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список мерчантов</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners/${partnerId}`} exact>Детали мерчанта</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners-acquirers/${partnerId}`} exact>Список банков мерчанта</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Детали банка</BreadcrumbItem>\r\n        </Breadcrumb>\r\n             <center><h1>Информация о банке мерчанта</h1></center>\r\n            <MyTable>\r\n              <DetailsTableRow\r\n                  label='uuid'\r\n                  data={details.uuid}\r\n              />\r\n              <DetailsTableRow\r\n                  label='Банк'\r\n                  data={details.acquirer_uuid}\r\n              />\r\n              <DetailsTableRow\r\n                  label='Статус'\r\n                  data={(details.active && 'активен') || 'неактивен'}\r\n              />\r\n              <DetailsTableRow\r\n                  label='Приоритет'\r\n                  data={details.priority}\r\n              />\r\n              <DetailsTableRow\r\n                  label='Бренды карт'\r\n                  data={details.card_brands.join(' ').toUpperCase()}\r\n              />\r\n\r\n        </MyTable>\r\n\r\n        <FlexBlock>\r\n              <MyButton\r\n                    color={'secondary'}\r\n                    onClick={() => history.push(`/partners-acquirers/${partnerId}/${id}/update`)}\r\n                    buttonText='редактировать'\r\n                />\r\n                <MyButton\r\n                    color={'danger'}\r\n                    onClick={onDelete}\r\n                    buttonText='удалить'\r\n                />\r\n        </FlexBlock>\r\n\r\n                  <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    details: state.partnerAcquirers.details,\r\n  }\r\n  }\r\n  \r\n\r\nexport default connect(mapStateToProps, {\r\n  getPartnerAcquirerDetailsThunk, deletePartnerAcquirersThunk, setPartnerAcquirerDetails\r\n})(PartnerAcquierersDetails)","import React, { useState, useEffect } from 'react'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport TableMultiselect from '../../../components/UI/MyTable/TableMultiselect/TableMultiselect'\r\n\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport { getAcquirersThunk } from '../../../redux/actions/acquirerActions'\r\nimport { activeOptions, cardBrandsOptions, } from '../../../utils/constants'\r\nimport { getPartnerAcquirerDetailsThunk, setPartnerAcquirerDetails, updatePartnerAcquirerThunk } from '../../../redux/actions/partnerAcquirersActions'\r\n\r\n\r\nimport styles from './PartnerAcquierersUpdate.module.scss'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\n\r\nconst PartnerAcquierersUpdate = ({\r\n  className, acquirers, getAcquirersThunk, getPartnerAcquirerDetailsThunk,\r\n  details, updatePartnerAcquirerThunk, setPartnerAcquirerDetails, \r\n  ...props}) => {\r\n\r\n  const { partnerId, id } = useParams()\r\n  const history = useHistory()\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n\r\n\r\n  const {values, handleChange, errors, isValid, setValues } = useFormAndValidation()\r\n  const [bankOptions, setBankOptions] = useState([{name: 'Загружаются данные...', avtive: true}])\r\n  const [bankPreselect, setBankPreselect] = useState([{name: 'загружается...'}])\r\n  const [activePreselect, setActivePreselect] = useState([{name: 'загружается...'}])\r\n  const [cardBrandsPreselect, setCardBrandsPreselect] = useState([{name: 'загружается...'}])\r\n \r\n  const onSingleSelect = (selectedList, {jsonKey, value}) => {\r\n    console.log(selectedList);\r\n    setValues({\r\n            ...values,\r\n            [jsonKey]: value\r\n        })\r\n    }\r\n    const onBankSelect = (selectedList, selectedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            acquirer_uuid: selectedItem.uuid\r\n        })\r\n    }\r\n    const onMultiSelect = (selectedList, selectedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [selectedItem.jsonKey]: selectedList.map(i => i.value)\r\n        })\r\n    }\r\n\r\n    const onRemove = (selectedList, removedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [removedItem.jsonKey]: selectedList.map(i => i.value)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n\r\n      getPartnerAcquirerDetailsThunk([id])\r\n  \r\n      return () => {\r\n        setPartnerAcquirerDetails({\r\n          uuid: '',\r\n          acquirer_uuid: '',\r\n          active: '',\r\n          card_brands: [],\r\n          partner_uuid: '',\r\n          priority: '',\r\n          })\r\n      }\r\n      // eslint-disable-next-line \r\n    }, [])\r\n    useEffect(() => {\r\n      getAcquirersThunk()\r\n      // eslint-disable-next-line\r\n  }, [])\r\n  useEffect(() => {\r\n      if (acquirers) {\r\n          setBankOptions(acquirers)\r\n      }\r\n  }, [acquirers])\r\n\r\n  useEffect(() => {\r\n    setValues(details)\r\n    // eslint-disable-next-line\r\n  }, [details])\r\n\r\n  useEffect(() => {\r\n    if (details && acquirers) {\r\n  \r\n      const preselectedBank = [...acquirers].find(i => i.uuid === details.acquirer_uuid)\r\n      if (preselectedBank?.name) {\r\n        setBankPreselect([preselectedBank])\r\n      }\r\n  \r\n      const isActive = activeOptions.find(i => i.value === details.active)\r\n  \r\n      if (isActive) {\r\n        setActivePreselect([isActive])\r\n      }\r\n\r\n      const preselectedCardBrands = cardBrandsOptions.filter(i => {\r\n        return details.card_brands.includes(i.value)\r\n      })\r\n\r\n      if (preselectedCardBrands.length) {\r\n        setCardBrandsPreselect(preselectedCardBrands)\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [details, acquirers])\r\n\r\n    const cls = [\r\n        styles.PartnerAcquierersUpdate,\r\n        className\r\n    ]\r\n\r\n    const onSubmit = (evt) => {\r\n      evt.preventDefault()\r\n      const partnerBankData = {\r\n          ...values,\r\n          // partner_uuid: partnerId\r\n      }\r\n      if (partnerBankData.priority) {\r\n          partnerBankData.priority = Number(partnerBankData.priority)\r\n      }\r\n      console.log(partnerBankData);\r\n\r\n      updatePartnerAcquirerThunk(partnerBankData)\r\n      .then(checkRes())\r\n      .then(res => {\r\n        if (res.ok) {\r\n            setTimeout(() => {\r\n              history.goBack()\r\n            }, 1000)\r\n        }\r\n    })\r\n      .then(() => console.log('updatePartnerAcquirerThunk'))\r\n\r\n  }\r\n\r\n  if (!details) {\r\n    return <h1>нет такого банка мерчанта</h1>\r\n  }\r\n\r\n  if (!details.uuid) {\r\n      return <Spinner/>\r\n  }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список мерчантов</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners/${partnerId}`} exact>Детали мерчанта</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners-acquirers/${partnerId}`} exact>Список банков мерчанта</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners-acquirers/${partnerId}/${id}`} exact>Детали банка</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Редактирование банка</BreadcrumbItem>\r\n        </Breadcrumb>\r\n              <center><h1>Редактирование банка мерчанта</h1></center>\r\n            <MyTableForm\r\n                onSubmit={onSubmit}\r\n                isValid={isValid}\r\n                buttonText='Обновить'\r\n            >\r\n                    <TableMultiselect\r\n                        label='Банк'\r\n                        options={bankOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onBankSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                        selectedValues={bankPreselect}\r\n                    />\r\n                     <TableMultiselect\r\n                        label='Aктивен'\r\n                        options={activeOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onSingleSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                        selectedValues={activePreselect}\r\n                    />\r\n                    <TableMultiselect\r\n                        label='Карточные бренды'\r\n                        options={cardBrandsOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onMultiSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        selectedValues={cardBrandsPreselect}\r\n                        \r\n                    />\r\n                    <TableInput\r\n                        type='number'\r\n                        name='priority'\r\n                        label='Приоритет'\r\n                        onChange={handleChange}\r\n                        value={values.priority || 10}\r\n                        errorText={errors.priority}\r\n                        min={1}\r\n                        max={100}\r\n                    />\r\n                    \r\n            </MyTableForm>\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      acquirers: state.acquirers.acquirers,\r\n      details: state.partnerAcquirers.details,\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n  getAcquirersThunk, getPartnerAcquirerDetailsThunk, updatePartnerAcquirerThunk,\r\n  setPartnerAcquirerDetails,\r\n})(PartnerAcquierersUpdate)","import myAxios from '../../configs/modified-axios'\r\nimport { makeRes } from '../../utils/utils'\r\nimport { SET_PARTNERS, SET_PARTNER_DETAILS, PARTNERS_LOADING, PARTNERS_FAILURE, PARTNERS_SUCCESS } from './actionTypes'\r\n\r\n\r\nexport const createPartnerThunk = (inputData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n\r\n      const res = await myAxios.post(`/api/admin/add_partner`, inputData)\r\n\r\n      console.log(res);\r\n      \r\n      if (res.status === 200 && res.data.result) {\r\n          dispatch(alertPartnersSuccess({create: 'Партрнёр добавлен успешно'}))\r\n          return makeRes(true, 'Партрнёр добавлен успешно', res.data.result)\r\n        } else {\r\n          dispatch(alertPartnersFailure({ create: res.data.errors }))\r\n          return makeRes(false, res.data.errors)\r\n        } \r\n    } catch (error) {\r\n      console.log(error.message);\r\n      dispatch(alertPartnersFailure({create: [error.message]}))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n} \r\n\r\n\r\n\r\nexport const getPartnersThunk = (filterData={}) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_partners`, filterData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(getPartnersSuccess( res.data.result.partners))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertPartnersFailure({ partners: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertPartnersFailure({ partners: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const getPartnerDetailsThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_partners_by_uuids`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setPartnerDetails( res.data.result.partners[0]))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertPartnersFailure({ details: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertPartnersFailure({ details: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const updatePartnerThunk = (partnerData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/update_partner`, partnerData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertPartnersSuccess({update: 'информация о мерчанте успешно обновлена'}))\r\n        return makeRes(true, 'информация о мерчанте успешно обновлена', res.data.result)\r\n      } else {\r\n        dispatch(alertPartnersFailure({ update: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertPartnersFailure({ update: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const deletePartnersThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/delete_partners`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertPartnersSuccess({delete: 'мерчант успешно удалён'}))\r\n        return makeRes(true, 'мерчант успешно удалён')\r\n      } else {\r\n        dispatch(alertPartnersFailure({ delete: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertPartnersFailure({ delete: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const setPartnersLoading = (status) => {\r\n  return {\r\n    type: PARTNERS_LOADING,\r\n    status\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const getPartnersSuccess = (partners) => {\r\n  return {\r\n    type: SET_PARTNERS,\r\n    partners\r\n  }\r\n}\r\n\r\nexport const setPartnerDetails = (details) => {\r\n  return {\r\n    type: SET_PARTNER_DETAILS,\r\n    details\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const alertPartnersFailure = (errors) => {\r\n  return {\r\n    type: PARTNERS_FAILURE,\r\n    errors\r\n  }\r\n}\r\nexport const alertPartnersSuccess = (message) => {\r\n  return {\r\n    type: PARTNERS_SUCCESS,\r\n    message\r\n  }\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport DivTableRow from '../../DivTable/DivTableRow/DivTableRow'\r\nimport DivTableTD from '../../DivTable/DivTableTD/DivTableTD'\r\nimport DivTableTH from '../../DivTable/DivTableTH/DivTableTH'\r\n\r\nimport styles from './TableTextArea.module.scss'\r\n\r\nconst TableTextArea = ({className, label, ...props}) => {\r\n\r\n  const [inputId, setInputId] = useState('')\r\n\r\n  useEffect(() => {\r\n    setInputId(`${String(Math.random()).slice(2)}`)\r\n  }, [])\r\n\r\n    const cls = [\r\n        styles.TableTextArea,\r\n        className\r\n    ]\r\n\r\n    return (\r\n      <DivTableRow className={cls.join(' ')}>\r\n          <DivTableTH\r\n             className={styles.DivTableTH}\r\n          >\r\n            <label htmlFor={inputId}>{label}</label>\r\n          </DivTableTH>\r\n          <DivTableTD\r\n            className={styles.DivTableTD}\r\n          >\r\n              <textarea \r\n                  id={inputId} \r\n                  {...props}\r\n                  >\r\n              </textarea>\r\n          </DivTableTD>\r\n    </DivTableRow>\r\n    )\r\n}\r\n\r\nexport default TableTextArea","import React, { useEffect } from 'react'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport styles from './PartnerAddition.module.scss'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { connect } from 'react-redux'\r\nimport { createPartnerThunk } from '../../../redux/actions/partnerActions'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport TableTextArea from '../../../components/UI/MyTable/TableTextArea/TableTextArea'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\n\r\n\r\nconst PartnerAddition = ({className, createPartnerThunk, ...props}) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const {values, handleChange, errors, isValid, setValues, setIsValid } = useFormAndValidation()\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n        failureAlertVisible, setFailureAlertVisible, failureMessage,\r\n        checkRes} = useAlert()\r\n   \r\n        const cls = [\r\n        styles.PartnerAddition,\r\n        className\r\n    ]\r\n\r\n    useEffect(() => {\r\n        setIsValid(false)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const handleContactsChange = (evt) => {\r\n        const {name, value} = evt.target\r\n        let contacts = {};\r\n        if (values.contacts) {\r\n          contacts = {\r\n            ...values.contacts,\r\n            [name]: value\r\n          }\r\n        } else {\r\n          contacts = {\r\n            [name]: value\r\n          }\r\n        }\r\n        setValues({\r\n          ...values,\r\n          contacts\r\n        })\r\n        setIsValid(evt.target.closest('form').checkValidity());\r\n      }\r\n\r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        console.log(values);\r\n        createPartnerThunk(values)\r\n        .then((res) => {\r\n            checkRes()(res)\r\n            if (res.ok) {\r\n                setTimeout(() => {\r\n                    history.push(`/partners/${res.data?.uuid}`)\r\n                }, 1000)\r\n            }\r\n        })\r\n        .catch((err) => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n          <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Мерчанты</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Добавление мерчанта </BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <center><h1>Добавить мерчанта</h1></center>\r\n                <MyTableForm \r\n                    className={styles.MyTable} \r\n                    onSubmit={onSubmit}\r\n                    isValid={isValid}\r\n                >\r\n                    <TableInput\r\n                         name='inn'\r\n                        label='ИНН'\r\n                        onChange={handleChange}\r\n                        value={values.inn}\r\n                        errorText={errors.inn}\r\n                        minLength={10}\r\n                        maxLength={12}\r\n                        title='ИНН состоит из 10-12 цифр'\r\n                        DivTableTDcls={styles.DivTableTDcls}\r\n                    />\r\n                    <TableInput\r\n                         name='name'\r\n                         label='Наименование'\r\n                        required={true}\r\n                        onChange={handleChange}\r\n                        value={values.name}\r\n                        errorText={errors.name}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                        title='максимум 199 символов'\r\n                    />\r\n                    <TableInput\r\n                         name='email'\r\n                         label='Email'\r\n                         type='email'\r\n                        required={true}\r\n                        onChange={handleChange}\r\n                        value={values.email}\r\n                        errorText={errors.email}\r\n                        minLength={4}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                         name='contact_name'\r\n                         label='ФИО контактного лица'\r\n                        onChange={handleContactsChange}\r\n                        value={values.contacts?.contact_name}\r\n                        errorText={errors.contacts?.contact_name}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                         name='contact_person_position'\r\n                         label='Должность контактного лица'\r\n                        onChange={handleContactsChange}\r\n                        value={values.contacts?.contact_person_position}\r\n                        errorText={errors.contacts?.contact_person_position}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                         name='contact_email'\r\n                         label='E-mail контактного лица'\r\n                        onChange={handleContactsChange}\r\n                        value={values.contacts?.contact_email}\r\n                        errorText={errors.contacts?.contact_email}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                         name='contact_phone'\r\n                         label='Телефон контактного лица'\r\n                        onChange={handleContactsChange}\r\n                        value={values.contacts?.contact_phone}\r\n                        errorText={errors.contacts?.contact_phone}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                   <TableTextArea\r\n                        name='other_contact_info'\r\n                        label='Дополнительные данные'\r\n                        rows=\"5\"\r\n                        onChange={handleContactsChange}\r\n                        value={values.contacts?.other_contact_info}\r\n                    />\r\n                    \r\n                </MyTableForm>\r\n\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n            <FailureAlert\r\n                visible={failureAlertVisible}\r\n                setVisible={setFailureAlertVisible}\r\n                message={failureMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n\r\n//     }\r\n// }\r\n\r\n\r\n\r\nexport default connect(null, { createPartnerThunk })(PartnerAddition)","import myAxios from '../../configs/modified-axios'\r\nimport { makeRes } from '../../utils/utils';\r\nimport { SHOPS_FAILURE, SHOPS_LOADING, SHOPS_SUCCESS, SET_SHOPS, SET_SHOP_DETAILS } from './actionTypes';\r\n\r\n\r\nexport const createShopThunk = (inputData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n\r\n      const res = await myAxios.post(`/api/admin/add_store`, inputData)\r\n\r\n      console.log(res);\r\n      \r\n      if (res.status === 200 && res.data.result) {\r\n          dispatch(alertShopsSuccess({create: 'Магазин добавлен успешно'}))\r\n          return makeRes(true, 'Магазин добавлен успешно')\r\n        } else {\r\n          dispatch(alertShopsFailure({ create: res.data.errors }))\r\n          return makeRes(false, res.data.errors)\r\n        } \r\n    } catch (error) {\r\n      console.log(error.message);\r\n      dispatch(alertShopsFailure({create: [error.message]}))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n} \r\n\r\nexport const getShopsThunk = (filterData={}) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_stores`, filterData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(getShopsSuccess( res.data.result.stores))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertShopsFailure({ stores: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertShopsFailure({ stores: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    \r\n    }\r\n  }\r\n}\r\n\r\nexport const getShopDetailsThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_stores_by_uuids`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setShopDetails( res.data.result.stores[0]))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertShopsFailure({ details: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertShopsFailure({ details: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateShopThunk = (shopData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/update_store`, shopData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertShopsSuccess({update: 'информация о магазине успешно обновлена'}))\r\n        return makeRes(true, 'информация о магазине успешно обновлена', res.data.result)\r\n      } else {\r\n        dispatch(alertShopsFailure({ update: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertShopsFailure({ update: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const deleteShopsThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/delete_stores`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertShopsSuccess({delete: 'Магазин успешно удалён'}))\r\n        return makeRes(true, 'Магазин успешно удалён')\r\n      } else {\r\n        dispatch(alertShopsFailure({ delete: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertShopsFailure({ delete: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const setShopsLoading = (status) => {\r\n  return {\r\n    type: SHOPS_LOADING,\r\n    status\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const getShopsSuccess = (shops) => {\r\n  return {\r\n    type: SET_SHOPS,\r\n    shops\r\n  }\r\n}\r\n\r\nexport const setShopDetails = (details) => {\r\n  return {\r\n    type: SET_SHOP_DETAILS,\r\n    details\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const alertShopsFailure = (errors) => {\r\n  return {\r\n    type: SHOPS_FAILURE,\r\n    errors\r\n  }\r\n}\r\nexport const alertShopsSuccess = (message) => {\r\n  return {\r\n    type: SHOPS_SUCCESS,\r\n    message\r\n  }\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport { deletePartnersThunk, getPartnerDetailsThunk, setPartnerDetails, updatePartnerThunk } from '../../../redux/actions/partnerActions'\r\n\r\nimport styles from './PartnerDetails.module.scss'\r\nimport { getShopsThunk } from '../../../redux/actions/shopActions'\r\nimport DetailsTableRow from '../../../components/UI/MyTable/DetailsTableRow/DetailsTableRow'\r\nimport MyButton from '../../../components/UI/MyButton/MyButton'\r\nimport { NavLink } from 'react-router-dom'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport FlexBlock from '../../../components/Blocks/FlexBlock/FlexBlock'\r\nimport { getTrimmedValues } from '../../../utils/utils'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport ClickableTH from '../../../components/UI/MyTable/ClickableTH/ClickableTH'\r\nimport TableNotFound from '../../../components/UI/MyTable/TableNotFound/TableNotFound'\r\nimport HoverTable from '../../../components/UI/MyTable/HoverTable/HoverTable'\r\nimport StatusTD from '../../../components/UI/MyTable/StatusTD/StatusTD'\r\nimport MyCollapse from '../../../components/UI/MyCollapse/MyCollapse'\r\n\r\n\r\n\r\nconst PartnerDetails = ({\r\n    className, details, getPartnerDetailsThunk, setPartnerDetails, deletePartnersThunk,\r\n    getShopsThunk, shops, updatePartnerThunk,\r\n     ...props}) => {\r\n\r\n  const {id} = useParams()\r\n  const history = useHistory()\r\n\r\n  const {values, handleChange, errors, isValid, resetForm} = useFormAndValidation()\r\n\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n\r\n  const [order, setOrder] = useState(true)\r\n  const [sortField, setSortField] = useState('')\r\n\r\n  const changeOrder = (field) => {\r\n    setOrder(!order)\r\n    setSortField(field)\r\n\r\n    const filterData = getTrimmedValues(values)\r\n\r\n    const sortedData = {\r\n        ...filterData,\r\n        \"sort_by\": [\r\n            {\r\n              field,\r\n              order: order? 'asc' : 'desc'\r\n            }\r\n        ]\r\n    }\r\n    \r\n    getShopsThunk({\r\n        ...sortedData,\r\n        partner_uuid: id\r\n    })\r\n    .then(checkRes(false))\r\n    .catch((err) => console.log(err))\r\n}\r\n\r\nconst getDetails = () => {\r\n    getPartnerDetailsThunk([id])\r\n    .then(checkRes(false))\r\n    .catch((err) => console.log(err))\r\n}\r\n\r\n  const blockPartner = () => {\r\n    const confirmed = window.confirm(\"Вы точно хотите заблокировать?\");\r\n    if (!confirmed) return;\r\n    updatePartnerThunk({uuid: id, blocked: true})\r\n    .then(checkRes(false))\r\n    .then(({data}) => setPartnerDetails(data))\r\n    .catch((err) => console.log(err))\r\n  }\r\n\r\n  const activatePartner = () => {\r\n    const confirmed = window.confirm(\"Вы точно хотите активировать?\");\r\n    if (!confirmed) return;\r\n    updatePartnerThunk({uuid: id, blocked: false})\r\n    .then(checkRes(false))\r\n    .then(({data}) => setPartnerDetails(data))\r\n    .catch((err) => console.log(err))\r\n  }\r\n\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault()\r\n\r\n    const filterData = getTrimmedValues(values)\r\n\r\n    getShopsThunk({\r\n        ...filterData,\r\n        partner_uuid: id\r\n    })\r\n    .then(checkRes(false))\r\n    .catch((err) => console.log(err))\r\n\r\n    console.log(filterData);\r\n  }\r\n\r\n  const onReset = () => {\r\n    resetForm({}, {}, true)\r\n}\r\n\r\n  useEffect(() => {\r\n    getDetails()\r\n    \r\n    return () => {\r\n        setPartnerDetails({\r\n            uuid: '',\r\n            inn: '',\r\n            name: '',\r\n        })\r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getShopsThunk({\r\n        partner_uuid: id\r\n    })\r\n    .then(checkRes(false))\r\n    .catch((err) => console.log(err))\r\n    \r\n    return () => {\r\n      \r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n    const cls = [\r\n        styles.PartnerDetails,\r\n        className\r\n    ]\r\n    if (!details) {\r\n        return <h1>нет такого мерчанта</h1>\r\n    }\r\n\r\n    if (!details.uuid) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список мерчантов</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Детали мерчанта &nbsp; <strong>{details.name}</strong></BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <center><h1>Информация о мерчанте</h1></center>\r\n            <MyTable>\r\n                <DetailsTableRow\r\n                    label='uuid'\r\n                    data={details.uuid}\r\n                />\r\n                <DetailsTableRow\r\n                    label='ИНН'\r\n                    data={details.inn}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Наименование'\r\n                    data={details.name}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Email'\r\n                    data={details.email}\r\n                />\r\n                <DetailsTableRow\r\n                    label='ФИО контактного лица'\r\n                    data={details.contacts?.contact_name}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Должность контактного лица'\r\n                    data={details.contacts?.contact_person_position}\r\n                />\r\n                <DetailsTableRow\r\n                    label='E-mail контактного лица'\r\n                    data={details.contacts?.contact_email}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Телефон контактного лица'\r\n                    data={details.contacts?.contact_phone}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Дополнительные данные'\r\n                    data={details.contacts?.other_contact_info}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Статус'\r\n                    data={details.blocked? 'Заблокирован' : 'Активен'}\r\n                />\r\n             \r\n            </MyTable>\r\n\r\n            <FlexBlock>\r\n                <MyButton\r\n                    color={'secondary'}\r\n                    onClick={() => history.push(`/partners/update/${id}`)}\r\n                    buttonText='редактировать'\r\n                />\r\n                <MyButton\r\n                    color={details.blocked? 'success' : 'danger'}\r\n                    onClick={details.blocked? activatePartner : blockPartner }\r\n                    buttonText={details.blocked? 'активировать' : 'заблокировать мерчанта'}\r\n                />\r\n            </FlexBlock>\r\n\r\n            \r\n            {/* <MyButton\r\n                color={'success'}\r\n                onClick={() => history.push(`/partners-acquirers/${id}`)}\r\n                buttonText='банки мерчанта'\r\n            /> */}\r\n         \r\n\r\n            <center><h2>Список магазинов</h2></center>\r\n            <MyCollapse>\r\n                <MyTableForm\r\n                    onSubmit={onSubmit}\r\n                    isValid={isValid}\r\n                    buttonText='Найти'\r\n                    resetForm={onReset}\r\n                >\r\n                \r\n                    <TableInput\r\n                        name='name'\r\n                        label='Наименование'\r\n                        onChange={handleChange}\r\n                        value={values.name}\r\n                        errorText={errors.name}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                        name='site'\r\n                        label='Сайт'\r\n                        onChange={handleChange}\r\n                        value={values.site}\r\n                        errorText={errors.site}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                        name='uuid'\r\n                        label='uuid'\r\n                        onChange={handleChange}\r\n                        value={values.uuid}\r\n                        errorText={errors.uuid}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                        type='number'\r\n                        name='limit'\r\n                        label='Кол-во записей'\r\n                        onChange={handleChange}\r\n                        value={values.limit}\r\n                        errorText={errors.limit}\r\n                        style={{\r\n                            width: `140px`\r\n                        }}\r\n                        min={1}\r\n                        max={100}\r\n                    />\r\n                </MyTableForm>\r\n            </MyCollapse>\r\n            {\r\n                shops && (\r\n\r\n                    <HoverTable>\r\n\r\n                        <thead>\r\n                            <tr>\r\n                                <th>№</th>\r\n                                <ClickableTH\r\n                                    onClick={() => changeOrder('site')}\r\n                                    label='Сайт'\r\n                                    thisField='site'\r\n                                    sortField={sortField}\r\n                                    order={order}\r\n                                />\r\n                                <ClickableTH\r\n                                    onClick={() => changeOrder('name')}\r\n                                    label='Наименование'\r\n                                    thisField='name'\r\n                                    sortField={sortField}\r\n                                    order={order}\r\n                                />\r\n                                <ClickableTH\r\n                                    onClick={() => changeOrder('blocked')}\r\n                                    label='Cтатус'\r\n                                    thisField='blocked'\r\n                                    sortField={sortField}\r\n                                    order={order}\r\n                                />\r\n                                <th>uuid</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            { shops.length?\r\n                                shops.map((shop, i) => {\r\n                                    return (\r\n                                        <tr \r\n                                            key={shop.uuid} \r\n                                            onClick={() => history.push(`/shops/${shop.uuid}`)}\r\n                                        >\r\n                                            <td>{i+1}</td>\r\n                                            <td>{shop.site}</td>\r\n                                            <td>{shop.name}</td>\r\n                                            <StatusTD\r\n                                                active={!shop.blocked}\r\n                                            />\r\n                                            <td>{shop.uuid}</td>\r\n                                        </tr>\r\n                                    )\r\n                                }) :\r\n                                (\r\n                                    <TableNotFound/>\r\n                                )\r\n                            }\r\n\r\n                        </tbody>\r\n\r\n                    </HoverTable>\r\n\r\n                )\r\n            }\r\n\r\n           \r\n            <MyButton\r\n                color={'primary'}\r\n                onClick={() => history.push(`/add-shop/${id}`)}\r\n                buttonText='добавить магазин'\r\n            />\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        details: state.partners.details,\r\n        shops: state.shops.shops,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps, {\r\n        getPartnerDetailsThunk, setPartnerDetails, deletePartnersThunk,\r\n        getShopsThunk, updatePartnerThunk,\r\n    }\r\n    )(PartnerDetails)","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap'\r\nimport { getPartnersThunk } from '../../redux/actions/partnerActions'\r\nimport MyTableForm from '../../components/UI/MyTable/MyTableForm/MyTableForm'\r\n\r\nimport styles from './Partners.module.scss'\r\nimport TableInput from '../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../hooks/useFormValiation'\r\nimport { getTrimmedValues } from '../../utils/utils'\r\nimport MyButton from '../../components/UI/MyButton/MyButton'\r\nimport ClickableTH from '../../components/UI/MyTable/ClickableTH/ClickableTH'\r\n// import ReactPaginate from 'react-paginate'\r\nimport SuccessAlert from '../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../hooks/useAlert'\r\nimport HoverTable from '../../components/UI/MyTable/HoverTable/HoverTable'\r\nimport TableNotFound from '../../components/UI/MyTable/TableNotFound/TableNotFound'\r\nimport StatusTD from '../../components/UI/MyTable/StatusTD/StatusTD'\r\nimport MyCollapse from '../../components/UI/MyCollapse/MyCollapse'\r\n\r\n\r\nconst Partners = ({className, getPartnersThunk, partners=[], ...props}) => {\r\n\r\n  const {values, handleChange, errors, isValid, setValues, resetForm } = useFormAndValidation()\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n\r\n  const [order, setOrder] = useState(true)\r\n//   const [limit, setLimit] = useState(3)\r\n  const [offset, setOffset] = useState(0)\r\n  const [sortField, setSortField] = useState('')\r\n\r\n  const changeOrder = (field) => {\r\n    setOrder(!order)\r\n    setSortField(field)\r\n    setValues({\r\n        ...values,\r\n        sort_by:  [\r\n            {\r\n              field,\r\n              order: order? 'asc' : 'desc'\r\n            }\r\n        ]\r\n    })\r\n\r\n    const filterData = getTrimmedValues(values)\r\n\r\n    filterData.sort_by = [\r\n        {\r\n          field,\r\n          order: order? 'asc' : 'desc'\r\n        }\r\n    ]\r\n    const sortedData = {\r\n        ...filterData,\r\n    }\r\n    \r\n    getPartnersThunk(sortedData)\r\n    .then(checkRes(false))\r\n    .catch((err) => console.log(err))\r\n\r\n}\r\n\r\n    const onNextClick = (evt) => {\r\n        evt.preventDefault()\r\n        const filterData = getTrimmedValues(values)\r\n        setOffset(offset + 1)\r\n  \r\n        getPartnersThunk({\r\n            ...filterData,\r\n            offset: (offset + 1) * (filterData.limit || 20 )\r\n        })\r\n        .then(checkRes(false))\r\n        .then(() => console.log('onNextClick getPartnersThunk'))\r\n        console.log(filterData);\r\n\r\n    }\r\n    const onPreviousClick = (evt) => {\r\n        evt.preventDefault()\r\n        if (offset <= 0) return;\r\n        const filterData = getTrimmedValues(values)\r\n\r\n        setOffset(offset - 1)\r\n        getPartnersThunk({\r\n            ...filterData,\r\n            offset: (offset - 1) * (filterData.limit || 20 )\r\n        })\r\n        .then(checkRes(false))\r\n        .then(() => console.log('onNextClick getPartnersThunk'))\r\n        console.log(filterData);\r\n    }\r\n\r\n    // const handlePageClick = (data) => {\r\n\r\n    //     console.log(data);\r\n\r\n    //     const filterData = getTrimmedValues(values)\r\n\r\n    //     setOffset(data.selected * (filterData.limit || 3))\r\n\r\n    //     getPartnersThunk({\r\n    //         limit: filterData.limit || 3,\r\n    //         ...filterData,\r\n    //         offset\r\n    //     })\r\n    // }\r\n\r\n\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault()\r\n\r\n    const filterData = getTrimmedValues(values)\r\n\r\n    getPartnersThunk(filterData)\r\n    .then(checkRes(false))\r\n    .then(() => console.log('filter getPartnersThunk'))\r\n    console.log(filterData);\r\n  }\r\n\r\n  const onReset = () => {\r\n    resetForm({}, {}, true)\r\n}\r\n\r\n\r\n    const history = useHistory()\r\n\r\n    const cls = [\r\n        styles.Partners,\r\n        className\r\n    ]\r\n\r\n    useEffect(() => {\r\n        getPartnersThunk()\r\n        .then(checkRes(false))\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <center><h1>Список мерчантов</h1></center>\r\n            \r\n            <MyCollapse>\r\n                <MyTableForm\r\n                    onSubmit={onSubmit}\r\n                    isValid={isValid}\r\n                    buttonText='Найти'\r\n                    resetForm={onReset}\r\n                >\r\n                    <div className={styles.flexInputs}>\r\n                        <TableInput\r\n                            name='inn'\r\n                            label='ИНН'\r\n                            onChange={handleChange}\r\n                            value={values.inn}\r\n                            errorText={errors.inn}\r\n                            minLength={1}\r\n                            maxLength={12}\r\n                            DivTableTHcls={styles.DivTableTHcls}\r\n                            className={styles.TableInput}\r\n                            \r\n                        />\r\n                        <TableInput\r\n                            name='email'\r\n                            label='Email'\r\n                            onChange={handleChange}\r\n                            value={values.email}\r\n                            errorText={errors.email}\r\n                            minLength={1}\r\n                            maxLength={199}\r\n                            DivTableTHcls={styles.DivTableTHcls}\r\n                            className={styles.TableInput}\r\n                        />\r\n                        <TableInput\r\n                            name='name'\r\n                            label='Наименование'\r\n                            onChange={handleChange}\r\n                            value={values.name}\r\n                            errorText={errors.name}\r\n                            minLength={1}\r\n                            maxLength={199}\r\n                            DivTableTHcls={styles.DivTableTHcls}\r\n                            className={styles.TableInput}\r\n                        />\r\n                        <TableInput\r\n                            name='uuid'\r\n                            label='uuid'\r\n                            onChange={handleChange}\r\n                            value={values.uuid}\r\n                            errorText={errors.uuid}\r\n                            minLength={1}\r\n                            maxLength={199}\r\n                            DivTableTHcls={styles.DivTableTHcls}\r\n                            className={styles.TableInput}\r\n                        />\r\n                        <TableInput\r\n                            type='number'\r\n                            name='limit'\r\n                            label='Кол-во записей'\r\n                            onChange={handleChange}\r\n                            value={values.limit}\r\n                            errorText={errors.limit}\r\n                            style={{\r\n                                width: `140px`\r\n                            }}\r\n                            min={1}\r\n                            max={100}\r\n                            DivTableTHcls={styles.DivTableTHcls}\r\n                            className={styles.TableInput}\r\n                        />\r\n                    </div>\r\n                </MyTableForm>\r\n            </MyCollapse>\r\n\r\n            <HoverTable>\r\n                <thead>\r\n                    <tr>\r\n                        <th>№</th>\r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('name')}\r\n                            label='Наименование'\r\n                            thisField='name'\r\n                            sortField={sortField}\r\n                            order={order}\r\n                        />\r\n                       \r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('blocked')}\r\n                            label='Cтатус'\r\n                            thisField='blocked'\r\n                            sortField={sortField}\r\n                            order={order}\r\n                        />\r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('email')}\r\n                            label='email'\r\n                            thisField='email'\r\n                            sortField={sortField}\r\n                            order={order}\r\n                        />\r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('inn')}\r\n                            label='ИНН'\r\n                            thisField='inn'\r\n                            sortField={sortField}\r\n                            order={order}\r\n                        />\r\n                         <th>uuid</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        partners?.length?\r\n                         partners.map((item, i) => {\r\n                            return (\r\n                                <tr \r\n                                    key={item.uuid}\r\n                                    onClick={() => history.push(`/partners/${item.uuid}`)}\r\n                                >\r\n                                    <td>{i+1}</td>\r\n                                    <td>{item.name}</td>\r\n                                    <StatusTD\r\n                                        active={!item.blocked}\r\n                                    />\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.inn}</td>\r\n                                    <td>{item.uuid}</td>\r\n                                </tr>\r\n                            )\r\n                        }) : (\r\n                            <TableNotFound/>\r\n                        )\r\n                    }\r\n                    \r\n                    \r\n                </tbody>\r\n            </HoverTable>\r\n\r\n            <div className={styles.tableBotton} >\r\n\r\n            <MyButton\r\n                color={'primary'}\r\n                onClick={() => history.push(`/add-partner`)}\r\n                buttonText='добавить мерчанта'\r\n            />\r\n\r\n            <Pagination className={styles.Pagination} aria-label=\"Page navigation\">\r\n             \r\n                <PaginationItem>\r\n                    <PaginationLink \r\n                        onClick={onPreviousClick}\r\n                        previous href=\"#\" />\r\n                </PaginationItem>\r\n             \r\n                <PaginationItem>\r\n                    <PaginationLink \r\n                        onClick={onNextClick}\r\n                        next href=\"#\" />\r\n                </PaginationItem>\r\n              \r\n            </Pagination>\r\n\r\n            {/* <ReactPaginate\r\n                previousLabel={'назад'}\r\n                nextLabel={'вперед'}\r\n                breakLabel={'...'}\r\n                breakClassName={'break-me'}\r\n                pageCount={15/limit}\r\n                marginPagesDisplayed={2}\r\n                pageRangeDisplayed={5}\r\n                onPageChange={handlePageClick}\r\n                containerClassName={'pagination'}\r\n                activeClassName={styles.active}\r\n                pageClassName={styles.pageClass}\r\n                /> */}\r\n\r\n            </div>\r\n\r\n           \r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n           \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        partners: state.partners.partners\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n     getPartnersThunk \r\n})(Partners)","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport TableTextArea from '../../../components/UI/MyTable/TableTextArea/TableTextArea'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport { getPartnerDetailsThunk, setPartnerDetails, updatePartnerThunk } from '../../../redux/actions/partnerActions'\r\n\r\nimport styles from './PartnerUpdate.module.scss'\r\n\r\nconst PartnerUpdate = ({\r\n  className, getPartnerDetailsThunk, setPartnerDetails, updatePartnerThunk,\r\n  details, ...props\r\n}) => {\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n\r\n\r\n\r\n  const {values, handleChange, errors, isValid, setValues, setIsValid } = useFormAndValidation()\r\n  const {id} = useParams()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    getPartnerDetailsThunk([id])\r\n    .then(checkRes(false))\r\n    .catch((err) => console.log(err))\r\n    return () => {\r\n        setPartnerDetails({\r\n            uuid: '',\r\n            inn: '',\r\n            name: ''\r\n        })\r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n    useEffect(() => {\r\n      setIsValid(false)\r\n      // eslint-disable-next-line\r\n  }, [])\r\n    useEffect(() => {\r\n      setValues(details)\r\n      // eslint-disable-next-line\r\n  }, [details])\r\n\r\n  const handleContactsChange = (evt) => {\r\n    const {name, value} = evt.target\r\n    let contacts = {};\r\n    if (values.contacts) {\r\n      contacts = {\r\n        ...values.contacts,\r\n        [name]: value\r\n      }\r\n    } else {\r\n      contacts = {\r\n        [name]: value\r\n      }\r\n    }\r\n    setValues({\r\n      ...values,\r\n      contacts\r\n    })\r\n\r\n    setIsValid(evt.target.closest('form').checkValidity());\r\n\r\n  }\r\n\r\n\r\n\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault()\r\n    updatePartnerThunk({uuid: id, ...values})\r\n    .then((res) => {\r\n      checkRes()(res)\r\n      return res\r\n    })\r\n    .then(res => {\r\n        if (res.ok) {\r\n            setTimeout(() => {\r\n                history.goBack()\r\n            }, 3000)\r\n        }\r\n    })\r\n    .catch((err) => console.log(err))\r\n    console.log(values);\r\n  }\r\n\r\n    const cls = [\r\n        styles.PartnerUpdate,\r\n        className\r\n    ]\r\n\r\n    if (!details) {\r\n      return <h1>нет такого мерчанта</h1>\r\n  }\r\n\r\n  if (!details.uuid) {\r\n      return <Spinner/>\r\n  }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n         <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список мерчантов</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners/${id}`} exact>Детали мерчанта</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Редактирование мерчанта</BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <center><h1>Редактирование информации мерчанта </h1></center>\r\n              <MyTableForm \r\n                className={styles.MyTable} \r\n                onSubmit={onSubmit}\r\n                isValid={isValid}\r\n                buttonText={'Сохранить'}\r\n              >\r\n                <TableInput\r\n                    name='inn'\r\n                    label='ИНН'\r\n                    onChange={handleChange}\r\n                    value={values.inn}\r\n                    errorText={errors.inn}\r\n                    minLength={10}\r\n                    maxLength={12}\r\n                    \r\n                />\r\n                <TableInput\r\n                    name='name'\r\n                    label='Наименование'\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    errorText={errors.name}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                />\r\n                <TableInput\r\n                    name='email'\r\n                    label='Email'\r\n                    type='email'\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    value={values.email}\r\n                    errorText={errors.email}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                />\r\n                <TableInput\r\n                      name='contact_name'\r\n                      label='ФИО контактного лица'\r\n                    onChange={handleContactsChange}\r\n                    value={values.contacts?.contact_name}\r\n                    errorText={errors.contacts?.contact_name}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                />\r\n                <TableInput\r\n                         name='contact_person_position'\r\n                         label='Должность контактного лица'\r\n                        onChange={handleContactsChange}\r\n                        value={values.contacts?.contact_person_position}\r\n                        errorText={errors.contacts?.contact_person_position}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                         name='contact_email'\r\n                         label='E-mail контактного лица'\r\n                        onChange={handleContactsChange}\r\n                        value={values.contacts?.contact_email}\r\n                        errorText={errors.contacts?.contact_email}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                         name='contact_phone'\r\n                         label='Телефон контактного лица'\r\n                        onChange={handleContactsChange}\r\n                        value={values.contacts?.contact_phone}\r\n                        errorText={errors.contacts?.contact_phone}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                   <TableTextArea\r\n                        name='other_contact_info'\r\n                        label='Дополнительные данные'\r\n                        cols=\"23\" \r\n                        rows=\"5\"\r\n                        onChange={handleContactsChange}\r\n                        value={values.contacts?.other_contact_info}\r\n                    />\r\n              </MyTableForm>\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      details: state.partners.details,\r\n  }\r\n}\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps, {getPartnerDetailsThunk, setPartnerDetails, updatePartnerThunk})(PartnerUpdate)","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport { createRoleThunk } from '../../../redux/actions/roleActions'\r\n\r\nimport styles from './RoleAddition.module.scss'\r\n\r\nconst RoleAddition = ({\r\n    className, createRoleThunk, \r\n    ...props}) => {\r\n\r\n    const history = useHistory()\r\n\r\n\r\n    const {values, handleChange, errors, isValid, setIsValid } = useFormAndValidation()\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n        failureAlertVisible, setFailureAlertVisible, failureMessage,\r\n        checkRes} = useAlert()\r\n\r\n    const cls = [\r\n        styles.RoleAddition,\r\n        className\r\n    ]\r\n\r\n    useEffect(() => {\r\n        setIsValid(false)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        console.log(values);\r\n        createRoleThunk(values)\r\n        .then((res) => {\r\n            checkRes()(res)\r\n            if (res.ok) {\r\n                setTimeout(() => {\r\n                    history.push(`/roles`)\r\n                }, 1000)\r\n            }\r\n        })\r\n        .catch((err) => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/roles' exact>Роли</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Добавление роли</BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <center><h1>Добавление роли</h1></center>\r\n\r\n            <MyTableForm \r\n                className={styles.MyTable} \r\n                onSubmit={onSubmit}\r\n                isValid={isValid}\r\n            >\r\n                \r\n                <TableInput\r\n                    name='name'\r\n                    label='Наименование'\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    errorText={errors.name}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                    title='максимум 199 символов'\r\n                />\r\n                \r\n                \r\n            </MyTableForm>\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n            <FailureAlert\r\n                visible={failureAlertVisible}\r\n                setVisible={setFailureAlertVisible}\r\n                message={failureMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default connect(null, { createRoleThunk })(RoleAddition)","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink, useHistory, useParams } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport FlexBlock from '../../../components/Blocks/FlexBlock/FlexBlock'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport MyButton from '../../../components/UI/MyButton/MyButton'\r\nimport DetailsTableRow from '../../../components/UI/MyTable/DetailsTableRow/DetailsTableRow'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport { getRoleDetailsThunk } from '../../../redux/actions/roleActions'\r\n\r\nimport styles from './RoleDetails.module.scss'\r\n\r\nconst RoleDetails = ({className, details, getRoleDetailsThunk, ...props}) => {\r\n\r\n  \r\n  const { id } = useParams()\r\n  const history = useHistory()\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n\r\n    useEffect(() => {\r\n      getRoleDetailsThunk([+id])\r\n      .then(checkRes(false))\r\n      .then(() => console.log('getRoleDetailsThunk'))\r\n      // eslint-disable-next-line\r\n    }, [])\r\n\r\n    \r\n  const onDelete = () => {\r\n    const confirmed = window.confirm(\"Вы точно хотите удалить?\");\r\n    if (confirmed) {\r\n      // deleteTerminalsThunk([id])\r\n      // .then((res) => {\r\n      //   checkRes()(res)\r\n      //   return res\r\n      // })\r\n      // .then(res => {\r\n      //     if (res.ok) {\r\n      //         setTimeout(() => {\r\n      //           history.goBack()\r\n      //         }, 1000)\r\n      //     }\r\n      // })\r\n      // .then(() => console.log('deleteTerminalsThunk'))\r\n      // .catch((err) => console.log(err))\r\n    }\r\n  }\r\n    \r\n    const cls = [\r\n        styles.RoleDetails,\r\n        className\r\n    ]\r\n\r\n    if (!details) {\r\n      return (\r\n        <h1>Нет такой роли</h1>\r\n      )\r\n    }\r\n  \r\n    if (!details.id) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n             <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n              <BreadcrumbItem tag={NavLink} to='/roles' exact>Роли</BreadcrumbItem>\r\n              <BreadcrumbItem active tag=\"span\">Роль &nbsp; <strong>{details?.name}</strong></BreadcrumbItem>\r\n            </Breadcrumb>\r\n\r\n            <center><h1>Детали роли <strong>{details?.name}</strong></h1></center>\r\n\r\n            <MyTable>\r\n                <DetailsTableRow\r\n                    label='id'\r\n                    data={details.id}\r\n                />\r\n\r\n                <DetailsTableRow\r\n                    label='Наименование'\r\n                    data={details.name}\r\n                />\r\n            </MyTable>\r\n\r\n            <FlexBlock>\r\n              <MyButton\r\n                    color={'secondary'}\r\n                    onClick={() => history.push(`/roles/${id}/update`)}\r\n                    buttonText='редактировать'\r\n                />\r\n                <MyButton\r\n                    color={'danger'}\r\n                    onClick={onDelete}\r\n                    buttonText='удалить'\r\n                />\r\n          </FlexBlock>\r\n\r\n          <SuccessAlert\r\n                    visible={successAlertVisible}\r\n                    setVisible={setSuccessAlertVisible}\r\n                    message={successMessage}\r\n                />\r\n\r\n            <FailureAlert\r\n                visible={failureAlertVisible}\r\n                setVisible={setFailureAlertVisible}\r\n                message={failureMessage}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      details: state.roles.details,\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { getRoleDetailsThunk })(RoleDetails)","import React from 'react'\r\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap'\r\nimport MyButton from '../../UI/MyButton/MyButton'\r\n\r\nimport styles from './AddButtonAndPagination.module.scss'\r\n\r\nconst AddButtonAndPagination = ({\r\n  className, onPreviousClick, onNextClick, buttonText='Добавить', onClick,\r\n  color='primary',\r\n  ...props}) => {\r\n\r\n    const cls = [\r\n        styles.AddButtonAndPagination,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n             <MyButton\r\n                color={color}\r\n                onClick={onClick}\r\n                buttonText={buttonText}\r\n            />\r\n\r\n            <Pagination className={styles.Pagination} aria-label=\"Page navigation\">\r\n             \r\n                <PaginationItem>\r\n                    <PaginationLink \r\n                        onClick={onPreviousClick}\r\n                        previous href=\"#\" />\r\n                </PaginationItem>\r\n             \r\n                <PaginationItem>\r\n                    <PaginationLink \r\n                        onClick={onNextClick}\r\n                        next href=\"#\" />\r\n                </PaginationItem>\r\n              \r\n            </Pagination>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddButtonAndPagination","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router'\r\nimport AddButtonAndPagination from '../../components/Blocks/AddButtonAndPagination/AddButtonAndPagination'\r\nimport FailureAlert from '../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport SuccessAlert from '../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport MyCollapse from '../../components/UI/MyCollapse/MyCollapse'\r\nimport ClickableTH from '../../components/UI/MyTable/ClickableTH/ClickableTH'\r\nimport HoverTable from '../../components/UI/MyTable/HoverTable/HoverTable'\r\nimport MyTableForm from '../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../components/UI/MyTable/TableInput/TableInput'\r\nimport TableNotFound from '../../components/UI/MyTable/TableNotFound/TableNotFound'\r\nimport { useAlert } from '../../hooks/useAlert'\r\nimport { useFormAndValidation } from '../../hooks/useFormValiation'\r\nimport { getRolesThunk } from '../../redux/actions/roleActions'\r\nimport { getTrimmedValues } from '../../utils/utils'\r\n\r\nimport styles from './Roles.module.scss'\r\n\r\nconst Roles = ({className, getRolesThunk, roles, ...props}) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const {values, handleChange, errors, isValid, setValues, resetForm} = useFormAndValidation()\r\n\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n      failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n  \r\n    const [order, setOrder] = useState(true)\r\n    const [offset, setOffset] = useState(0)\r\n    const [sortField, setSortField] = useState('')\r\n\r\n    const cls = [\r\n        styles.Roles,\r\n        className\r\n    ]\r\n\r\n    const changeOrder = (field) => {\r\n        setOrder(!order)\r\n        setSortField(field)\r\n        setValues({\r\n            ...values,\r\n            sort_by:  [\r\n                {\r\n                  field,\r\n                  order: order? 'asc' : 'desc'\r\n                }\r\n            ]\r\n        })\r\n    \r\n        const filterData = getTrimmedValues(values)\r\n    \r\n        filterData.sort_by = [\r\n            {\r\n              field,\r\n              order: order? 'asc' : 'desc'\r\n            }\r\n        ]\r\n        const sortedData = {\r\n            ...filterData,\r\n        }\r\n        \r\n        getRolesThunk(sortedData)\r\n        .then(checkRes(false))\r\n        .catch((err) => console.log(err))\r\n    \r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        getRolesThunk()\r\n        .then(checkRes(false))\r\n        .catch((err) => console.log(err))\r\n        // eslint-disable-next-line\r\n    }, []) \r\n\r\n    const onNextClick = (evt) => {\r\n        evt.preventDefault()\r\n        const filterData = getTrimmedValues(values)\r\n        setOffset(offset + 1)\r\n  \r\n        getRolesThunk({\r\n            ...filterData,\r\n            offset: (offset + 1) * (filterData.limit || 20 )\r\n        })\r\n        .then(checkRes(false))\r\n        .then(() => console.log('onNextClick getPartnersThunk'))\r\n        console.log(filterData);\r\n\r\n    }\r\n    const onPreviousClick = (evt) => {\r\n        evt.preventDefault()\r\n        if (offset <= 0) return\r\n        const filterData = getTrimmedValues(values)\r\n\r\n        setOffset(offset - 1)\r\n        getRolesThunk({\r\n            ...filterData,\r\n            offset: (offset - 1) * (filterData.limit || 20 )\r\n        })\r\n        .then(checkRes(false))\r\n        .then(() => console.log('onNextClick getPartnersThunk'))\r\n        console.log(filterData);\r\n    }\r\n\r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n    \r\n        const filterData = getTrimmedValues(values)\r\n    \r\n        getRolesThunk(filterData)\r\n        .then(checkRes(false))\r\n        .catch((err) => console.log(err))\r\n    \r\n        console.log(filterData);\r\n      }\r\n\r\n      const onReset = () => {\r\n        resetForm({}, {}, true)\r\n      }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <center><h1>Список ролей</h1></center>\r\n\r\n            <MyCollapse>\r\n                <MyTableForm\r\n                    onSubmit={onSubmit}\r\n                    isValid={isValid}\r\n                    buttonText='Найти'\r\n                    resetForm={onReset}\r\n                >\r\n                \r\n                <TableInput\r\n                        name='name'\r\n                        label='Наименование'\r\n                        onChange={handleChange}\r\n                        value={values.name}\r\n                        errorText={errors.name}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                        title='максимум 199 символов'\r\n                    />\r\n\r\n                </MyTableForm>\r\n            </MyCollapse>\r\n\r\n            <HoverTable>\r\n                <thead>\r\n                    <tr>\r\n                        <th>id</th>\r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('name')}\r\n                            label='Наименование'\r\n                            thisField='name'\r\n                            sortField={sortField}\r\n                            order={order}\r\n                        />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        roles?.length? roles.map((item) => {\r\n                            return (\r\n                                <tr \r\n                                    key={item.id}\r\n                                    className={styles.tr} \r\n                                    onClick={() => history.push(`/roles/${item.id}`)}\r\n                                >\r\n                                    <th scope=\"row\">{item.id}</th>\r\n                                    <td>{item.name}</td>\r\n                                </tr>\r\n                            )\r\n                        }): (\r\n                                <TableNotFound/>\r\n                            )\r\n                    }\r\n                </tbody>\r\n            </HoverTable>\r\n\r\n            <AddButtonAndPagination\r\n                onPreviousClick={onPreviousClick}\r\n                onNextClick={onNextClick}\r\n                buttonText='Добавить роль'\r\n                onClick={() => history.push(`/add-role`)}\r\n            />\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n            <FailureAlert\r\n                visible={failureAlertVisible}\r\n                setVisible={setFailureAlertVisible}\r\n                message={failureMessage}\r\n            />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        roles: state.roles.roles\r\n    }\r\n  }\r\n\r\n  \r\n\r\nexport default connect(mapStateToProps, { getRolesThunk })(Roles)","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport { getRoleDetailsThunk, updateRoleThunk } from '../../../redux/actions/roleActions'\r\n\r\nimport styles from './RoleUpdate.module.scss'\r\n\r\nconst RoleUpdate = ({\r\n  className, details, getRoleDetailsThunk, updateRoleThunk,\r\n  ...props}) => {\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n\r\n\r\n  const {values, handleChange, errors, isValid, setValues, setIsValid } = useFormAndValidation()\r\n\r\n  const {id} = useParams()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    setIsValid(false)\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getRoleDetailsThunk([+id])\r\n    .then(checkRes(false))\r\n    return () => {\r\n  \r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!details) return;\r\n\r\n    setValues(details)\r\n    // eslint-disable-next-line\r\n  }, [details])\r\n\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault()\r\n    updateRoleThunk(values)\r\n    .then(checkRes())\r\n    .then(res => {\r\n        if (res.ok) {\r\n            setTimeout(() => {\r\n              history.goBack()\r\n            }, 1000)\r\n        }\r\n    })\r\n    .catch((err) => console.log(err))\r\n    console.log(values);\r\n  }\r\n\r\n    const cls = [\r\n        styles.RoleUpdate,\r\n        className\r\n    ]\r\n\r\n    if (!details) {\r\n      return (\r\n        <h1>Нет такой роли</h1>\r\n      )\r\n    }\r\n  \r\n    if (!details.id) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n              <BreadcrumbItem tag={NavLink} to='/roles' exact>Роли</BreadcrumbItem>\r\n              <BreadcrumbItem tag={NavLink} to={`/roles/${id}`} exact>Роль &nbsp; <strong>{details?.name}</strong></BreadcrumbItem>\r\n              <BreadcrumbItem active tag=\"span\">Обновление роли  &nbsp; <strong>{details?.name}</strong></BreadcrumbItem>\r\n            </Breadcrumb>\r\n\r\n            <center><h1>Обновление роли <strong>{details?.name}</strong></h1></center>\r\n\r\n          <MyTableForm\r\n            onSubmit={onSubmit}\r\n            isValid={isValid}\r\n            buttonText='Сохранить'\r\n          >\r\n\r\n                <TableInput\r\n                    name='name'\r\n                    label='Наименование'\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    errorText={errors.name}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                    title='максимум 199 символов'\r\n                />\r\n\r\n          </MyTableForm>\r\n\r\n          <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n            <FailureAlert\r\n                visible={failureAlertVisible}\r\n                setVisible={setFailureAlertVisible}\r\n                message={failureMessage}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      details: state.roles.details,\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { getRoleDetailsThunk, updateRoleThunk })(RoleUpdate)","import myAxios from '../../configs/modified-axios'\r\nimport { makeRes } from '../../utils/utils'\r\nimport { SET_TERMINALS, SET_TERMINAL_DETAILS, TERMINALS_LOADING, TERMINALS_FAILURE, TERMINALS_SUCCESS } from './actionTypes'\r\n\r\n\r\nexport const createTerminalThunk = (inputData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n\r\n      const res = await myAxios.post(`/api/admin/add_terminal`, inputData)\r\n\r\n      console.log(res);\r\n      \r\n      if (res.status === 200 && res.data.result) {\r\n          dispatch(alertTerminalsSuccess({create: 'Услуга добавлен успешно'}))\r\n          return makeRes(true, 'Услуга добавлен успешно')\r\n        } else {\r\n          dispatch(alertTerminalsFailure({ create: res.data.errors }))\r\n          return makeRes(false, res.data.errors)\r\n        } \r\n    } catch (error) {\r\n      console.log(error.message);\r\n      dispatch(alertTerminalsFailure({create: [error.message]}))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n} \r\n\r\nexport const getTerminalsThunk = (filterData={}) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_terminals`, filterData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(getTerminalsSuccess( res.data.result.terminals))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertTerminalsFailure({ terminals: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertTerminalsFailure({ terminals: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const getTerminalDetailsThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_terminals_by_uuids`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setTerminalDetails( res.data.result.terminals[0]))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertTerminalsFailure({ details: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertTerminalsFailure({ details: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateTerminalThunk = (terminalData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/update_terminal`, terminalData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertTerminalsSuccess({update: 'информация об услуге успешно обновлена'}))\r\n        return makeRes(true, 'информация об услуге успешно обновлена', res.data.result)\r\n      } else {\r\n        dispatch(alertTerminalsFailure({ update: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertTerminalsFailure({ update: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const deleteTerminalsThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/delete_terminals`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertTerminalsSuccess({delete: 'Услуга успешно удалена'}))\r\n        return makeRes(true, 'Услуга успешно удалена')\r\n      } else {\r\n        dispatch(alertTerminalsFailure({ delete: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertTerminalsFailure({ delete: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const setTerminalsLoading = (status) => {\r\n  return {\r\n    type: TERMINALS_LOADING,\r\n    status\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const getTerminalsSuccess = (terminals) => {\r\n  return {\r\n    type: SET_TERMINALS,\r\n    terminals\r\n  }\r\n}\r\n\r\nexport const setTerminalDetails = (details) => {\r\n  return {\r\n    type: SET_TERMINAL_DETAILS,\r\n    details\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const alertTerminalsFailure = (errors) => {\r\n  return {\r\n    type: TERMINALS_FAILURE,\r\n    errors\r\n  }\r\n}\r\nexport const alertTerminalsSuccess = (message) => {\r\n  return {\r\n    type: TERMINALS_SUCCESS,\r\n    message\r\n  }\r\n}\r\n\r\n\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport FlexBlock from '../../../components/Blocks/FlexBlock/FlexBlock'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport BlockingButton from '../../../components/UI/MyButton/BlockingButton/BlockingButton'\r\nimport MyButton from '../../../components/UI/MyButton/MyButton'\r\nimport MyCollapse from '../../../components/UI/MyCollapse/MyCollapse'\r\nimport ClickableTH from '../../../components/UI/MyTable/ClickableTH/ClickableTH'\r\nimport DetailsTableRow from '../../../components/UI/MyTable/DetailsTableRow/DetailsTableRow'\r\nimport HoverTable from '../../../components/UI/MyTable/HoverTable/HoverTable'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport StatusTD from '../../../components/UI/MyTable/StatusTD/StatusTD'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport TableMultiselect from '../../../components/UI/MyTable/TableMultiselect/TableMultiselect'\r\nimport TableNotFound from '../../../components/UI/MyTable/TableNotFound/TableNotFound'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport { getAcquirersThunk } from '../../../redux/actions/acquirerActions'\r\nimport { deleteShopsThunk, getShopDetailsThunk, setShopDetails, updateShopThunk } from '../../../redux/actions/shopActions'\r\nimport { getTerminalsThunk } from '../../../redux/actions/terminalActions'\r\nimport { activeOptions, currencyOptions, operationsOptions } from '../../../utils/constants'\r\nimport { getTrimmedValues } from '../../../utils/utils'\r\n\r\nimport styles from './ShopDetails.module.scss'\r\n\r\nconst ShopDetails = ({\r\n  className, details,  getShopDetailsThunk, setShopDetails, getTerminalsThunk,\r\n  deleteShopsThunk, terminals, acquirers, partners, getAcquirersThunk, updateShopThunk,\r\n   ...props}) => {\r\n\r\n  const {id} = useParams()\r\n  const history = useHistory()\r\n\r\n  const bankRef = useRef()\r\n  const blockedRef = useRef()\r\n  const operationsdRef = useRef()\r\n  const currencyRef = useRef()\r\n\r\n  const [partner, setPartner] = useState('')\r\n\r\n  const {values, handleChange, errors, isValid, setValues, resetForm} = useFormAndValidation()\r\n\r\n  const [bankOptions, setBankOptions] = useState([{name: 'Загружаются данные...', avtive: true}])\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n\r\n    const [order, setOrder] = useState(true)\r\n    const [sortField, setSortField] = useState('')\r\n\r\n    const changeOrder = (field) => {\r\n      setOrder(!order)\r\n      setSortField(field)\r\n  \r\n      const filterData = getTrimmedValues(values)\r\n\r\n      const sortedData = {\r\n          ...filterData,\r\n          \"sort_by\": [\r\n              {\r\n                field,\r\n                order: order? 'asc' : 'desc'\r\n              }\r\n          ]\r\n      }\r\n      \r\n      getTerminalsThunk({\r\n          ...sortedData,\r\n          store_uuid: id\r\n        })\r\n      .then(checkRes(false))\r\n      .catch((err) => console.log(err))\r\n  \r\n  }\r\n\r\n  const onSingleSelect = (selectedList, {jsonKey, value}) => {\r\n    console.log(selectedList);\r\n    setValues({\r\n        ...values,\r\n        [jsonKey]: value\r\n    })\r\n}\r\nconst onBankSelect = (selectedList, selectedItem) => {\r\n    console.log(selectedList);\r\n    setValues({\r\n        ...values,\r\n        acquirer_uuid: selectedItem.uuid\r\n    })\r\n}\r\nconst onMultiSelect = (selectedList, selectedItem) => {\r\n    console.log(selectedList);\r\n    setValues({\r\n        ...values,\r\n        [selectedItem.jsonKey]: selectedList.map(i => i.value)\r\n    })\r\n}\r\n\r\nconst onRemove = (selectedList, removedItem) => {\r\n    console.log(selectedList);\r\n    setValues({\r\n        ...values,\r\n        [removedItem.jsonKey]: selectedList.map(i => i.value)\r\n    })\r\n}\r\n\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault()\r\n\r\n    let filterData = getTrimmedValues(values)\r\n\r\n    if (filterData.operations) {\r\n        if (filterData.operations.length === 0) {\r\n            const {operations, ...rest} = filterData\r\n            filterData = rest\r\n        }\r\n    }\r\n    getTerminalsThunk({\r\n        ...filterData,\r\n        store_uuid: id\r\n    })\r\n    .then(checkRes(false))\r\n    .catch((err) => console.log(err))\r\n\r\n    console.log(filterData);\r\n  }\r\n\r\n  const onReset = () => {\r\n    resetForm({}, {}, true)\r\n   const refList = [bankRef, blockedRef, operationsdRef, currencyRef]\r\n   refList.forEach((i) => i.current.resetSelectedValues())\r\n}\r\n\r\n  const onBlock = () => {\r\n    const confirmed = window.confirm(\"Вы точно хотите заблокировать?\");\r\n    if (!confirmed) return;\r\n    updateShopThunk({uuid: id, blocked: true})\r\n    .then(checkRes(false))\r\n    .then(({data}) => setShopDetails(data))\r\n    .catch((err) => console.log(err))\r\n  }\r\n\r\n  const onActivate = () => {\r\n    const confirmed = window.confirm(\"Вы точно хотите активировать?\");\r\n    if (!confirmed) return;\r\n    updateShopThunk({uuid: id, blocked: false})\r\n    .then(checkRes(false))\r\n    .then(({data}) => setShopDetails(data))\r\n    .catch((err) => console.log(err))\r\n  }\r\n\r\n  useEffect(() => {\r\n      if (!partners && !details)  return;\r\n        const currentPartner = partners?.find((i) => i.uuid === details?.partner_uuid)\r\n        setPartner(currentPartner?.name || '')\r\n\r\n  }, [partners, details])\r\n\r\n  useEffect(() => {\r\n    getAcquirersThunk()\r\n    .then(checkRes(false))\r\n    .catch((err) => console.log(err))\r\n// eslint-disable-next-line\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (acquirers) {\r\n        setBankOptions(acquirers)\r\n    }\r\n}, [acquirers])\r\n\r\n  useEffect(() => {\r\n\r\n    getShopDetailsThunk([id])\r\n    .then(checkRes(false))\r\n    .catch((err) => console.log(err))\r\n\r\n    getTerminalsThunk({store_uuid: id})\r\n    .then(checkRes(false))\r\n    .catch((err) => console.log(err))\r\n\r\n    return () => {\r\n      setShopDetails({\r\n          uuid: '',\r\n          partner_uuid: '',\r\n          name: '',\r\n        })\r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n    const cls = [\r\n        styles.ShopDetails,\r\n        className\r\n    ]\r\n    if (!details) {\r\n        return <h1>нет такого магазина</h1>\r\n    }\r\n\r\n    if (!details.uuid) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n         <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список мерчантов</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners/${details.partner_uuid}`} exact>Детали мерчанта  &nbsp; <strong>{partner}</strong></BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Детали магазина &nbsp; <strong>{details.name}</strong></BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <center><h1>Информация о магазине</h1></center>\r\n            <MyTable>\r\n                 <DetailsTableRow\r\n                    label='uuid'\r\n                    data={details.uuid}\r\n                />\r\n                 <DetailsTableRow\r\n                    label='Наименование'\r\n                    data={details.name}\r\n                />\r\n                 <DetailsTableRow\r\n                    label='Сайт'\r\n                    data={details.site}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Статус'\r\n                    data={details.blocked? 'Заблокирован' : 'Активен'}\r\n                />\r\n                \r\n            </MyTable>\r\n               \r\n            <br />\r\n            <hr />\r\n            <center><h2>Реквизиты</h2></center>\r\n\r\n            <MyTable>\r\n                <DetailsTableRow\r\n                        // column\r\n                        label='Юридическое лицо'\r\n                        data={details.bank_details?.legal_entity}\r\n                    />\r\n                    <DetailsTableRow\r\n                        // column\r\n                        label='ИНН'\r\n                        data={details.bank_details?.inn}\r\n                    />\r\n                    <DetailsTableRow\r\n                        // column\r\n                        label='КПП'\r\n                        data={details.bank_details?.kpp}\r\n                    />\r\n                    <DetailsTableRow\r\n                        // column\r\n                        label='ОГРН'\r\n                        data={details.bank_details?.ogrn}\r\n                    />\r\n                    <DetailsTableRow\r\n                        // column\r\n                        label='Юридический адрес'\r\n                        data={details.bank_details?.legal_address}\r\n                    />\r\n                    <DetailsTableRow\r\n                        // column\r\n                        label='Номер договора'\r\n                        data={details.bank_details?.contract_number}\r\n                    />\r\n            </MyTable>\r\n\r\n            <br />\r\n            <hr />\r\n            <center><h2>Дополнительные настройки</h2></center>\r\n\r\n            <MyTable>\r\n                    <DetailsTableRow\r\n                        label='Callback url'\r\n                        data={details.settings?.callback_url}\r\n                    />\r\n                    <DetailsTableRow\r\n                        label='Callback key'\r\n                        data={details.settings?.callback_key}\r\n                    />\r\n                    <DetailsTableRow\r\n                        label='Адрес редиректа при успешной оплате'\r\n                        data={details.settings?.successful_payment_redirect_url}\r\n                    />\r\n                    <DetailsTableRow\r\n                        label='Адрес редиректа при неуспешной оплате'\r\n                        data={details.settings?.failure_payment_redirect_url}\r\n                    />\r\n                    <DetailsTableRow\r\n                        label='Email для отправки реестра'\r\n                        data={details.settings?.email_for_reports}\r\n                    />\r\n            </MyTable>\r\n\r\n            <FlexBlock>\r\n                    <MyButton\r\n                        color={'secondary'}\r\n                        onClick={() => history.push(`/shops/update/${id}`)}\r\n                        buttonText='редактировать'\r\n                    />\r\n                    <BlockingButton\r\n                        blocked={details.blocked}\r\n                        onActivate={onActivate}\r\n                        onBlock={onBlock}\r\n                    />\r\n            </FlexBlock>\r\n\r\n\r\n            <center><h2>Список услуг</h2></center>\r\n            <MyCollapse>\r\n                <MyTableForm\r\n                    onSubmit={onSubmit}\r\n                    isValid={isValid}\r\n                    buttonText='Найти'\r\n                    resetForm={onReset}\r\n                >\r\n                \r\n                <div className={styles.flexInputsWrap}>\r\n                        <div className={styles.flexInputs}>\r\n                            <TableInput\r\n                                name='name'\r\n                                label='Наименование'\r\n                                onChange={handleChange}\r\n                                value={values.name}\r\n                                errorText={errors.name}\r\n                                minLength={1}\r\n                                maxLength={199}\r\n                                DivTableTDcls={styles.DivTableTDcls}\r\n                            />\r\n                            <TableInput\r\n                                name='uuid'\r\n                                label='uuid'\r\n                                onChange={handleChange}\r\n                                value={values.uuid}\r\n                                errorText={errors.uuid}\r\n                                minLength={1}\r\n                                maxLength={199}\r\n                                DivTableTDcls={styles.DivTableTDcls}\r\n                            />\r\n                            <TableInput\r\n                                type='number'\r\n                                name='limit'\r\n                                label='Кол-во записей'\r\n                                onChange={handleChange}\r\n                                value={values.limit}\r\n                                errorText={errors.limit}\r\n                                style={{\r\n                                    width: `140px`\r\n                                }}\r\n                                min={1}\r\n                                max={100}\r\n                                DivTableTDcls={styles.DivTableTDcls}\r\n                            />\r\n                        </div>\r\n                    <div className={styles.flexMultiInputs} >\r\n                            <TableMultiselect\r\n                                label='Банк'\r\n                                options={bankOptions}\r\n                                displayValue=\"name\"\r\n                                onSelect={onBankSelect}\r\n                                onRemove={onRemove}\r\n                                placeholder='Выберите'\r\n                                singleSelect\r\n                                DivTableTHcls={styles.DivTableTHcls}\r\n                                multiRef={bankRef}\r\n                            />\r\n                            <TableMultiselect\r\n                                label='Aктивен'\r\n                                options={activeOptions}\r\n                                displayValue=\"name\"\r\n                                onSelect={onSingleSelect}\r\n                                onRemove={onRemove}\r\n                                placeholder='Выберите'\r\n                                singleSelect\r\n                                DivTableTHcls={styles.DivTableTHcls}\r\n                                multiRef={blockedRef}\r\n                            />\r\n                            <TableMultiselect\r\n                                label='Операции'\r\n                                options={operationsOptions}\r\n                                displayValue=\"name\"\r\n                                onSelect={onMultiSelect}\r\n                                onRemove={onRemove}\r\n                                placeholder='Выберите'\r\n                                DivTableTHcls={styles.DivTableTHcls}\r\n                                multiRef={operationsdRef}\r\n                            />\r\n                            <TableMultiselect\r\n                                label='Код валюты'\r\n                                options={currencyOptions}\r\n                                displayValue=\"name\"\r\n                                onSelect={onSingleSelect}\r\n                                onRemove={onRemove}\r\n                                placeholder='Выберите'\r\n                                singleSelect\r\n                                DivTableTHcls={styles.DivTableTHcls}\r\n                                multiRef={currencyRef}\r\n                            />\r\n                    </div>\r\n                </div>\r\n                </MyTableForm>\r\n            </MyCollapse>\r\n\r\n\r\n                    <HoverTable>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>№</th>\r\n                                <th>Банк</th>\r\n                                <ClickableTH\r\n                                    onClick={() => changeOrder('blocked')}\r\n                                    label='Cтатус'\r\n                                    thisField='blocked'\r\n                                    sortField={sortField}\r\n                                    order={order}\r\n                                />\r\n                                <ClickableTH\r\n                                    onClick={() => changeOrder('currency_num')}\r\n                                    label='Валюта'\r\n                                    thisField='currency_num'\r\n                                    sortField={sortField}\r\n                                    order={order}\r\n                                />\r\n                                <ClickableTH\r\n                                    onClick={() => changeOrder('name')}\r\n                                    label='Наименование'\r\n                                    thisField='name'\r\n                                    sortField={sortField}\r\n                                    order={order}\r\n                                />\r\n                                <th>Операции</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                           {\r\n                            terminals?.length ? terminals.map((item, i) => {\r\n                                const currency =  currencyOptions.find(i => {\r\n                                                    return i.value === item.currency_num\r\n                                                })\r\n                                const currentBank = acquirers?.find((bank) => {\r\n                                    return bank.uuid === item.acquirer_uuid\r\n                                })\r\n                                return (\r\n                                        <tr \r\n                                            key={item.uuid} \r\n                                            onClick={() => history.push(`/terminals/${item.uuid}`)}\r\n                                        >\r\n                                            <td>{i+1}</td>\r\n                                            <td>{currentBank?.name}</td>\r\n                                            <StatusTD\r\n                                                 active={!item.blocked}\r\n                                            />\r\n                                            <td> \r\n                                                {`${item.currency_num} / ${currency?.code} / ${currency?.name}`}\r\n                                            </td>\r\n                                            <td>{item.name}</td>\r\n                                            <td>{item.operations.join(' ').toUpperCase()}</td>\r\n                                        </tr>\r\n                                    )\r\n                            }) : (\r\n                                <TableNotFound/>\r\n                            )\r\n                           }\r\n                        </tbody>\r\n                    </HoverTable>\r\n                    \r\n                    <MyButton\r\n                        color={'primary'}\r\n                        onClick={() => history.push(`/add-terminal/${id}`)}\r\n                        buttonText='добавить услугу'\r\n                    />\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    details: state.shops.details,\r\n    terminals: state.terminals.terminals,\r\n    acquirers: state.acquirers.acquirers,\r\n    partners: state.partners.partners\r\n  }\r\n  }\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n  getShopDetailsThunk, setShopDetails, deleteShopsThunk, getTerminalsThunk,\r\n  getAcquirersThunk, updateShopThunk,\r\n})(ShopDetails)","import React from 'react'\r\n\r\nimport styles from './Shops.module.scss'\r\n\r\nconst Shops = ({className, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.Shops,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <h1>Shops</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shops","import React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\n\r\nimport styles from './ShopsAddition.module.scss'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { createShopThunk } from '../../../redux/actions/shopActions'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\n\r\nconst ShopsAddition = ({className, createShopThunk, ...props}) => {\r\n\r\n    const {partnerId} = useParams()\r\n\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n        failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n    \r\n\r\n    const {values, handleChange, errors, isValid, resetForm, setIsValid, setValues } = useFormAndValidation()\r\n    \r\n    useEffect(() => {\r\n        setIsValid(false)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const cls = [\r\n        styles.ShopsAddition,\r\n        className\r\n    ]\r\n\r\n    const handleBankDetailsChange = (evt) => {\r\n        const {name, value} = evt.target\r\n        let bank_details = {};\r\n        if (values.bank_details) {\r\n          bank_details = {\r\n            ...values.bank_details,\r\n            [name]: value\r\n          }\r\n        } else {\r\n          bank_details = {\r\n            [name]: value\r\n          }\r\n        }\r\n        setValues({\r\n          ...values,\r\n          bank_details\r\n        })\r\n        setIsValid(evt.target.closest('form').checkValidity());\r\n      }\r\n\r\n      const handleSettingsChange = (evt) => {\r\n        const {name, value} = evt.target\r\n        let settings = {};\r\n        if (values.settings) {\r\n          settings = {\r\n            ...values.settings,\r\n            [name]: value\r\n          }\r\n        } else {\r\n          settings = {\r\n            [name]: value\r\n          }\r\n        }\r\n        setValues({\r\n          ...values,\r\n          settings\r\n        })\r\n        setIsValid(evt.target.closest('form').checkValidity());\r\n      }\r\n\r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        const shopData = {\r\n            ...values,\r\n            partner_uuid: partnerId\r\n        }\r\n        console.log(shopData);\r\n\r\n        createShopThunk(shopData)\r\n        .then((res) => {\r\n            checkRes()(res)\r\n            return res\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                setTimeout(() => {\r\n                    resetForm()\r\n                }, 3000)\r\n            }\r\n        })\r\n        .catch((err) => console.log(err))\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n         <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список мерчантов</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners/${partnerId}`} exact>Детали мерчанта</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Добавление магазина</BreadcrumbItem>\r\n        </Breadcrumb>\r\n\r\n            <center><h1>Добавление магазина</h1></center>\r\n            <MyTableForm\r\n                onSubmit={onSubmit}\r\n                isValid={isValid}\r\n            >\r\n                    <TableInput\r\n                        // column\r\n                         name='name'\r\n                        label='Наименование'\r\n                        required={true}\r\n                        onChange={handleChange}\r\n                        value={values.name}\r\n                        errorText={errors.name}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                        // column\r\n                         name='site'\r\n                        label='Сайт'\r\n                        required={true}\r\n                        onChange={handleChange}\r\n                        value={values.site}\r\n                        errorText={errors.site}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    \r\n                    <br />\r\n                    <hr />\r\n                    <center><h2>Реквизиты</h2></center>\r\n                    <TableInput\r\n                        column\r\n                         name='legal_entity'\r\n                        label='Юридическое лицо'\r\n                        onChange={handleBankDetailsChange}\r\n                        value={values.bank_details?.legal_entity}\r\n                        errorText={errors.bank_details?.legal_entity}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                        column\r\n                         name='inn'\r\n                        label='ИНН'\r\n                        onChange={handleBankDetailsChange}\r\n                        value={values.bank_details?.inn}\r\n                        errorText={errors.bank_details?.inn}\r\n                        minLength={10}\r\n                        maxLength={12}\r\n                        title='ИНН состоит из 10-12 цифр'\r\n                    />\r\n                    <TableInput\r\n                        column\r\n                         name='kpp'\r\n                        label='КПП'\r\n                        onChange={handleBankDetailsChange}\r\n                        value={values.bank_details?.kpp}\r\n                        errorText={errors.bank_details?.kpp}\r\n                        // minLength={10}\r\n                        // maxLength={12}\r\n                    />\r\n                    <TableInput\r\n                        column\r\n                         name='ogrn'\r\n                        label='ОГРН'\r\n                        onChange={handleBankDetailsChange}\r\n                        value={values.bank_details?.ogrn}\r\n                        errorText={errors.bank_details?.ogrn}\r\n                        // minLength={10}\r\n                        // maxLength={12}\r\n                    />\r\n                    <TableInput\r\n                        column\r\n                         name='legal_address'\r\n                        label='Юридический адрес'\r\n                        onChange={handleBankDetailsChange}\r\n                        value={values.bank_details?.legal_address}\r\n                        errorText={errors.bank_details?.legal_address}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                        column\r\n                         name='contract_number'\r\n                        label='Номер договора'\r\n                        onChange={handleBankDetailsChange}\r\n                        value={values.bank_details?.contract_number}\r\n                        errorText={errors.bank_details?.contract_number}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <br />\r\n                    <hr />\r\n                    <center><h2>Дополнительные настройки</h2></center>\r\n\r\n\r\n                    <TableInput\r\n                        column\r\n                         name='callback_url'\r\n                        label='Callback url'\r\n                        onChange={handleSettingsChange}\r\n                        value={values.settings?.callback_url}\r\n                        errorText={errors.settings?.callback_url}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                        column\r\n                         name='callback_key'\r\n                        label='Callback key'\r\n                        onChange={handleSettingsChange}\r\n                        value={values.settings?.callback_key}\r\n                        errorText={errors.settings?.callback_key}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                        column\r\n                         name='successful_payment_redirect_url'\r\n                        label='Адрес редиректа при успешной оплате'\r\n                        onChange={handleSettingsChange}\r\n                        value={values.settings?.successful_payment_redirect_url}\r\n                        errorText={errors.settings?.successful_payment_redirect_url}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                        column\r\n                         name='failure_payment_redirect_url'\r\n                        label='Адрес редиректа при неуспешной оплате'\r\n                        onChange={handleSettingsChange}\r\n                        value={values.settings?.failure_payment_redirect_url}\r\n                        errorText={errors.settings?.failure_payment_redirect_url}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                        column\r\n                         name='email_for_reports'\r\n                        label='Email для отправки реестра'\r\n                        onChange={handleSettingsChange}\r\n                        value={values.settings?.email_for_reports}\r\n                        errorText={errors.settings?.email_for_reports}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n            </MyTableForm>\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default connect(null, { createShopThunk })(ShopsAddition)","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\n\r\nimport styles from './ShopUpdate.module.scss'\r\nimport { getShopDetailsThunk, setShopDetails, updateShopThunk } from '../../../redux/actions/shopActions'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\n\r\nconst ShopUpdate = ({\r\n  className,  details,  getShopDetailsThunk, setShopDetails, \r\n  updateShopThunk, \r\n  ...props}) => {\r\n\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n      failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n  \r\n\r\n  const {values, handleChange, errors, isValid, setValues, setIsValid } = useFormAndValidation()\r\n\r\n  const {id} = useParams()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    getShopDetailsThunk([id])\r\n    .then(checkRes(false))\r\n    return () => {\r\n      setShopDetails({\r\n          uuid: '',\r\n          partner_uuid: '',\r\n          name: '',\r\n        })\r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setIsValid(false)\r\n    // eslint-disable-next-line\r\n}, [])\r\n\r\nuseEffect(() => {\r\n  setValues(details)\r\n  // eslint-disable-next-line\r\n}, [details])\r\n\r\nconst onSubmit = (evt) => {\r\n  evt.preventDefault()\r\n  updateShopThunk({uuid: id, ...values})\r\n  .then(checkRes())\r\n  .then(res => {\r\n      if (res.ok) {\r\n          setTimeout(() => {\r\n            history.goBack()\r\n          }, 1000)\r\n      }\r\n  })\r\n  .catch((err) => console.log(err))\r\n  console.log(values);\r\n}\r\n\r\nconst handleSettingsChange = (evt) => {\r\n  const {name, value} = evt.target\r\n  let settings = {};\r\n  if (values.settings) {\r\n    settings = {\r\n      ...values.settings,\r\n      [name]: value\r\n    }\r\n  } else {\r\n    settings = {\r\n      [name]: value\r\n    }\r\n  }\r\n  setValues({\r\n    ...values,\r\n    settings\r\n  })\r\n  setIsValid(evt.target.closest('form').checkValidity());\r\n}\r\n\r\nconst handleBankDetailsChange = (evt) => {\r\n  const {name, value} = evt.target\r\n  let bank_details = {};\r\n  if (values.bank_details) {\r\n    bank_details = {\r\n      ...values.bank_details,\r\n      [name]: value\r\n    }\r\n  } else {\r\n    bank_details = {\r\n      [name]: value\r\n    }\r\n  }\r\n  setValues({\r\n    ...values,\r\n    bank_details\r\n  })\r\n  setIsValid(evt.target.closest('form').checkValidity());\r\n}\r\n\r\n    const cls = [\r\n        styles.ShopUpdate,\r\n        className\r\n    ]\r\n\r\n    if (!details) {\r\n      return <h1>нет такого магазина</h1>\r\n  }\r\n\r\n  if (!details.uuid) {\r\n      return <Spinner/>\r\n  }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n         <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список мерчантов</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners/${details.partner_uuid}`} exact>Детали мерчанта</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/shops/${id}`} exact>Детали магазина</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Редактирование магазина &nbsp; <strong>{details.name}</strong></BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <center><h2>Редактирование информации о магазине </h2></center>\r\n            <MyTableForm\r\n              onSubmit={onSubmit}\r\n              isValid={isValid}\r\n              buttonText={'Сохранить'}\r\n            >\r\n              <TableInput\r\n                    name='name'\r\n                    label='Наименование'\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    errorText={errors.name}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                />\r\n                <TableInput\r\n                      name='site'\r\n                    label='Сайт'\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    value={values.site}\r\n                    errorText={errors.site}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                />\r\n                 <br />\r\n                    <hr />\r\n                    <center><h2>Реквизиты</h2></center>\r\n                    <TableInput\r\n                        column\r\n                         name='legal_entity'\r\n                        label='Юридическое лицо'\r\n                        onChange={handleBankDetailsChange}\r\n                        value={values.bank_details?.legal_entity}\r\n                        errorText={errors.bank_details?.legal_entity}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                        column\r\n                         name='inn'\r\n                        label='ИНН'\r\n                        onChange={handleBankDetailsChange}\r\n                        value={values.bank_details?.inn}\r\n                        errorText={errors.bank_details?.inn}\r\n                        minLength={10}\r\n                        maxLength={12}\r\n                        title='ИНН состоит из 10-12 цифр'\r\n                    />\r\n                    <TableInput\r\n                        column\r\n                         name='kpp'\r\n                        label='КПП'\r\n                        onChange={handleBankDetailsChange}\r\n                        value={values.bank_details?.kpp}\r\n                        errorText={errors.bank_details?.kpp}\r\n                    />\r\n                    <TableInput\r\n                        column\r\n                         name='ogrn'\r\n                        label='ОГРН'\r\n                        onChange={handleBankDetailsChange}\r\n                        value={values.bank_details?.ogrn}\r\n                        errorText={errors.bank_details?.ogrn}\r\n                    />\r\n                    <TableInput\r\n                        column\r\n                         name='legal_address'\r\n                        label='Юридический адрес'\r\n                        onChange={handleBankDetailsChange}\r\n                        value={values.bank_details?.legal_address}\r\n                        errorText={errors.bank_details?.legal_address}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                        column\r\n                         name='contract_number'\r\n                        label='Номер договора'\r\n                        onChange={handleBankDetailsChange}\r\n                        value={values.bank_details?.contract_number}\r\n                        errorText={errors.bank_details?.contract_number}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <br />\r\n                    <hr />\r\n                    <center><h2>Дополнительные настройки</h2></center>\r\n\r\n\r\n                    <TableInput\r\n                        column\r\n                         name='callback_url'\r\n                        label='Callback url'\r\n                        onChange={handleSettingsChange}\r\n                        value={values.settings?.callback_url}\r\n                        errorText={errors.settings?.callback_url}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                        column\r\n                         name='callback_key'\r\n                        label='Callback key'\r\n                        onChange={handleSettingsChange}\r\n                        value={values.settings?.callback_key}\r\n                        errorText={errors.settings?.callback_key}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                        column\r\n                         name='successful_payment_redirect_url'\r\n                        label='Адрес редиректа при успешной оплате'\r\n                        onChange={handleSettingsChange}\r\n                        value={values.settings?.successful_payment_redirect_url}\r\n                        errorText={errors.settings?.successful_payment_redirect_url}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                        column\r\n                         name='failure_payment_redirect_url'\r\n                        label='Адрес редиректа при неуспешной оплате'\r\n                        onChange={handleSettingsChange}\r\n                        value={values.settings?.failure_payment_redirect_url}\r\n                        errorText={errors.settings?.failure_payment_redirect_url}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableInput\r\n                        column\r\n                         name='email_for_reports'\r\n                        label='Email для отправки реестра'\r\n                        onChange={handleSettingsChange}\r\n                        value={values.settings?.email_for_reports}\r\n                        errorText={errors.settings?.email_for_reports}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n\r\n            </MyTableForm>\r\n\r\n                <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    details: state.shops.details,\r\n  }\r\n}\r\n\r\n\r\n  export default connect(mapStateToProps, {\r\n    getShopDetailsThunk, setShopDetails, updateShopThunk\r\n  })(ShopUpdate)","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport FlexBlock from '../../../components/Blocks/FlexBlock/FlexBlock'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport BlockingButton from '../../../components/UI/MyButton/BlockingButton/BlockingButton'\r\nimport MyButton from '../../../components/UI/MyButton/MyButton'\r\nimport DetailsTableRow from '../../../components/UI/MyTable/DetailsTableRow/DetailsTableRow'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport { getAcquirersThunk } from '../../../redux/actions/acquirerActions'\r\nimport { deleteTerminalsThunk, getTerminalDetailsThunk, setTerminalDetails, updateTerminalThunk } from '../../../redux/actions/terminalActions'\r\n\r\nimport styles from './TerminalDetails.module.scss'\r\n\r\nconst TerminalDetails = ({\r\n  className, details, getTerminalDetailsThunk, deleteTerminalsThunk,\r\n  setTerminalDetails, acquirers, shops, getAcquirersThunk, updateTerminalThunk,\r\n  ...props}) => {\r\n\r\n  const { id } = useParams()\r\n  const history = useHistory()\r\n\r\n  const [partnerUUID, setPartnerUUID] = useState('')\r\n  const [shopName, setShopName] = useState('')\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n\r\n  const [bank, setBank] = useState('')\r\n\r\n  useEffect(() => {\r\n\r\n    getTerminalDetailsThunk([id])\r\n    .then(checkRes(false))\r\n\r\n    return () => {\r\n      setTerminalDetails({\r\n        uuid: '',\r\n        acquirer_uuid: '',\r\n        name: '',\r\n        config: {},\r\n        currency_num: '',\r\n        config_id: '',\r\n        operations: [],\r\n        store_uuid: ''\r\n        })\r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getAcquirersThunk()\r\n    .then(checkRes(false))\r\n    // eslint-disable-next-line\r\n}, [])\r\n\r\n  useEffect(() => {\r\n    if (acquirers?.length && details) {\r\n      const currentBank = acquirers?.find(i => i.uuid === details.acquirer_uuid)\r\n      setBank(currentBank?.name)\r\n    }\r\n  }, [acquirers, details])\r\n\r\n  useEffect(() => {\r\n    if (!shops && !details) return;\r\n    const currentShop = shops?.find(i => i.uuid === details.store_uuid)\r\n    setPartnerUUID(currentShop?.partner_uuid || '')\r\n    setShopName(currentShop?.name || '')\r\n  }, [shops, details])\r\n\r\n  const onBlock = () => {\r\n    const confirmed = window.confirm(\"Вы точно хотите заблокировать?\");\r\n    if (!confirmed) return;\r\n    updateTerminalThunk({uuid: id, blocked: true})\r\n    .then(checkRes(false))\r\n    .then(({data}) => setTerminalDetails(data))\r\n    .catch((err) => console.log(err))\r\n  }\r\n\r\n  const onActivate = () => {\r\n    const confirmed = window.confirm(\"Вы точно хотите активировать?\");\r\n    if (!confirmed) return;\r\n    updateTerminalThunk({uuid: id, blocked: false})\r\n    .then(checkRes(false))\r\n    .then(({data}) => setTerminalDetails(data))\r\n    .catch((err) => console.log(err))\r\n  }\r\n\r\n    const cls = [\r\n        styles.TerminalDetails,\r\n        className\r\n    ]\r\n\r\n    if (!details) {\r\n      return <h1>нет такого услуги</h1>\r\n    }\r\n\r\n    if (!details.uuid) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n         <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список мерчантов</BreadcrumbItem>\r\n          {partnerUUID && <BreadcrumbItem tag={NavLink} to={`/partners/${partnerUUID}`} exact>Детали мерчанта</BreadcrumbItem>}\r\n          <BreadcrumbItem tag={NavLink} to={`/shops/${details.store_uuid}`} exact>Детали магазина &nbsp; <strong>{shopName}</strong></BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Детали услуги &nbsp; <strong>{details.name}</strong></BreadcrumbItem>\r\n        </Breadcrumb>\r\n             <center><h1>Информация об услуге</h1></center>\r\n            <MyTable>\r\n                <DetailsTableRow\r\n                    label='uuid'\r\n                    data={details.uuid}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Банк'\r\n                    data={ bank || details.acquirer_uuid}\r\n                />\r\n                 <DetailsTableRow\r\n                    label='Статус'\r\n                    data={details.blocked? 'Заблокирован' : 'Активен'}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Код валюты'\r\n                    data={details.currency_num}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Наименование'\r\n                    data={details.name}\r\n                />\r\n                <DetailsTableRow\r\n                    label='id конфигурации'\r\n                    data={details.config_id}\r\n                />\r\n                 <DetailsTableRow\r\n                    label='Операции'\r\n                    data={details.operations.join(' ').toUpperCase()}\r\n                />\r\n        </MyTable>\r\n\r\n\r\n       <FlexBlock>\r\n          <MyButton\r\n                color={'secondary'}\r\n                onClick={() => history.push(`/terminals/update/${id}`)}\r\n                buttonText='редактировать'\r\n            />\r\n            <BlockingButton\r\n              blocked={details.blocked}\r\n              onActivate={onActivate}\r\n              onBlock={onBlock}\r\n            />\r\n       </FlexBlock>\r\n       \r\n            <SuccessAlert\r\n                    visible={successAlertVisible}\r\n                    setVisible={setSuccessAlertVisible}\r\n                    message={successMessage}\r\n                />\r\n\r\n            <FailureAlert\r\n                visible={failureAlertVisible}\r\n                setVisible={setFailureAlertVisible}\r\n                message={failureMessage}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    details: state.terminals.details,\r\n    acquirers: state.acquirers.acquirers, \r\n    shops: state.shops.shops,\r\n  }\r\n  }\r\n\r\n  \r\n\r\nexport default connect(mapStateToProps, {\r\n  getTerminalDetailsThunk, deleteTerminalsThunk, setTerminalDetails, \r\n  getAcquirersThunk, updateTerminalThunk,\r\n })(TerminalDetails)","import React from 'react'\r\n\r\nimport styles from './Terminals.module.scss'\r\n\r\nconst Terminals = ({className, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.Terminals,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <h1>Terminals</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Terminals","import React, { useState, useEffect } from 'react'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport TableMultiselect from '../../../components/UI/MyTable/TableMultiselect/TableMultiselect'\r\n\r\nimport styles from './TerminalsAddition.module.scss'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport { getAcquirersThunk } from '../../../redux/actions/acquirerActions'\r\nimport { createTerminalThunk } from '../../../redux/actions/terminalActions'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { activeOptions, currencyOptions, operationsOptions } from '../../../utils/constants'\r\n\r\n\r\n\r\nconst TerminalsAddition = ({\r\n    className, getAcquirersThunk, acquirers, createTerminalThunk,\r\n    ...props}) => {\r\n\r\n    const {shopId} = useParams()\r\n    const history = useHistory()\r\n\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n        failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n    \r\n\r\n    const {values, handleChange, errors, isValid, setValues, setIsValid } = useFormAndValidation()\r\n    \r\n    const [bankOptions, setBankOptions] = useState([{name: 'Загружаются данные...', active: true}])\r\n\r\n    const onSingleSelect = (selectedList, {jsonKey, value}) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [jsonKey]: value\r\n        })\r\n    }\r\n    const onBankSelect = (selectedList, selectedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            acquirer_uuid: selectedItem.uuid\r\n        })\r\n    }\r\n    const onMultiSelect = (selectedList, selectedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [selectedItem.jsonKey]: selectedList.map(i => i.value)\r\n        })\r\n    }\r\n\r\n    const onRemove = (selectedList, removedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [removedItem.jsonKey]: selectedList.map(i => i.value)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAcquirersThunk()\r\n        .then(checkRes(false))\r\n        .catch((err) => console.log(err))\r\n\r\n        // eslint-disable-next-line\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        if (acquirers) {\r\n            setBankOptions(acquirers)\r\n        }\r\n    }, [acquirers])\r\n\r\n    useEffect(() => {\r\n        setIsValid(false)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const cls = [\r\n        styles.TerminalsAddition,\r\n        className\r\n    ]\r\n\r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        const terminalData = {\r\n            ...values,\r\n            store_uuid: shopId\r\n        }\r\n        console.log(terminalData);\r\n\r\n        createTerminalThunk(terminalData)\r\n        .then((res) => {\r\n          checkRes()(res);\r\n          return res;\r\n        })\r\n        .then((res) => {\r\n          if (res.ok) {\r\n            setTimeout(() => {\r\n            history.goBack()\r\n            }, 3000);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err))\r\n        .then(() => console.log(\"TerminalsAddition\"));\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n         <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список мерчантов</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/shops/${shopId}`} exact>Детали магазина</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Добавление услуги</BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <center><h1>Добавление услуги</h1></center>\r\n            <MyTableForm\r\n                onSubmit={onSubmit}\r\n                isValid={isValid}\r\n            >\r\n\r\n                    <TableInput\r\n                         name='name'\r\n                        label='Наименование'\r\n                        required={true}\r\n                        onChange={handleChange}\r\n                        value={values.name}\r\n                        errorText={errors.name}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n\r\n                    <TableInput\r\n                         name='bank_account_number'\r\n                        label='Номер банковского счета'\r\n                        required={true}\r\n                        onChange={handleChange}\r\n                        value={values.bank_account_number}\r\n                        errorText={errors.bank_account_number}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    \r\n                    <TableMultiselect\r\n                        label='Банк'\r\n                        options={bankOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onBankSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                    />\r\n                     <TableMultiselect\r\n                        label='Aктивен'\r\n                        options={activeOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onSingleSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                        selectedValues={[{name: 'Да', value: true, jsonKey: 'active'}]}\r\n                    />\r\n                    <TableMultiselect\r\n                        label='Операции'\r\n                        options={operationsOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onMultiSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                    />\r\n                    <TableMultiselect\r\n                        label='Код валюты'\r\n                        options={currencyOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onSingleSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                    />\r\n                    <TableInput\r\n                         name='config_id'\r\n                        label='id конфигурации'\r\n                        required={true}\r\n                        onChange={handleChange}\r\n                        value={values.config_id}\r\n                        errorText={errors.config_id}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                   \r\n            </MyTableForm>\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        acquirers: state.acquirers.acquirers,\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n     getAcquirersThunk, createTerminalThunk,\r\n    })(TerminalsAddition)","import React, { useState, useEffect } from 'react'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport TableMultiselect from '../../../components/UI/MyTable/TableMultiselect/TableMultiselect'\r\n\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport { getTerminalDetailsThunk, setTerminalDetails, updateTerminalThunk } from '../../../redux/actions/terminalActions'\r\n\r\n\r\n\r\nimport styles from './TerminalUpdate.module.scss'\r\nimport { activeOptions, currencyOptions, operationsOptions } from '../../../utils/constants'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\n\r\nconst TerminalUpdate = ({\r\n  className, getTerminalDetailsThunk, details, acquirers, \r\n  setTerminalDetails, updateTerminalThunk,\r\n  ...props}) => {\r\n\r\n  const {id} = useParams()\r\n  const history = useHistory()\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n\r\n\r\n  const {values, handleChange, errors, isValid, setValues } = useFormAndValidation()\r\n  const [activePreselect, setActivePreselect] = useState([{name: 'загружается...'}])\r\n  const [operationsPreselect, setOperationsPreselect] = useState([{name: 'загружается...'}])\r\n  const [currencyPreselect, setcurrencyPreselect] = useState([{name: 'загружается...'}])\r\n \r\nuseEffect(() => {\r\n  const {acquirer_uuid, store_uuid, ...rest} = details\r\n  setValues(rest)\r\n  // eslint-disable-next-line\r\n}, [details])\r\n\r\nuseEffect(() => {\r\n  if (details) {\r\n\r\n    const isActive = activeOptions.find(i => i.value === details.active)\r\n\r\n    if (isActive) {\r\n      setActivePreselect([isActive])\r\n    }\r\n\r\n    const preselectedOperations = operationsOptions.filter(i => {\r\n        return details.operations.includes(i.value)\r\n    } )\r\n\r\n    if (preselectedOperations.length) {\r\n      setOperationsPreselect(preselectedOperations)\r\n    }\r\n\r\n    const preselectedCurrency = currencyOptions.find(i => {\r\n      return details.currency_num === i.value\r\n  } )\r\n\r\n    if (preselectedCurrency) {\r\n      setcurrencyPreselect([preselectedCurrency])\r\n    }\r\n\r\n  }\r\n  // eslint-disable-next-line\r\n}, [details])\r\n\r\n\r\nuseEffect(() => {\r\n\r\n  getTerminalDetailsThunk([id])\r\n  .then(checkRes(false))\r\n\r\n  return () => {\r\n    setTerminalDetails({\r\n        uuid: '',\r\n        acquirer_uuid: '',\r\n        name: '',\r\n        config: {},\r\n        currency_num: '',\r\n        config_id: '',\r\n        operations: [],\r\n        store_uuid: ''\r\n      })\r\n  }\r\n  // eslint-disable-next-line \r\n}, [])\r\n\r\n  const onSingleSelect = (selectedList, {jsonKey, value}) => {\r\n      console.log(selectedList);\r\n      setValues({\r\n          ...values,\r\n          [jsonKey]: value\r\n      })\r\n  }\r\n\r\n  const onMultiSelect = (selectedList, selectedItem) => {\r\n      console.log(selectedList);\r\n      setValues({\r\n          ...values,\r\n          [selectedItem.jsonKey]: selectedList.map(i => i.value)\r\n      })\r\n  }\r\n\r\n  const onRemove = (selectedList, removedItem) => {\r\n      console.log(selectedList);\r\n      setValues({\r\n          ...values,\r\n          [removedItem.jsonKey]: selectedList.map(i => i.value)\r\n      })\r\n  }\r\n\r\n    const cls = [\r\n        styles.TerminalUpdate,\r\n        className\r\n    ]\r\n\r\n    const onSubmit = (evt) => {\r\n      evt.preventDefault()\r\n      const terminalData = {\r\n          ...values,\r\n          uuid: id\r\n      }\r\n      console.log(terminalData);\r\n\r\n      updateTerminalThunk(terminalData)\r\n      .then((res) => {\r\n        checkRes()(res)\r\n        return res\r\n      })\r\n      .then(res => {\r\n          if (res.ok) {\r\n              setTimeout(() => {\r\n                history.goBack()\r\n              }, 1000)\r\n          }\r\n      })\r\n      .then(() => console.log('TerminalsAddition'))\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  \r\n    if (!details) {\r\n      return <h1>нет такого услуги</h1>\r\n    }\r\n\r\n    if (!details.uuid) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n         <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список мерчантов</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/shops/${details.store_uuid}`} exact>Детали магазина</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/terminals/${id}`} exact>Детали услуги</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Обновление услуги &nbsp; <strong> {details.name}</strong> </BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <center><h1>Обновление услуги</h1></center>\r\n            <MyTableForm\r\n                onSubmit={onSubmit}\r\n                isValid={isValid}\r\n                buttonText='Сохранить'\r\n            >\r\n                    <TableInput\r\n                         name='name'\r\n                        label='Наименование'\r\n                        onChange={handleChange}\r\n                        value={values.name}\r\n                        errorText={errors.name}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                     <TableMultiselect\r\n                        label='Aктивен'\r\n                        options={activeOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onSingleSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                        selectedValues={activePreselect}\r\n                    />\r\n                    <TableMultiselect\r\n                        label='Операции'\r\n                        options={operationsOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onMultiSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        selectedValues={operationsPreselect}\r\n                    />\r\n                    <TableMultiselect\r\n                        label='Код валюты'\r\n                        options={currencyOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onSingleSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                        selectedValues={currencyPreselect}\r\n                    />\r\n                    <TableInput\r\n                         name='config_id'\r\n                        label='id конфигурации'\r\n                        onChange={handleChange}\r\n                        value={values.config_id}\r\n                        errorText={errors.config_id}\r\n                        minLength={1}\r\n                        maxLength={200}\r\n                    />\r\n            </MyTableForm>\r\n\r\n                <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    details: state.terminals.details,\r\n    // acquirers: state.acquirers.acquirers,\r\n  }\r\n  }\r\n\r\n  \r\n\r\nexport default connect(mapStateToProps, {\r\n   getTerminalDetailsThunk, setTerminalDetails, updateTerminalThunk\r\n  }) (TerminalUpdate)","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport AccountCreation from '../../pages/Accounts/AccountCreation/AccountCreation'\r\nimport AccountDetails from '../../pages/Accounts/AccountDetails/AccountDetails'\r\nimport Accounts from '../../pages/Accounts/Accounts'\r\nimport AccountsUpdate from '../../pages/Accounts/AccountsUpdate/AccountsUpdate'\r\nimport AcquirerAddition from '../../pages/Acquirers/AcquirerAddition/AcquirerAddition'\r\nimport Acquirers from '../../pages/Acquirers/Acquirers'\r\nimport AcquirersDetails from '../../pages/Acquirers/AcquirersDetails/AcquirersDetails'\r\nimport AcquirersUpdate from '../../pages/Acquirers/AcquirersUpdate/AcquirersUpdate'\r\nimport HomePage from '../../pages/HomePage/HomePage'\r\nimport News from '../../pages/News/News'\r\nimport NewsCreation from '../../pages/News/NewsCreation/NewsCreation'\r\nimport NewsDetails from '../../pages/News/NewsDetails/NewsDetails'\r\nimport PartnerAcquierers from '../../pages/PartnerAcquierers/PartnerAcquierers'\r\nimport PartnerAcquierersAddition from '../../pages/PartnerAcquierers/PartnerAcquierersAddition/PartnerAcquierersAddition'\r\nimport PartnerAcquierersDetails from '../../pages/PartnerAcquierers/PartnerAcquierersDetails/PartnerAcquierersDetails'\r\nimport PartnerAcquierersUpdate from '../../pages/PartnerAcquierers/PartnerAcquierersUpdate/PartnerAcquierersUpdate'\r\nimport PartnerAddition from '../../pages/Partners/PartnerAddition/PartnerAddition'\r\nimport PartnerDetails from '../../pages/Partners/PartnerDetails/PartnerDetails'\r\nimport Partners from '../../pages/Partners/Partners'\r\nimport PartnerUpdate from '../../pages/Partners/PartnerUpdate/PartnerUpdate'\r\nimport RoleAddition from '../../pages/Roles/RoleAddition/RoleAddition'\r\nimport RoleDetails from '../../pages/Roles/RoleDetails/RoleDetails'\r\nimport Roles from '../../pages/Roles/Roles'\r\nimport RoleUpdate from '../../pages/Roles/RoleUpdate/RoleUpdate'\r\nimport ShopDetails from '../../pages/Shops/ShopDetails/ShopDetails'\r\nimport Shops from '../../pages/Shops/Shops'\r\nimport ShopsAddition from '../../pages/Shops/ShopsAddition/ShopsAddition'\r\nimport ShopUpdate from '../../pages/Shops/ShopUpdate/ShopUpdate'\r\nimport TerminalDetails from '../../pages/Terminals/TerminalDetails/TerminalDetails'\r\nimport Terminals from '../../pages/Terminals/Terminals'\r\nimport TerminalsAddition from '../../pages/Terminals/TerminalsAddition/TerminalsAddition'\r\nimport TerminalUpdate from '../../pages/Terminals/TerminalUpdate/TerminalUpdate'\r\n\r\nimport styles from './Main.module.scss'\r\n\r\nconst Main = (props) => {\r\n\r\n    return (\r\n        <div className={styles.Main}>\r\n            <Switch>\r\n                <Route path='/' exact component={HomePage} />\r\n                <Route path='/accounts' exact component={Accounts} />\r\n                <Route path='/accounts/:id' exact component={AccountDetails} />\r\n                <Route path='/accounts/:id/update' exact component={AccountsUpdate} />\r\n                <Route path='/create-account' component={AccountCreation} />\r\n                <Route path='/roles' exact component={Roles} />\r\n                <Route path='/roles/:id' exact component={RoleDetails} />\r\n                <Route path='/roles/:id/update' exact component={RoleUpdate} />\r\n                <Route path='/add-role' exact component={RoleAddition} />\r\n                <Route path='/news' exact component={News} />\r\n                <Route path='/news/:id' component={NewsDetails} />\r\n                <Route path='/create-news' component={NewsCreation} />\r\n                <Route path='/acquirers' exact component={Acquirers} />\r\n                <Route path='/acquirers/:id' exact component={AcquirersDetails} />\r\n                <Route path='/acquirers/update/:id' exact component={AcquirersUpdate} />\r\n                <Route path='/add-acquirer' component={AcquirerAddition} />\r\n                <Route path='/partners' exact component={Partners} />\r\n                <Route path='/partners/:id' exact component={PartnerDetails} />\r\n                <Route path='/partners/update/:id' exact component={PartnerUpdate} />\r\n                <Route path='/add-partner' component={PartnerAddition} />\r\n                <Route path='/partners-acquirers/:partnerId' exact component={PartnerAcquierers} />\r\n                <Route path='/partners-acquirers/:partnerId/:id' exact component={PartnerAcquierersDetails} />\r\n                <Route path='/partners-acquirers/:partnerId/:id/update' exact component={PartnerAcquierersUpdate} />\r\n                <Route path='/add-partner-acquirer/:partnerId' component={PartnerAcquierersAddition} />\r\n                <Route path='/shops' exact component={Shops} />\r\n                <Route path='/shops/:id' exact component={ShopDetails} />\r\n                <Route path='/shops/update/:id' exact component={ShopUpdate} />\r\n                <Route path='/add-shop/:partnerId' component={ShopsAddition} />\r\n                <Route path='/terminals' exact component={Terminals} />\r\n                <Route path='/terminals/:id' exact component={TerminalDetails} />\r\n                <Route path='/terminals/update/:id' exact component={TerminalUpdate} />\r\n                <Route path='/add-terminal/:shopId' exact component={TerminalsAddition} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","import React, { Fragment } from 'react'\r\nimport { UncontrolledCollapse } from 'reactstrap'\r\n\r\nimport styles from './MyDropDown.module.scss'\r\n\r\nconst MyDropDown = ({title, children, className, ...props}) => {\r\n\r\n  const id = 'toggler' +  Math.random().toString().slice(2)\r\n\r\n  const cls = [\r\n    styles.MyDropDown,\r\n    className\r\n  ]\r\n\r\n    return (\r\n        <Fragment>\r\n          <p id={id} className={cls.join(' ')} >{title}</p>\r\n          <UncontrolledCollapse toggler={`#${id}`}>\r\n            {children}\r\n          </UncontrolledCollapse>\r\n          <hr />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default MyDropDown","import React from 'react'\r\nimport { NavLink as RRNavLink } from \"react-router-dom\";\r\nimport { NavLink } from 'reactstrap';\r\n\r\nimport styles from './MyLink.module.scss'\r\n\r\nconst MyLink = (props) => {\r\n\r\n    return (\r\n      <NavLink tag={RRNavLink} \r\n        className={styles.MyLink}\r\n        {...props} \r\n        activeStyle={{\r\n          fontWeight: \"bold\",\r\n          color: \"#A31FED\"\r\n        }}\r\n      >{props.children}</NavLink>\r\n    )\r\n}\r\n\r\nexport default MyLink","import React from \"react\";\r\nimport { Nav, NavItem } from 'reactstrap';\r\nimport MyDropDown from \"../UI/MyDropDown/MyDropDown\";\r\nimport MyLink from \"../UI/MyLink/MyLink\";\r\n\r\nimport styles from \"./SideMenu.module.scss\";\r\n\r\nconst SideMenu = ({isOpen, toggle}) => {\r\n  \r\n\r\n  const cls = [\r\n    styles.SideMenu,\r\n    !isOpen? styles.hiddenMenu: '',\r\n  ]\r\n\r\n  // const buttonCls = [\r\n  //   styles.sideMenuBtn,\r\n  // ]\r\n\r\n\r\n  return (\r\n    <div className={cls.join(' ')}>\r\n      {/* <div \r\n        className={buttonCls.join(' ')}\r\n        onClick={toggle}\r\n       >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><polygon points=\"12 2 2 7 12 12 22 7 12 2\"></polygon><polyline points=\"2 17 12 22 22 17\"></polyline><polyline points=\"2 12 12 17 22 12\"></polyline></svg>\r\n      </div> */}\r\n      <MyDropDown title={`Управление аккаунтами`}>\r\n        <Nav vertical>\r\n            <NavItem>\r\n              <MyLink to=\"/accounts\">Аккаунты</MyLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <MyLink to=\"/create-account\">Создать аккаунт</MyLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <MyLink to=\"/roles\">Роли</MyLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <MyLink to=\"/add-role\">Добавить роль</MyLink>\r\n            </NavItem>\r\n          </Nav>\r\n      </MyDropDown>\r\n      <MyDropDown title={'Интеграция'}>\r\n        <Nav vertical>\r\n            <NavItem>\r\n              <MyLink to=\"/partners\">Мерчанты</MyLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <MyLink to=\"/acquirers\">Банки</MyLink>\r\n            </NavItem>\r\n        </Nav>\r\n      </MyDropDown>\r\n      <MyDropDown title={'Транзакции'}>\r\n        <Nav vertical>\r\n            <NavItem>\r\n              <MyLink to=\"/transactions\">Транзакции</MyLink>\r\n            </NavItem>\r\n        </Nav>\r\n      </MyDropDown>\r\n\r\n   \r\n \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideMenu;\r\n","import React from 'react'\r\nimport { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useMediaQuery } from \"@react-hook/media-query\";\r\nimport Footer from '../../components/Footer/Footer'\r\nimport Header from '../../components/Header/Header'\r\nimport Login from '../../components/Login/Login'\r\nimport Main from '../../components/Main/Main'\r\nimport SideMenu from '../../components/SideMenu/SideMenu'\r\nimport { refreshToken, setIsLoggedIn } from '../../redux/actions/loginActions'\r\nimport { getAccessExpiry } from '../../utils/utils'\r\n\r\nimport styles from './Layout.module.scss'\r\n\r\nconst Layout = ({isLoggedIn, refreshToken, setIsLoggedIn}) => {\r\n\r\n    const matches = useMediaQuery('(min-width: 768px)')\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const toggle = () => setIsOpen(!isOpen);\r\n  \r\n  \r\n    useEffect(() => {\r\n      setIsOpen(matches)\r\n    }, [matches])\r\n\r\n    useEffect(() => {\r\n        const tokenTime = getAccessExpiry()\r\n        if (!tokenTime) return\r\n        const isExpired = Date.now() >= tokenTime\r\n        const delay = Math.floor((tokenTime - Date.now()))\r\n        let timer;\r\n        console.log(delay);\r\n        if (isExpired) {\r\n            refreshToken()\r\n        } else {\r\n            setIsLoggedIn(true)\r\n            timer = setTimeout(() => {\r\n                refreshToken()\r\n            }, delay )\r\n        }\r\n        return () => clearTimeout(timer)\r\n    },[refreshToken, setIsLoggedIn])\r\n\r\n    if (!isLoggedIn) {\r\n        return (\r\n            <Login/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={styles.Layout}>\r\n            <Header\r\n                isOpen={isOpen}\r\n                toggle={toggle}\r\n            />\r\n            <div className='d-flex'>\r\n                <SideMenu\r\n                    isOpen={isOpen}\r\n                    toggle={toggle}\r\n                />\r\n                <Main/>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.login.isLoggedIn,\r\n        // errors: state.login.errors,\r\n        // loading: state.login.loading,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {refreshToken, setIsLoggedIn})(Layout)","import React from 'react'\r\n\r\nimport styles from './ErrorBoundary.module.scss'\r\n\r\nclass ErrorBoundary extends React.Component {\r\n\r\n    state = { hasError: false };\r\n  \r\n    static getDerivedStateFromError(error) {\r\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n      return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error, errorInfo) {\r\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n      console.log(error, errorInfo)\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) {\r\n        // Можно отрендерить запасной UI произвольного вида\r\n        return <h1 className={styles.ErrorBoundary}>Что-то пошло не так.</h1>;\r\n      }\r\n  \r\n      return this.props.children; \r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary","import { CLOSE_MENU, OPEN_MENU } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    menuIsOpened: false,\r\n}\r\n\r\n\r\nexport default function layoutReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case OPEN_MENU:\r\n            return { ...state, menuIsOpened: true }\r\n        case CLOSE_MENU:\r\n            return { ...state, menuIsOpened: false }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { LOG_OUT, SET_IS_ADMIN, SET_IS_LOGGED_IN, SET_LOGIN_ERRORS, SET_LOGIN_LOADING } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  isLoggedIn: false,\r\n  errors: null,\r\n  loading: false,\r\n  user: 'customer',\r\n  authData: null,\r\n  isAdmin: false\r\n}\r\n\r\nexport default function loginReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_IS_LOGGED_IN:\r\n      return {\r\n        ...state, \r\n        isLoggedIn: action.status,\r\n        authData: action.authData\r\n      }\r\n    case SET_IS_ADMIN:\r\n      return {\r\n        ...state,\r\n        isAdmin: action.isAdmin,\r\n        user: 'admin',\r\n      }\r\n    case SET_LOGIN_ERRORS:\r\n      return {\r\n        ...state,\r\n        errors: action.errors\r\n      }\r\n    case SET_LOGIN_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status,\r\n      }\r\n    case LOG_OUT:\r\n      return initialState\r\n    default:\r\n      return state;\r\n  }\r\n}","import { SET_NEWS_FAILURE, GET_NEWS_SUCCESS, NEWS_LOADING,\r\n  GET_NEWS_DETAILS,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  news: [],\r\n  loading: false,\r\n  errors: {\r\n    news: null,\r\n    details: null,\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  details: {},\r\n}\r\n\r\nexport default function blogReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_NEWS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        news: action.news\r\n      }\r\n    case NEWS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status\r\n      }\r\n    case SET_NEWS_FAILURE:\r\n      return {\r\n        ...state,\r\n        errors: {\r\n          ...state.errors,\r\n          ...action.errors\r\n        }\r\n      }\r\n    case GET_NEWS_DETAILS:\r\n        return {\r\n          ...state,\r\n          details: action.details\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { ACCOUNTS_LOADING, SET_ACCOUNTS_DETAILS, ACCOUNTS_FAILURE, SET_ACCOUNTS, ACCOUNTS_SUCCESS } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  accounts: [],\r\n  loading: false,\r\n  details: {\r\n    uuid: '',\r\n  },\r\n  errors: {\r\n    accounts: null,\r\n    details: null,\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  success: {\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  filter: {\r\n    limit: 100,\r\n    name: '',\r\n    offset: 0,\r\n    sort_by: [],\r\n    uuid: ''\r\n  }\r\n}\r\n\r\nexport default function accountReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ACCOUNTS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status\r\n      }\r\n\r\n    case SET_ACCOUNTS:\r\n      return {\r\n        ...state,\r\n        accounts: action.accounts\r\n      }\r\n\r\n    case SET_ACCOUNTS_DETAILS:\r\n      return {\r\n        ...state,\r\n        details: action.details\r\n      }\r\n\r\n    case ACCOUNTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        errors: {\r\n          ...state.errors,\r\n          ...action.errors\r\n        }\r\n      }\r\n\r\n    case ACCOUNTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: {\r\n          ...state.success,\r\n          ...action.message\r\n        }\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { SET_PARTNERS, SET_PARTNER_DETAILS, PARTNERS_LOADING, PARTNERS_FAILURE, PARTNERS_SUCCESS } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  partners: [],\r\n  loading: false,\r\n  details: {\r\n    uuid: '',\r\n    inn: '',\r\n    name: ''\r\n  },\r\n  errors: {\r\n    partners: null,\r\n    details: null,\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  success: {\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  filter: {\r\n    inn: '',\r\n    limit: 100,\r\n    name: '',\r\n    offset: 0,\r\n    sort_by: [],\r\n    uuid: ''\r\n  }\r\n}\r\n\r\nexport default function partnerReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n\r\n    case PARTNERS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status\r\n      }\r\n\r\n    case SET_PARTNERS:\r\n      return {\r\n        ...state,\r\n        partners: action.partners\r\n      }\r\n\r\n    case SET_PARTNER_DETAILS:\r\n      return {\r\n        ...state,\r\n        details: action.details\r\n      }\r\n  \r\n      case PARTNERS_FAILURE:\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            ...state.errors,\r\n            ...action.errors\r\n          }\r\n        }\r\n\r\n      case PARTNERS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          success: {\r\n            ...state.success,\r\n            ...action.message\r\n          }\r\n        }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { ACQUIRERS_FAILURE, ACQUIRERS_LOADING, ACQUIRERS_SUCCESS, SET_ACQUIRERS, \r\n  SET_ACQUIRER_DETAILS, \r\n} from \"../actions/actionTypes\";\r\n\r\n\r\nconst initialState = {\r\n  acquirers: [],\r\n  loading: false,\r\n  details: {\r\n    uuid: '',\r\n    active: true,\r\n    alias: '',\r\n    name: '',\r\n  },\r\n  errors: {\r\n    acquirers: null,\r\n    details: null,\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  success: {\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  filter: {\r\n    limit: 100,\r\n    name: '',\r\n    offset: 0,\r\n    sort_by: [],\r\n    uuid: '',\r\n    active: true,\r\n    alias: '',\r\n  }\r\n}\r\n\r\nexport default function acquirerReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ACQUIRERS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status,\r\n      };\r\n    case ACQUIRERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: {\r\n          ...state.success,\r\n          ...action.message,\r\n        },\r\n      };\r\n    case ACQUIRERS_FAILURE:\r\n      return {\r\n        ...state,\r\n        errors: {\r\n          ...state.errors,\r\n          ...action.errors,\r\n        },\r\n      };\r\n    case SET_ACQUIRER_DETAILS:\r\n      return {\r\n        ...state,\r\n        details: action.details,\r\n      };\r\n    case SET_ACQUIRERS:\r\n      return {\r\n        ...state,\r\n        acquirers: action.acquirers,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_SHOPS, SET_SHOP_DETAILS, SHOPS_FAILURE, SHOPS_LOADING, SHOPS_SUCCESS } from \"../actions/actionTypes\";\r\n\r\n\r\nconst initialState = {\r\n  shops: [],\r\n  loading: false,\r\n  details: {\r\n    uuid: '',\r\n    partner_uuid: '',\r\n    name: '',\r\n  },\r\n  errors: {\r\n    shops: null,\r\n    details: null,\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  success: {\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  filter: {\r\n    limit: 100,\r\n    name: '',\r\n    offset: 0,\r\n    sort_by: [],\r\n    uuid: '',\r\n    partner_uuid: '',\r\n  }\r\n}\r\n\r\nexport default function shopReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SHOPS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status,\r\n      };\r\n    case SHOPS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: {\r\n          ...state.success,\r\n          ...action.message,\r\n        },\r\n      };\r\n    case SHOPS_FAILURE:\r\n      return {\r\n        ...state,\r\n        errors: {\r\n          ...state.errors,\r\n          ...action.errors,\r\n        },\r\n      };\r\n    case SET_SHOP_DETAILS:\r\n      return {\r\n        ...state,\r\n        details: action.details,\r\n      };\r\n    case SET_SHOPS:\r\n      return {\r\n        ...state,\r\n        shops: action.shops,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_TERMINALS, SET_TERMINAL_DETAILS, TERMINALS_FAILURE, TERMINALS_LOADING, TERMINALS_SUCCESS } from \"../actions/actionTypes\";\r\n\r\n\r\nconst initialState = {\r\n  terminals: [],\r\n  loading: false,\r\n  details: {\r\n    uuid: '',\r\n    acquirer_uuid: '',\r\n    name: '',\r\n    config: {},\r\n    currency_num: '',\r\n    config_id: '',\r\n    operations: [],\r\n    store_uuid: ''\r\n  },\r\n  errors: {\r\n    terminals: null,\r\n    details: null,\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  success: {\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  filter: {\r\n    limit: 100,\r\n    name: '',\r\n    offset: 0,\r\n    sort_by: [],\r\n    uuid: '',\r\n  }\r\n}\r\n\r\nexport default function terminalReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case TERMINALS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status,\r\n      };\r\n    case TERMINALS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: {\r\n          ...state.success,\r\n          ...action.message,\r\n        },\r\n      };\r\n    case TERMINALS_FAILURE:\r\n      return {\r\n        ...state,\r\n        errors: {\r\n          ...state.errors,\r\n          ...action.errors,\r\n        },\r\n      };\r\n    case SET_TERMINAL_DETAILS:\r\n      return {\r\n        ...state,\r\n        details: action.details,\r\n      };\r\n    case SET_TERMINALS:\r\n      return {\r\n        ...state,\r\n        terminals: action.terminals,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_PARTNER_ACQUIRERS, SET_PARTNER_ACQUIRER_DETAILS, PARTNER_ACQUIRERS_LOADING, PARTNER_ACQUIRERS_FAILURE, PARTNER_ACQUIRERS_SUCCESS } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  partnerAcquirers: [],\r\n  loading: false,\r\n  details: {\r\n    uuid: '',\r\n    acquirer_uuid: '',\r\n    active: '',\r\n    card_brands: [],\r\n    partner_uuid: '',\r\n    priority: '',\r\n  },\r\n  errors: {\r\n    partnerAcquirers: null,\r\n    details: null,\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  success: {\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  filter: {\r\n    limit: 100,\r\n    offset: 0,\r\n    sort_by: [],\r\n    uuid: ''\r\n  }\r\n}\r\n\r\nexport default function partnerAcquirerReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n\r\n    case PARTNER_ACQUIRERS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status\r\n      }\r\n\r\n    case SET_PARTNER_ACQUIRERS:\r\n      return {\r\n        ...state,\r\n        partnerAcquirers: action.partnerAcquirers\r\n      }\r\n\r\n    case SET_PARTNER_ACQUIRER_DETAILS:\r\n      return {\r\n        ...state,\r\n        details: action.details\r\n      }\r\n  \r\n      case PARTNER_ACQUIRERS_FAILURE:\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            ...state.errors,\r\n            ...action.errors\r\n          }\r\n        }\r\n\r\n      case PARTNER_ACQUIRERS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          success: {\r\n            ...state.success,\r\n            ...action.message\r\n          }\r\n        }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { ROLES_LOADING, SET_ROLES_DETAILS, ROLES_FAILURE, SET_ROLES, ROLES_SUCCESS } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  roles: [],\r\n  loading: false,\r\n  details: {\r\n    uuid: '',\r\n  },\r\n  errors: {\r\n    roles: null,\r\n    details: null,\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  success: {\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  filter: {\r\n    limit: 100,\r\n    name: '',\r\n    offset: 0,\r\n    sort_by: [],\r\n    uuid: ''\r\n  }\r\n}\r\n\r\nexport default function roleReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ROLES_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status\r\n      }\r\n\r\n    case SET_ROLES:\r\n      return {\r\n        ...state,\r\n        roles: action.roles\r\n      }\r\n\r\n    case SET_ROLES_DETAILS:\r\n      return {\r\n        ...state,\r\n        details: action.details\r\n      }\r\n\r\n    case ROLES_FAILURE:\r\n      return {\r\n        ...state,\r\n        errors: {\r\n          ...state.errors,\r\n          ...action.errors\r\n        }\r\n      }\r\n\r\n    case ROLES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: {\r\n          ...state.success,\r\n          ...action.message\r\n        }\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { ACCOUNT_ROLES_LOADING, SET_ACCOUNT_ROLES_DETAILS, ACCOUNT_ROLES_FAILURE, SET_ACCOUNT_ROLES, ACCOUNT_ROLES_SUCCESS } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  accountRoles: [],\r\n  loading: false,\r\n  details: {\r\n    uuid: '',\r\n  },\r\n  errors: {\r\n    accountRoles: null,\r\n    details: null,\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  success: {\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  filter: {\r\n    limit: 100,\r\n    name: '',\r\n    offset: 0,\r\n    sort_by: [],\r\n    uuid: ''\r\n  }\r\n}\r\n\r\nexport default function accountRolesReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ACCOUNT_ROLES_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status\r\n      }\r\n\r\n    case SET_ACCOUNT_ROLES:\r\n      return {\r\n        ...state,\r\n        accountRoles: action.accountRoles\r\n      }\r\n\r\n    case SET_ACCOUNT_ROLES_DETAILS:\r\n      return {\r\n        ...state,\r\n        details: action.details\r\n      }\r\n\r\n    case ACCOUNT_ROLES_FAILURE:\r\n      return {\r\n        ...state,\r\n        errors: {\r\n          ...state.errors,\r\n          ...action.errors\r\n        }\r\n      }\r\n\r\n    case ACCOUNT_ROLES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: {\r\n          ...state.success,\r\n          ...action.message\r\n        }\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import {combineReducers} from 'redux'\r\nimport layoutReducer from './layoutReducer'\r\nimport loginReducer from './loginReducer'\r\nimport blogReducer from './blogReducer'\r\nimport accountReducer from './accountReducer'\r\nimport partnerReducer from './partnerReducer'\r\nimport acquirerReducer from './acquirerReducer'\r\nimport shopReducer from './shopReducer'\r\nimport terminalReducer from './terminalReducer'\r\nimport partnerAcquirerReducer from './partnerAcquirersReducer'\r\nimport roleReducer from './roleReducer'\r\nimport accountRolesReducer from './accountRolesReducer'\r\n\r\nexport default combineReducers({\r\n    layout: layoutReducer,\r\n    login: loginReducer,\r\n    blog: blogReducer,\r\n    accounts: accountReducer,\r\n    partners: partnerReducer,\r\n    acquirers: acquirerReducer,\r\n    shops: shopReducer,\r\n    terminals: terminalReducer,\r\n    partnerAcquirers: partnerAcquirerReducer,\r\n    roles: roleReducer,\r\n    accountRoles: accountRolesReducer,\r\n\r\n\r\n\r\n})","import thunk from 'redux-thunk';\r\nimport {createStore, compose, applyMiddleware} from 'redux'\r\n\r\nimport rootReducer from './reducers/rootReducer'\r\n\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    }) : compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nexport default store;","import React from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport Layout from \"../../containers/Layout/Layout\";\r\nimport ErrorBoundary from \"../ErrorBoundary/ErrorBoundary\";\r\nimport store from \"../../redux/store\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Provider store={store}>\r\n       {/*  \"homepage\": \"https://gennady-bars.github.io/vepay-admin/\", */}\r\n        <BrowserRouter basename='/vepay-admin'>\r\n        {/* <BrowserRouter> */}\r\n          <ErrorBoundary>\r\n            <Layout />\r\n          </ErrorBoundary>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}