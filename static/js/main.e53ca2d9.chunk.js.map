{"version":3,"sources":["components/Login/Login.module.scss","components/UI/MyInput/MyInput.module.scss","components/UI/MyTable/StatusTD/StatusTD.module.scss","pages/Partners/Partners.module.scss","components/Header/Header.module.scss","components/Spinner/Spinner.module.scss","pages/Accounts/Accounts.module.scss","pages/News/News.module.scss","components/Footer/Footer.module.scss","img/logo-white-text.svg","components/UI/MyTable/MyTable.module.scss","components/MyAlert/SuccessAlert/SuccessAlert.module.scss","components/MyAlert/FailureAlert/FailureAlert.module.scss","components/UI/MyTable/MyTableForm/MyTableForm.module.scss","components/UI/MyButton/MyButton.module.scss","components/UI/MyTable/ClickableTH/ClickableTH.module.scss","components/UI/MyTable/DetailsTableRow/DetailsTableRow.module.scss","components/Blocks/FlexBlock/FlexBlock.module.scss","pages/News/NewsCreation/NewsCreation.module.scss","pages/News/NewsDetails/NewsDetails.module.scss","pages/Partners/PartnerDetails/PartnerDetails.module.scss","components/Main/Main.module.scss","components/UI/MyDropDown/MyDropDown.module.scss","components/UI/MyLink/MyLink.module.scss","components/SideMenu/SideMenu.module.scss","redux/actions/loginActions.js","components/Footer/Footer.jsx","configs/modified-axios.js","utils/utils.js","redux/actions/actionTypes.js","components/Header/Header.jsx","components/Spinner/Spinner.jsx","components/Login/Login.jsx","utils/mock-accounts.js","redux/actions/accountActions.js","pages/Accounts/AccountCreation/AccountCreation.jsx","pages/Accounts/AccountDetails/AccountDetails.jsx","components/UI/MyTable/MyTable.jsx","components/UI/MyInput/MyInput.jsx","pages/Accounts/Accounts.jsx","components/UI/MyTable/TableInput/TableInput.jsx","hooks/useFormValiation.js","redux/actions/acquirerActions.js","components/MyAlert/SuccessAlert/SuccessAlert.jsx","components/MyAlert/FailureAlert/FailureAlert.jsx","hooks/useAlert.js","pages/Acquirers/AcquirerAddition/AcquirerAddition.jsx","components/UI/MyTable/MyTableForm/MyTableForm.jsx","components/UI/MyTable/TableMultiselect/TableMultiselect.jsx","utils/constants.js","components/UI/MyButton/MyButton.jsx","components/UI/MyTable/StatusTD/StatusTD.jsx","components/UI/MyTable/ClickableTH/ClickableTH.jsx","pages/Acquirers/Acquirers.jsx","components/UI/MyTable/DetailsTableRow/DetailsTableRow.jsx","components/Blocks/FlexBlock/FlexBlock.jsx","pages/Acquirers/AcquirersDetails/AcquirersDetails.jsx","pages/Acquirers/AcquirersUpdate/AcquirersUpdate.jsx","pages/HomePage/HomePage.jsx","utils/mock-news.js","redux/actions/blogActions.js","pages/News/News.jsx","pages/News/NewsCreation/NewsCreation.jsx","pages/News/NewsDetails/NewsDetails.jsx","redux/actions/partnerAcquirersActions.js","pages/PartnerAcquierers/PartnerAcquierers.jsx","pages/PartnerAcquierers/PartnerAcquierersAddition/PartnerAcquierersAddition.jsx","pages/PartnerAcquierers/PartnerAcquierersDetails/PartnerAcquierersDetails.jsx","pages/PartnerAcquierers/PartnerAcquierersUpdate/PartnerAcquierersUpdate.jsx","redux/actions/partnerActions.js","pages/Partners/PartnerAddition/PartnerAddition.jsx","redux/actions/shopActions.js","pages/Partners/PartnerDetails/PartnerDetails.jsx","pages/Partners/Partners.jsx","pages/Partners/PartnerUpdate/PartnerUpdate.jsx","redux/actions/terminalActions.js","pages/Shops/ShopDetails/ShopDetails.jsx","pages/Shops/Shops.jsx","pages/Shops/ShopsAddition/ShopsAddition.jsx","pages/Shops/ShopUpdate/ShopUpdate.jsx","pages/Terminals/TerminalDetails/TerminalDetails.jsx","pages/Terminals/Terminals.jsx","pages/Terminals/TerminalsAddition/TerminalsAddition.jsx","pages/Terminals/TerminalUpdate/TerminalUpdate.jsx","components/Main/Main.jsx","components/UI/MyDropDown/MyDropDown.jsx","components/UI/MyLink/MyLink.jsx","components/SideMenu/SideMenu.jsx","containers/Layout/Layout.jsx","components/ErrorBoundary/ErrorBoundary.jsx","redux/reducers/layoutReducer.js","redux/reducers/loginReducer.js","redux/reducers/blogReducer.js","redux/reducers/accountReducer.js","redux/reducers/partnerReducer.js","redux/reducers/acquirerReducer.js","redux/reducers/shopReducer.js","redux/reducers/terminalReducer.js","redux/reducers/partnerAcquirersReducer.js","redux/reducers/rootReducer.js","redux/store.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","timer","Footer","props","useState","date","setDate","useEffect","currentYear","Date","getFullYear","className","styles","axios","create","baseURL","getAccessToken","localStorage","getItem","setAccessToken","token","setItem","setRefreshToken","setAccessExpiry","seconds","now","Number","getAccessExpiry","setRefreshExpiry","getTrimmedValues","values","filterData","Object","keys","forEach","key","data","trim","makeRes","ok","message","refreshToken","dispatch","a","refToken","myAxios","post","refresh_token","res","console","log","status","result","authData","setLoginErrors","setIsLoggedIn","autoRefresh","logout","removeItem","clearTimeout","type","refresh","tokenTime","delay","Math","floor","setTimeout","setIsAdmin","isAdmin","errors","setLoginLoading","connect","state","user","login","isOpen","setIsOpen","Header","Navbar","color","dark","expand","NavbarBrand","tag","Link","to","src","whiteLogo","alt","NavbarToggler","onClick","Collapse","navbar","Nav","NavbarText","alert","Spinner","cls","join","loading","logInThunk","loginData","includes","email","password","controls","setControls","setTouched","onControlChange","e","control","target","name","value","touched","errorMessage","err","test","spinner","Login","formWrapper","Form","UncontrolledAlert","FormGroup","Label","for","Input","id","placeholder","onChange","Button","disabled","mockAccounts","setAccountsLoading","setAccountsFailure","setAccounts","accounts","setAccountDetails","details","AccountCreation","Breadcrumb","listTag","BreadcrumbItem","NavLink","exact","active","required","getAccountDetailsThunk","find","account","error","match","history","phone_number","deleted","blocked","suspended_until","verification_required","role_names","params","AccountDetails","onSubmit","preventDefault","check","checked","checkbox","MyTable","children","MyInput","inputStyles","label","errorText","inputCls","input","handleInputChange","getAccountsThunk","Accounts","Table","hover","map","tr","push","scope","TableInput","inputId","setInputId","String","random","slice","htmlFor","useFormAndValidation","setValues","setErrors","isValid","setIsValid","resetForm","useCallback","newValues","newErrors","newIsValid","handleChange","validationMessage","closest","checkValidity","getAcquirersThunk","getAcquirersSuccess","acquirers","alertAcquirersFailure","getAcquirerDetailsThunk","uuids","setAcquirerDetails","alertAcquirersSuccess","SuccessAlert","alertHeading","bottomMessage","visible","setVisible","onDismiss","Alert","toggle","FailureAlert","useAlert","successAlertVisible","setSuccessAlertVisible","successMessage","setSuccessMessage","failureAlertVisible","setFailureAlertVisible","failureMessage","setFailureMessage","checkRes","withSuccessAlert","createAcquirerThunk","inputData","setChecked","AcquirerAddition","evt","then","catch","minLength","maxLength","alias","pattern","MyTableForm","buttonText","TableMultiselect","multiRef","ref","style","multiselectContainer","margin","marginLeft","operationsOptions","jsonKey","activeOptions","currenceOptions","cardBrandsOptions","MyButton","StatusTD","notActive","ClickableTH","useHistory","order","setOrder","changeOrder","field","sortedData","Acquirers","options","displayValue","onSelect","selectedList","onRemove","removedItem","singleSelect","length","item","i","uuid","DetailsTableRow","FlexBlock","deleteAcquirersThunk","delete","useParams","AcquirersDetails","window","confirm","goBack","updateAcquirerThunk","acquirerData","update","AcquirersUpdate","HomePage","mockNews","image","short","full","setNewsLoading","setNewsFailure","setNews","news","setNewsDetails","blog","getNewsThunk","News","ListGroup","ListGroupItem","listItem","createNewsThunk","newsData","access_token","setShort","setFull","picture","setPicture","fileInput","useRef","NewsCreation","current","files","innerRef","rows","getNewsDetailsThunk","updateNewsDetailsThunk","deleteNewsThunk","ids","NewsDetails","getPartnerAcquirerDetailsThunk","setPartnerAcquirerDetails","alertPartnerAcquirersFailure","getPartnerAcquirersSuccess","partnerAcquirers","alertPartnerAcquirersSuccess","getPartnerAcquirersThunk","partnerId","activeRef","priority_to","priority_from","card_brands","partner_uuid","PartnerAcquierers","selectedItem","width","min","max","bank","acquirer_uuid","priority","toUpperCase","createPartnerAcquirerThunk","avtive","bankOptions","setBankOptions","PartnerAcquierersAddition","partnerBankData","deletePartnerAcquirersThunk","PartnerAcquierersDetails","updatePartnerAcquirerThunk","partnerData","bankPreselect","setBankPreselect","activePreselect","setActivePreselect","cardBrandsPreselect","setCardBrandsPreselect","preselectedBank","isActive","preselectedCardBrands","filter","PartnerAcquierersUpdate","selectedValues","getPartnerDetailsThunk","setPartnerDetails","partners","alertPartnersFailure","getPartnersSuccess","alertPartnersSuccess","createPartnerThunk","PartnerAddition","inn","getShopDetailsThunk","setShopDetails","stores","alertShopsFailure","getShopsSuccess","shops","alertShopsSuccess","deletePartnersThunk","getShopsThunk","PartnerDetails","shop","getPartnersThunk","Partners","limit","tableBotton","Pagination","aria-label","PaginationItem","PaginationLink","first","href","previous","next","last","updatePartnerThunk","PartnerUpdate","getTerminalDetailsThunk","setTerminalDetails","terminals","alertTerminalsFailure","getTerminalsSuccess","alertTerminalsSuccess","deleteShopsThunk","getTerminalsThunk","store_uuid","ShopDetails","currency","currency_num","code","operations","Shops","createShopThunk","ShopsAddition","shopData","updateShopThunk","ShopUpdate","deleteTerminalsThunk","TerminalDetails","config_id","Terminals","createTerminalThunk","shopId","onSingleSelect","TerminalsAddition","terminalData","updateTerminalThunk","operationsPreselect","setOperationsPreselect","currencyPreselect","setcurrencyPreselect","rest","preselectedOperations","preselectedCurrency","config","TerminalUpdate","Main","path","component","MyDropDown","title","toString","UncontrolledCollapse","toggler","MyLink","RRNavLink","activeStyle","fontWeight","SideMenu","vertical","NavItem","isLoggedIn","isExpired","Layout","ErrorBoundary","hasError","errorInfo","this","React","Component","initialState","menuIsOpened","success","offset","sort_by","combineReducers","layout","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","App","basename","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e53ca2d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__tE4NM\",\"formWrapper\":\"Login_formWrapper__2ozNL\",\"spinner\":\"Login_spinner__2CkRo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyInput\":\"MyInput_MyInput__2mCAw\",\"input\":\"MyInput_input__14CAW\",\"error\":\"MyInput_error__1kGCQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StatusTD\":\"StatusTD_StatusTD__3_sDd\",\"active\":\"StatusTD_active__1-hWj\",\"notActive\":\"StatusTD_notActive__2aGAy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Partners\":\"Partners_Partners__wwER6\",\"tableBotton\":\"Partners_tableBotton__2mEqg\",\"Pagination\":\"Partners_Pagination__1xgU4\",\"active\":\"Partners_active__2hKP4\",\"pageClass\":\"Partners_pageClass__-vqil\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2CE7u\",\"logout\":\"Header_logout__WsaaX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__5nkCa\",\"lds-spinner\":\"Spinner_lds-spinner__3be76\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Accounts\":\"Accounts_Accounts__ocwRD\",\"tr\":\"Accounts_tr__2Ilrp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"News\":\"News_News__eESvs\",\"listItem\":\"News_listItem__2BE1a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__2PgQ-\"};","module.exports = __webpack_public_path__ + \"static/media/logo-white-text.24b74a4b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyTable\":\"MyTable_MyTable__2bv-q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SuccessAlert\":\"SuccessAlert_SuccessAlert__30BqF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FailureAlert\":\"FailureAlert_FailureAlert__2sF1D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyTableForm\":\"MyTableForm_MyTableForm__NRbnR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyButton\":\"MyButton_MyButton__2CybH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ClickableTH\":\"ClickableTH_ClickableTH__3oFKW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DetailsTableRow\":\"DetailsTableRow_DetailsTableRow__2iGBU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FlexBlock\":\"FlexBlock_FlexBlock__9OSLy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewsCreation\":\"NewsCreation_NewsCreation__3qKjN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewsDetails\":\"NewsDetails_NewsDetails__3SVfA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PartnerDetails\":\"PartnerDetails_PartnerDetails__t_gp3\",\"buttonsBlock\":\"PartnerDetails_buttonsBlock__ZTqka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__FARTk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyDropDown\":\"MyDropDown_MyDropDown__VwQan\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyLink\":\"MyLink_MyLink__11W8c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideMenu\":\"SideMenu_SideMenu__2LorB\"};","import myAxios from '../../configs/modified-axios'\r\nimport { clearLocalStorage, getAccessExpiry, getRefreshToken, setAccessExpiry, setAccessToken, setRefreshExpiry, setRefreshToken } from '../../utils/utils'\r\nimport { SET_IS_ADMIN, SET_IS_LOGGED_IN, SET_LOGIN_ERRORS, SET_LOGIN_LOADING,\r\n  LOG_OUT, \r\n} from \"./actionTypes\"\r\n\r\nlet timer;\r\n\r\nexport const logInThunk = (loginData) => {\r\n  return async (dispatch) => {\r\n    const data = {}\r\n    Object.keys(loginData).forEach(key => {\r\n      if (loginData[key].trim()) {\r\n        data[key] = loginData[key].trim()\r\n      }\r\n    })\r\n    dispatch(setLoginLoading(true))\r\n    try {\r\n      const res = await myAxios.post(`/api/login`, data)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n          if (res.data.result['role_names'].includes('admin')) {\r\n            dispatch(setIsAdmin(true))\r\n            const authData = res.data.result\r\n            dispatch(setLoginErrors(null))\r\n\r\n            setAccessToken(authData['access_token'])\r\n            setAccessExpiry(authData['access_token_expires_in'])\r\n            setRefreshToken(authData['refresh_token'])\r\n            setRefreshExpiry(authData['refresh_token_expires_in'])\r\n\r\n            dispatch(setIsLoggedIn(true, authData))\r\n            autoRefresh(() => dispatch(refreshToken()))\r\n\r\n          } else {\r\n            dispatch(setLoginErrors(['Недостаточно прав']))\r\n          }\r\n      } else {\r\n        dispatch(setLoginErrors(res.data.errors))\r\n        console.log(res.data.errors);\r\n      }\r\n    } catch (error) {\r\n      dispatch(setLoginErrors(['Сервер временно недоступен']))\r\n      console.log(error.message);\r\n      // ====== TEST =========\r\n      localStorage.setItem('access_token', '12345')\r\n      localStorage.setItem('access_token_expires_in', Date.now() + 600 * 1000)\r\n      localStorage.setItem('refresh_token', '12345')\r\n      localStorage.setItem('refresh_token_expires_in', Date.now() + 1500 * 1000)\r\n      autoRefresh(() => dispatch(refreshToken()))\r\n       // ====== TEST =========\r\n    } finally {\r\n      dispatch(setLoginLoading(false))\r\n      dispatch(setIsLoggedIn(true)) //TEST\r\n    }\r\n  }\r\n}\r\n\r\nexport const refreshToken = () => {\r\n  return async (dispatch) => {\r\n    const refToken = getRefreshToken()\r\n    try {\r\n      const res = await myAxios.post(`/api/refresh_token`, {refresh_token: refToken})\r\n      console.log(res);\r\n      if (res.status === 200 && res.data.result) {\r\n        const authData = res.data.result\r\n        dispatch(setLoginErrors(null))\r\n         // ====== TEST =========\r\n        setAccessToken(authData['access_token'])\r\n        setAccessExpiry(authData['access_token_expires_in'])\r\n        setRefreshToken(authData['refresh_token'])\r\n        setRefreshExpiry(authData['refresh_token_expires_in'])\r\n        // ====== TEST =========\r\n        dispatch(setIsLoggedIn(true, authData))\r\n        autoRefresh(() => dispatch(refreshToken()))\r\n\r\n      } else {\r\n        dispatch(logout())\r\n        console.log('dispatch(logout())');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n       // ====== TEST =========\r\n       dispatch(setIsLoggedIn(true))\r\n        localStorage.setItem('access_token', '12345')\r\n        localStorage.setItem('access_token_expires_in', Date.now() + 600 * 1000)\r\n        localStorage.setItem('refresh_token', '12345')\r\n        localStorage.setItem('refresh_token_expires_in', Date.now() + 1500 * 1000)\r\n        autoRefresh(() => dispatch(refreshToken()))\r\n        // ====== TEST =========\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const logout = () => {\r\n  clearLocalStorage()\r\n  clearTimeout(timer)\r\n  return {\r\n    type: LOG_OUT,\r\n  }\r\n}\r\n\r\nexport const autoRefresh = (refresh) => {\r\n  console.log('autoRefresh ' + timer );\r\n  clearTimeout(timer)\r\n  const tokenTime = getAccessExpiry()\r\n  const delay = Math.floor((tokenTime - Date.now()))\r\n  timer = setTimeout(() => {\r\n    refresh()\r\n  }, delay)\r\n}\r\n\r\n\r\nexport const setIsLoggedIn = (status, authData) => {\r\n  \r\n  return {\r\n    type: SET_IS_LOGGED_IN,\r\n    status,\r\n    authData\r\n  }\r\n}\r\n\r\nexport const setIsAdmin = (isAdmin) => {\r\n  return {\r\n    type: SET_IS_ADMIN,\r\n    isAdmin\r\n  }\r\n}\r\n\r\nexport const setLoginErrors = (errors) => {\r\n  return {\r\n    type: SET_LOGIN_ERRORS,\r\n    errors\r\n  }\r\n}\r\n\r\nexport const setLoginLoading = (status) => {\r\n  return {\r\n    type: SET_LOGIN_LOADING,\r\n    status\r\n  }\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport styles from './Footer.module.scss'\r\n\r\nconst Footer = (props) => {\r\n\r\n    const [date, setDate] = useState()\r\n\r\n    useEffect(() => {\r\n        const currentYear = new Date().getFullYear()\r\n        setDate(currentYear)\r\n    }, [])\r\n\r\n    return (\r\n        <div className={styles.Footer}>\r\n            <span>ООО \"ПРОЦЕССИНГОВАЯ КОМПАНИЯ БЫСТРЫХ ПЛАТЕЖЕЙ\" © 1999-{date}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    // baseURL: 'http://develop-admin.192-168-110-2.nip.io'\r\n    baseURL: 'https://vpbc-334-integrations.backend.vepay.cf'\r\n})","export const getAccessToken = () => {\r\n  return localStorage.getItem('access_token')\r\n}\r\n\r\nexport const setAccessToken = (token) => {\r\n  localStorage.setItem('access_token', token)\r\n}\r\n\r\nexport const getRefreshToken = () => {\r\n  return localStorage.getItem('refresh_token')\r\n}\r\n\r\nexport const setRefreshToken = (token) => {\r\n  return localStorage.setItem('refresh_token', token)\r\n}\r\n\r\nexport const setAccessExpiry = (seconds) => {\r\n  localStorage.setItem('access_token_expires_in', Date.now() + Number(seconds) * 1000)\r\n}\r\nexport const getAccessExpiry = () => {\r\n   return Number(localStorage.getItem('access_token_expires_in'))\r\n}\r\n\r\nexport const setRefreshExpiry = (seconds) => {\r\n  localStorage.setItem('refresh_token_expires_in', Date.now() + Number(seconds) * 1000)\r\n}\r\n\r\nexport const getRefreshExpiry = () => {\r\n  return Number(localStorage.getItem('refresh_token_expires_in'))\r\n}\r\n\r\nexport const clearLocalStorage = () => {\r\n  localStorage.removeItem('access_token')\r\n  localStorage.removeItem('access_token_expires_in')\r\n  localStorage.removeItem('refresh_token')\r\n  localStorage.removeItem('refresh_token_expires_in')\r\n}\r\n\r\nexport const getTrimmedValues = (values) => {\r\n  const filterData = {}\r\n\r\n    Object.keys(values).forEach(key => {\r\n      const data = values[key]\r\n      if (typeof data === 'string') {\r\n        if (data.trim()) {\r\n          filterData[key] = data.trim()\r\n        }\r\n      } else if (typeof data === 'boolean') {\r\n        filterData[key] = data\r\n      } else {\r\n        filterData[key] = data\r\n      }\r\n      \r\n    })\r\n\r\n    return filterData\r\n}\r\n\r\nexport const checkResponse = (resetForm=(() => {}), message='') => {\r\n  return (res) => {\r\n    if (res === 'success') {\r\n      console.log( `${message} ${res}`)\r\n      resetForm()\r\n    }\r\n  }\r\n} \r\n\r\n\r\nexport const makeRes = (ok=true, message='Успешно') => {\r\n  return {\r\n    ok,\r\n    message\r\n  }\r\n}","export const OPEN_MENU = 'OPEN_MENU'\r\nexport const CLOSE_MENU = 'CLOSE_MENU'\r\n\r\n\r\n// ========== login =========================\r\n\r\nexport const SET_IS_LOGGED_IN = 'SET_IS_LOGGED_IN'\r\nexport const SET_LOGIN_ERRORS = 'SET_LOGIN_ERRORS'\r\nexport const SET_LOGIN_LOADING = 'SET_LOGIN_LOADING'\r\nexport const SET_IS_ADMIN = 'SET_IS_ADMIN'\r\nexport const LOG_OUT = 'LOG_OUT'\r\n\r\n// ================ Blog ==================================\r\n\r\nexport const NEWS_LOADING = 'NEWS_LOADING'\r\nexport const GET_NEWS_SUCCESS = 'GET_NEWS_SUCCESS'\r\nexport const SET_NEWS_FAILURE = 'SET_NEWS_FAILURE'\r\nexport const GET_NEWS_DETAILS = 'GET_NEWS_DETAILS'\r\n\r\nexport const UPDATE_NEWS_DETAILS_SUCCESS = 'UPDATE_NEWS_DETAILS_SUCCESS'\r\n\r\nexport const DELETE_NEWS_SUCCESS = 'DELETE_NEWS_SUCCESS'\r\n\r\n// =============== Accounts ================================\r\n\r\nexport const ACCOUNTS_LOADING = 'ACCOUNTS_LOADING'\r\nexport const GET_ACCOUNTS_SUCCESS = 'GET_ACCOUNTS_SUCCESS'\r\nexport const GET_ACCOUNTS_FAILURE = 'GET_ACCOUNTS_FAILURE'\r\nexport const GET_ACCOUNTS_DETAILS = 'GET_ACCOUNTS_DETAILS'\r\nexport const UPDATE_ACCOUNTS_SUCCESS = 'UPDATE_ACCOUNTS_SUCCESS'\r\nexport const UPDATE_ACCOUNTS_FAILURE = 'UPDATE_ACCOUNTS_FAILURE'\r\nexport const CREATE_ACCOUNTS_SUCCESS = 'CREATE_ACCOUNTS_SUCCESS'\r\nexport const CREATE_ACCOUNTS_FAILURE = 'CREATE_ACCOUNTS_FAILURE'\r\n\r\n// =============== Partners ==============================\r\n\r\n\r\nexport const PARTNERS_LOADING = 'PARTNERS_LOADING'\r\nexport const PARTNERS_FAILURE = 'PARTNERS_FAILURE'\r\nexport const PARTNERS_SUCCESS = 'PARTNERS_SUCCESS'\r\nexport const SET_PARTNERS = 'SET_PARTNERS'\r\nexport const SET_PARTNER_DETAILS = 'SET_PARTNER_DETAILS'\r\nexport const GET_PARTNER_DETAILS_FAILURE = 'GET_PARTNER_DETAILS_FAILURE'\r\nexport const UPDATE_PARTNER_DETAILS_FAILURE = 'UPDATE_PARTNER_DETAILS_FAILURE'\r\nexport const DELETE_PARTNER_FAILURE = 'DELETE_PARTNER_FAILURE'\r\n\r\n// ================ Acquirers ============================\r\n\r\nexport const ACQUIRERS_LOADING = 'ACQUIRERS_LOADING'\r\nexport const ACQUIRERS_FAILURE = 'ACQUIRERS_FAILURE'\r\nexport const ACQUIRERS_SUCCESS = 'ACQUIRERS_SUCCESS'\r\nexport const SET_ACQUIRERS = 'SET_ACQUIRERS'\r\nexport const SET_ACQUIRER_DETAILS = 'SET_ACQUIRER_DETAILS'\r\nexport const GET_ACQUIRER_DETAILS_FAILURE = 'GET_ACQUIRER_DETAILS_FAILURE'\r\nexport const UPDATE_ACQUIRER_DETAILS_FAILURE = 'UPDATE_ACQUIRER_DETAILS_FAILURE'\r\nexport const DELETE_ACQUIRER_FAILURE = 'DELETE_ACQUIRER_FAILURE'\r\n\r\n// ============== Shops ===================================\r\n\r\nexport const SHOPS_LOADING = 'SHOPS_LOADING'\r\nexport const SHOPS_FAILURE = 'SHOPS_FAILURE'\r\nexport const SHOPS_SUCCESS = 'SHOPS_SUCCESS'\r\nexport const SET_SHOPS = 'SET_SHOPS'\r\nexport const SET_SHOP_DETAILS = 'SET_SHOP_DETAILS'\r\nexport const GET_SHOP_DETAILS_FAILURE = 'GET_SHOP_DETAILS_FAILURE'\r\nexport const UPDATE_SHOP_DETAILS_FAILURE = 'UPDATE_SHOP_DETAILS_FAILURE'\r\nexport const DELETE_SHOP_FAILURE = 'DELETE_SHOP_FAILURE'\r\n\r\n// ============== Terminals ===============================\r\n\r\nexport const TERMINALS_LOADING = 'TERMINALS_LOADING'\r\nexport const TERMINALS_FAILURE = 'TERMINALS_FAILURE'\r\nexport const TERMINALS_SUCCESS = 'TERMINALS_SUCCESS'\r\nexport const SET_TERMINALS = 'SET_TERMINALS'\r\nexport const SET_TERMINAL_DETAILS = 'SET_TERMINAL_DETAILS'\r\n\r\n// ============= Partner Acquirers =======================\r\n\r\nexport const PARTNER_ACQUIRERS_LOADING = 'PARTNER_ACQUIRERS_LOADING'\r\nexport const PARTNER_ACQUIRERS_FAILURE = 'PARTNER_ACQUIRERS_FAILURE'\r\nexport const PARTNER_ACQUIRERS_SUCCESS = 'PARTNER_ACQUIRERS_SUCCESS'\r\nexport const SET_PARTNER_ACQUIRERS = 'SET_PARTNER_ACQUIRERS'\r\nexport const SET_PARTNER_ACQUIRER_DETAILS = 'SET_PARTNER_ACQUIRER_DETAILS'\r\n\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavbarText,\r\n} from \"reactstrap\";\r\nimport { logout } from \"../../redux/actions/loginActions\";\r\nimport whiteLogo from '../../img/logo-white-text.svg'\r\n\r\nimport styles from \"./Header.module.scss\";\r\n\r\nconst Header = ({user, logout}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div className={styles.Header}>\r\n      <Navbar color=\"dark\" dark expand=\"md\">\r\n        <NavbarBrand tag={Link} to='/'>\r\n          <img src={whiteLogo} alt=\"whiteLogo\"/>\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            \r\n            \r\n          </Nav>\r\n          <NavbarText className='mr-4'>пользователь: <strong>{user}</strong> </NavbarText>\r\n          <NavbarText \r\n            // onClick={logout}\r\n            onClick={() => alert('функция пока отключена. Загляните в Header')}\r\n            className={styles.logout}\r\n            >выйти</NavbarText>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.login.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout})(Header);\r\n","import React from 'react'\r\n\r\nimport styles from './Spinner.module.scss'\r\n\r\nconst Spinner = ({className}) => {\r\n\r\n  const cls = [\r\n    styles.Spinner,\r\n    className\r\n  ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n           <div className={styles[\"lds-spinner\"]}><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Form, FormGroup, Label, Input, UncontrolledAlert } from \"reactstrap\";\r\nimport { logInThunk } from \"../../redux/actions/loginActions\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\n\r\nimport styles from \"./Login.module.scss\";\r\n\r\nconst Login = ({logInThunk, loading, errors, isAdmin}) => {\r\n\r\n  const [controls, setControls] = useState({\r\n    email: '',\r\n    password: '',\r\n    login: ''\r\n  })\r\n  const [touched, setTouched] = useState({\r\n    email: false,\r\n    password: false,\r\n    login: false\r\n  })\r\n\r\n  const onControlChange = (e) => {\r\n    const control = e.target\r\n    setControls((controls) => {\r\n      return {\r\n        ...controls,\r\n        [control.name]: control.value\r\n      }\r\n    })\r\n    setTouched((touched) => {\r\n      return {\r\n        ...touched,\r\n        [control.name]: true\r\n      }\r\n    })\r\n  }\r\n\r\n  let errorMessage = 'Попробуйте еще раз позже';\r\n  // if (!isAdmin) {\r\n  //   errorMessage = 'Недостаточно прав'\r\n  // }\r\n  if (errors) {\r\n    errors.forEach((err) => {\r\n      if (/Accounts service error/g.test(err)) {\r\n        errorMessage = 'Ошибка сервиса'\r\n      } else if (/Credentials incorrect/g.test(err)) {\r\n        errorMessage = 'Неверный логин или пароль'\r\n      } else if (/Недостаточно прав/g.test(err)) {\r\n        errorMessage = 'Недостаточно прав'\r\n      } else if (/Сервер временно недоступен/g.test(err)) {\r\n        errorMessage = 'Сервер временно недоступен'\r\n      }\r\n    })\r\n  }\r\n  \r\n\r\n  const {email, password, login} = controls\r\n\r\n  // console.log(controls, touched);\r\n\r\n  if (loading) {\r\n    return <Spinner className={styles.spinner}/>\r\n  }\r\n\r\n  return (\r\n    <div className={styles.Login}>\r\n      <div className={styles.formWrapper}>\r\n        <Form>\r\n          <center>Vepay admin</center>\r\n         {errors && (\r\n          <UncontrolledAlert color={'danger'}>\r\n            {errorMessage}\r\n          </UncontrolledAlert>\r\n         )}\r\n          <FormGroup>\r\n            <Label for=\"login\">Login</Label>\r\n            <Input\r\n              //  invalid={touched.login && !login}\r\n              type=\"text\"\r\n              name=\"login\"\r\n              id=\"login\"\r\n              placeholder=\"login\"\r\n              value={login}\r\n              onChange={onControlChange}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"email\">Email</Label>\r\n            <Input\r\n              //  invalid={touched.email && !email}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              placeholder=\"email\"\r\n              value={email}\r\n              onChange={onControlChange}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"password\">Пароль</Label>\r\n            <Input\r\n            // invalid={touched.password && !password}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"пароль\"\r\n              value={password}\r\n              onChange={onControlChange}\r\n            />\r\n          </FormGroup>\r\n          <Button \r\n           disabled={!((email || login) && password)}\r\n           onClick={() => logInThunk(controls)}\r\n          >Войти</Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.login.loading,\r\n    errors: state.login.errors,\r\n    isAdmin: state.login.isAdmin,\r\n     \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logInThunk})(Login);\r\n","export const mockAccounts = [\r\n  {\r\n    \"id\": 521,\r\n    \"uuid\": 2987593279080238594452345,\r\n    \"email\": \"wvwooo@ivoss.ru\",\r\n    \"phone_number\": \"78499833674\",\r\n    \"login\": \"abc1\",\r\n    \"created\": \"2012-05-23T18:25:43.511Z\",\r\n    \"deleted\": false,\r\n    \"blocked\": false,\r\n    \"suspended_until\": \"2018-05-23T18:25:43.511Z\",\r\n    \"verification_required\": true,\r\n    \"role_names\":[\"admin\", \"merchant\"]\r\n  },\r\n  {\r\n    \"id\": 415212,\r\n    \"uuid\": 2938023958790328492038490233,\r\n    \"email\": \"opi@nier.ru\",\r\n    \"login\": \"dabc\",\r\n    \"created\": \"2014-06-26T18:25:43.511Z\",\r\n    \"deleted\": false,\r\n    \"blocked\": false,\r\n    \"verification_required\": true,\r\n    \"role_names\":[\"merchant\"]\r\n  },\r\n  {\r\n    \"id\": 415213,\r\n    \"uuid\": 2938023958790328492038490235,\r\n    \"email\": \"john@nier.ru\",\r\n    \"login\": \"john\",\r\n    \"created\": \"2015-07-27T18:25:43.511Z\",\r\n    \"deleted\": false,\r\n    \"blocked\": false,\r\n    \"verification_required\": true,\r\n    \"role_names\":[\"merchant\"]\r\n  },\r\n  {\r\n    \"id\": 415214,\r\n    \"uuid\": 2938023958790328492038490236,\r\n    \"email\": \"mary@nier.ru\",\r\n    \"login\": \"mary\",\r\n    \"created\": \"2016-08-28T18:25:43.511Z\",\r\n    \"deleted\": false,\r\n    \"blocked\": false,\r\n    \"verification_required\": true,\r\n    \"role_names\":[\"merchant\"]\r\n  },\r\n  {\r\n    \"id\": 415215,\r\n    \"uuid\": 2938023958790328492038490237,\r\n    \"email\": \"kate@nier.ru\",\r\n    \"login\": \"kate\",\r\n    \"created\": \"2017-09-29T18:25:43.511Z\",\r\n    \"deleted\": false,\r\n    \"blocked\": false,\r\n    \"verification_required\": true,\r\n    \"role_names\":[\"merchant\"]\r\n  },\r\n  {\r\n    \"id\": 415216,\r\n    \"uuid\": 2938023958790328492038490238,\r\n    \"email\": \"sue@nier.ru\",\r\n    \"login\": \"sue\",\r\n    \"created\": \"2018-03-21T18:25:43.511Z\",\r\n    \"deleted\": false,\r\n    \"blocked\": false,\r\n    \"verification_required\": true,\r\n    \"role_names\":[\"merchant\"]\r\n  },\r\n]","import myAxios from '../../configs/modified-axios'\r\n\r\nimport { mockAccounts } from '../../utils/mock-accounts'\r\nimport { getAccessToken } from '../../utils/utils'\r\nimport { ACCOUNTS_LOADING, GET_ACCOUNTS_DETAILS, GET_ACCOUNTS_FAILURE, GET_ACCOUNTS_SUCCESS } from './actionTypes'\r\n\r\n\r\nexport const getAccountsThunk = () => {\r\n  return async (dispatch) => {\r\n    dispatch(setAccountsLoading(true))\r\n\r\n    try {\r\n      dispatch(setAccounts(mockAccounts)) // TEST\r\n      // const data = {\r\n      //   access_token: getAccessToken(),\r\n      // }\r\n      // const res = await myAxios.post(`/api/get_accounts`, data)\r\n      // if (res.status === 200 && res.data.result) {\r\n      //   dispatch(setAccountsFailure({ accounts: null }))\r\n      //   dispatch(setAccounts(res.data.result.accounts))\r\n      // } else {\r\n      //   dispatch(setAccountsFailure({ accounts: res.data.errors }))\r\n      // } \r\n    } catch (error) {\r\n      dispatch(setAccountsFailure({ accounts: ['Сервер недоступен'] }))\r\n    } finally {\r\n      dispatch(setAccountsLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const getAccountDetailsThunk = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch(setAccountsLoading(true))\r\n\r\n    try {\r\n      dispatch(setAccountDetails(mockAccounts.find((account) => account.id === +id))) // TEST\r\n\r\n    //   const data = {\r\n    //     access_token: getAccessToken(),\r\n    //     ids: [id]\r\n    //   }\r\n    //   const res = await myAxios.post(`/api/get_accounts`, data)\r\n    //   if (res.status === 200 && res.data.result) {\r\n    //       dispatch(setAccountsFailure({ details: null }))\r\n    //     dispatch(setAccountDetails(res.data.result.accounts[0]))\r\n    //   } else {\r\n    //     dispatch(setAccountsFailure({ details: res.data.errors }))\r\n    //   }\r\n    } catch (error) {\r\n      dispatch(setAccountsFailure({ details: ['Сервер недоступен'] }))\r\n      console.log(error);\r\n    } finally {\r\n      dispatch(setAccountsLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const setAccountsLoading = (status) => {\r\n  return {\r\n    type: ACCOUNTS_LOADING,\r\n    status\r\n  }\r\n}\r\n\r\nexport const setAccountsFailure = (errors) => {\r\n  return {\r\n    type: GET_ACCOUNTS_FAILURE,\r\n    errors\r\n  }\r\n}\r\n\r\nexport const setAccounts = (accounts) => {\r\n  return {\r\n    type: GET_ACCOUNTS_SUCCESS,\r\n    accounts\r\n  }\r\n}\r\n\r\nexport const setAccountDetails = (details) => {\r\n  return {\r\n    type: GET_ACCOUNTS_DETAILS,\r\n    details\r\n  }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Input, Label } from 'reactstrap'\r\nimport { getAccountDetailsThunk } from '../../../redux/actions/accountActions'\r\n\r\nimport styles from './AccountCreation.module.scss'\r\n\r\nconst AccountCreation = (props) => {\r\n\r\n  const [controls, setControls] = useState({\r\n    email: '',\r\n    password: '',\r\n    login: ''\r\n  })\r\n  const [touched, setTouched] = useState({\r\n    email: false,\r\n    password: false,\r\n    login: false\r\n  })\r\n\r\n  const onControlChange = (e) => {\r\n    const control = e.target\r\n    setControls((controls) => {\r\n      return {\r\n        ...controls,\r\n        [control.name]: control.value\r\n      }\r\n    })\r\n    setTouched((touched) => {\r\n      return {\r\n        ...touched,\r\n        [control.name]: true\r\n      }\r\n    })\r\n  }\r\n\r\n  const {email, password, login} = controls\r\n\r\n    return (\r\n        <div className={styles.AccountCreation}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/accounts' exact>Аккаунты</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Создание аккаунта</BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <h1>Создание аккаунта</h1>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"login\">Логин</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"login\"\r\n                    id=\"login\"\r\n                    placeholder=\"Логин\"\r\n                    value={login}\r\n                    onChange={onControlChange}\r\n                    required\r\n                  />\r\n              </FormGroup>\r\n                  \r\n              <FormGroup>\r\n                <Label for=\"email\">Email</Label>\r\n                <Input\r\n                  //  invalid={touched.email && !email}\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  placeholder=\"email\"\r\n                  value={email}\r\n                  onChange={onControlChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"password\">Пароль</Label>\r\n                <Input\r\n                // invalid={touched.password && !password}\r\n                  type=\"text\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  placeholder=\"пароль\"\r\n                  value={password}\r\n                  onChange={onControlChange}\r\n                />\r\n              </FormGroup>\r\n              <Button \r\n              disabled={!(email && login && password)}\r\n              color='success'\r\n              //  onClick={() => logInThunk(controls)}\r\n              >Создать</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccountCreation","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Input, Label } from 'reactstrap'\r\nimport { getAccountDetailsThunk } from '../../../redux/actions/accountActions'\r\n\r\nimport styles from './AccountDetails.module.scss'\r\n\r\n\r\n\r\nconst AccountDetails = ({\r\n  details,\r\n  getAccountDetailsThunk,\r\n  match,\r\n  history\r\n\r\n}) => {\r\n\r\n  const [controls, setControls] = useState({\r\n    email: '',\r\n    login: '',\r\n    phone_number: '',\r\n    deleted: '',\r\n    blocked: '',\r\n    suspended_until: '',\r\n    verification_required: '',\r\n    role_names: '',\r\n  })\r\n  const [touched, setTouched] = useState(false)\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(controls);\r\n  }\r\n\r\n  const onControlChange = (e) => {\r\n    const control = e.target\r\n    setControls((controls) => {\r\n      return {\r\n        ...controls,\r\n        [control.name]: control.value\r\n      }\r\n    })\r\n    setTouched(true)\r\n  }\r\n\r\n  const onCheckboxChange = (e) => {\r\n    const checkbox = e.target\r\n    setControls((controls) => {\r\n      return {\r\n        ...controls,\r\n        [checkbox.name]: checkbox.checked\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAccountDetailsThunk(match.params.id)\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setControls((controls) => {\r\n      // const detailsInfo = {}\r\n      // Object.keys(controls).forEach(key => {\r\n      //   detailsInfo[key] = details[key] || ''\r\n      // })\r\n      return {\r\n        ...controls,\r\n        ...details\r\n      }\r\n    })\r\n  }, [details])\r\n\r\n  const {email, login, phone_number, deleted, \r\n    blocked, suspended_until, verification_required, role_names\r\n  } = controls\r\n\r\n  if (!details) {\r\n    return (\r\n      <h1>Нет такого аккаунта</h1>\r\n    )\r\n  }\r\n\r\n    return (\r\n        <div className={styles.AccountDetails}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/accounts' exact>Аккаунты</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Детали аккаунта {details && details.login}</BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <h1>Детали аккаунта {details && details.login}</h1>\r\n            <Form onSubmit={onSubmit} >\r\n              <FormGroup>\r\n                <Label for=\"login\">Логин</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"login\"\r\n                    id=\"login\"\r\n                    placeholder=\"Логин\"\r\n                    value={login}\r\n                    onChange={onControlChange}\r\n                    required\r\n                  />\r\n              </FormGroup>\r\n                  \r\n              <FormGroup>\r\n                <Label for=\"email\">Email</Label>\r\n                <Input\r\n                  //  invalid={touched.email && !email}\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  placeholder=\"email\"\r\n                  value={email}\r\n                  onChange={onControlChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"phone_number\">Телефон</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"phone_number\"\r\n                  id=\"phone_number\"\r\n                  placeholder=\"phone_number\"\r\n                  value={phone_number}\r\n                  onChange={onControlChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check for=\"deleted\">\r\n                 \r\n                  <Input\r\n                  type=\"checkbox\"\r\n                  name=\"deleted\"\r\n                  id=\"deleted\"\r\n                  checked={deleted}\r\n                  onChange={onCheckboxChange}\r\n                />\r\n                 {' '} Удален  \r\n                  </Label> \r\n                \r\n              </FormGroup>\r\n             \r\n              <Button \r\n              disabled={!(email && login && touched)}\r\n              color='success'\r\n              >Изменить</Button>\r\n            </Form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      details: state.accounts.details,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getAccountDetailsThunk})(AccountDetails)","import React from 'react'\r\n\r\nimport styles from './MyTable.module.scss'\r\n\r\nconst MyTable = ({className, children, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.MyTable,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <table>\r\n                <tbody>\r\n                    {children}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyTable","import React from 'react'\r\n\r\nimport styles from './MyInput.module.scss'\r\n\r\nconst MyInput = ({className, type='text', inputStyles, value='', onChange, \r\nlabel, errorText, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.MyInput,\r\n        className\r\n    ]\r\n\r\n    const inputCls = [\r\n      styles.input,\r\n      inputStyles,\r\n    ]\r\n\r\n    const handleInputChange = onChange? onChange: () => console.log('add onChange')\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n           <label>\r\n           {label}\r\n              <input \r\n                {...props}\r\n                // id={id}\r\n                className={inputCls.join(' ')}\r\n                type={type} \r\n                value={value}\r\n                onChange={handleInputChange}\r\n                // required={required}\r\n                // pattern={pattern}\r\n                // placeholder={placeholder}\r\n                // name={name}\r\n                // minLength={minLength}\r\n                // maxLength={maxLength}\r\n                // disabled={disabled}\r\n              />\r\n           </label>\r\n           { errorText && ( \r\n              <>\r\n              <br/>\r\n                <span className={styles.error} >{errorText}</span>\r\n              </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyInput","import React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Input, InputGroup, InputGroupText, Table } from 'reactstrap'\r\nimport MyTable from '../../components/UI/MyTable/MyTable'\r\nimport MyInput from '../../components/UI/MyInput/MyInput'\r\nimport { getAccountsThunk } from '../../redux/actions/accountActions'\r\n\r\nimport styles from './Accounts.module.scss'\r\n\r\nconst Accounts = ({accounts, getAccountsThunk, history}) => {\r\n\r\n    useEffect(() => {\r\n        getAccountsThunk()\r\n        // eslint-disable-next-line\r\n    }, []) \r\n\r\n    console.log(accounts);\r\n\r\n\r\n    return (\r\n        <div className={styles.Accounts}>\r\n            <center><h1>список аккаунтов</h1></center>\r\n            <MyTable>\r\n                <tr>\r\n                    <th>\r\n                        логин\r\n                    </th>\r\n                    <td>\r\n                        <MyInput/>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <th>\r\n                        e-mail\r\n                    </th>\r\n                    <td>\r\n                        <MyInput/>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <th>\r\n                        телефон\r\n                    </th>\r\n                    <td>\r\n                        <MyInput/>\r\n                    </td>\r\n                </tr>\r\n            </MyTable>\r\n\r\n            <Table hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>id</th>\r\n                        <th>Логин</th>\r\n                        <th>Email</th>\r\n                        <th>Роли</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        accounts.map((account) => {\r\n                            return (\r\n                                <tr \r\n                                    key={account.id}\r\n                                    className={styles.tr} \r\n                                    onClick={() => history.push(`/accounts/${account.id}`)}\r\n                                >\r\n                                    <th scope=\"row\">{account.id}</th>\r\n                                    <td>{account.login}</td>\r\n                                    <td>{account.email}</td>\r\n                                    <td>{account.role_names.join(', ')}</td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                    \r\n                    \r\n                </tbody>\r\n            </Table>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        accounts: state.accounts.accounts\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps, {getAccountsThunk})(Accounts)","import React, { useEffect, useState } from 'react'\r\nimport MyInput from '../../MyInput/MyInput'\r\n\r\nimport styles from './TableInput.module.scss'\r\n\r\nconst TableInput = ({className, label, ...props}) => {\r\n    const [inputId, setInputId] = useState('')\r\n\r\n    useEffect(() => {\r\n      setInputId(`${label}${String(Math.random()).slice(2)}`)\r\n    }, [label])\r\n\r\n    const cls = [\r\n        styles.TableInput,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <tr className={cls.join(' ')}>\r\n              <th>\r\n                <label htmlFor={inputId}>{label}</label>\r\n              </th>\r\n              <td>\r\n                  <MyInput\r\n                      {...props}\r\n                      id={inputId}\r\n                      // name={name}\r\n                      placeholder={label}\r\n                      // required={required}\r\n                      // onChange={onChange}\r\n                      // value={value}\r\n                      // errorText={errorText}\r\n                      // type={type}\r\n                      // maxLength={maxLength}\r\n                      // minLength={minLength}\r\n                      // disabled={disabled}\r\n                  />\r\n              </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TableInput","import {useState, useCallback} from 'react';\r\n\r\nexport function useFormAndValidation() {\r\n  const [ values, setValues ] = useState({});\r\n  const [ errors, setErrors ] = useState({});\r\n  const [ isValid, setIsValid ] = useState(true);\r\n\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setValues({...values, [name]: value });\r\n    setErrors({...errors, [name]: e.target.validationMessage});\r\n    setIsValid(e.target.closest('form').checkValidity());\r\n  };\r\n\r\n\r\n\r\n  const resetForm = useCallback((newValues = {}, newErrors = {}, newIsValid = false) => {\r\n    setValues(newValues);\r\n    setErrors(newErrors);\r\n    setIsValid(newIsValid);\r\n  }, [setValues, setErrors, setIsValid]);\r\n\r\n  return { values, handleChange, errors, isValid, resetForm, setValues, setIsValid };\r\n}\r\n","import myAxios from '../../configs/modified-axios'\r\nimport { makeRes } from '../../utils/utils';\r\nimport { ACQUIRERS_FAILURE, ACQUIRERS_LOADING, ACQUIRERS_SUCCESS, SET_ACQUIRERS, SET_ACQUIRER_DETAILS } from './actionTypes';\r\n\r\n\r\nexport const createAcquirerThunk = (inputData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n\r\n      const res = await myAxios.post(`/api/admin/add_acquirer`, inputData)\r\n\r\n      console.log(res);\r\n      \r\n      if (res.status === 200 && res.data.result) {\r\n          dispatch(alertAcquirersSuccess({create: 'Эквайер добавлен успешно'}))\r\n          return makeRes(true, 'Эквайер добавлен успешно')\r\n        } else {\r\n          dispatch(alertAcquirersFailure({ create: res.data.errors }))\r\n          return makeRes(false, res.data.errors)\r\n        } \r\n    } catch (error) {\r\n      console.log(error.message);\r\n      dispatch(alertAcquirersFailure({create: [error.message]}))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n} \r\n\r\nexport const getAcquirersThunk = (filterData={}) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_acquirers`, filterData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(getAcquirersSuccess( res.data.result.acquirers))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertAcquirersFailure({ acquirers: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertAcquirersFailure({ acquirers: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const getAcquirerDetailsThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_acquirers_by_uuids`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setAcquirerDetails( res.data.result.acquirers[0]))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertAcquirersFailure({ details: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertAcquirersFailure({ details: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateAcquirerThunk = (acquirerData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/update_acquirer`, acquirerData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertAcquirersSuccess({update: 'информация о эквайере успешно обновлена'}))\r\n        return makeRes(true, 'информация о эквайере успешно обновлена')\r\n      } else {\r\n        dispatch(alertAcquirersFailure({ update: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertAcquirersFailure({ update: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const deleteAcquirersThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/delete_acquirers`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertAcquirersSuccess({delete: 'Эквайер успешно удалён'}))\r\n        return makeRes(true, 'Эквайер успешно удалён')\r\n      } else {\r\n        dispatch(alertAcquirersFailure({ delete: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertAcquirersFailure({ delete: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const setAcquirersLoading = (status) => {\r\n  return {\r\n    type: ACQUIRERS_LOADING,\r\n    status\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const getAcquirersSuccess = (acquirers) => {\r\n  return {\r\n    type: SET_ACQUIRERS,\r\n    acquirers\r\n  }\r\n}\r\n\r\nexport const setAcquirerDetails = (details) => {\r\n  return {\r\n    type: SET_ACQUIRER_DETAILS,\r\n    details\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const alertAcquirersFailure = (errors) => {\r\n  return {\r\n    type: ACQUIRERS_FAILURE,\r\n    errors\r\n  }\r\n}\r\nexport const alertAcquirersSuccess = (message) => {\r\n  return {\r\n    type: ACQUIRERS_SUCCESS,\r\n    message\r\n  }\r\n}\r\n\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { Alert } from 'reactstrap'\r\n\r\nimport styles from './SuccessAlert.module.scss'\r\n\r\nconst SuccessAlert = ({\r\n  className, alertHeading='Всё отлично!', message='Запись добавлена успешно',\r\n  bottomMessage='', visible=false, setVisible,\r\n  ...props}) => {\r\n\r\n\r\n  const onDismiss = () => setVisible(false);\r\n\r\n\r\n    useEffect(() => {\r\n      let timer;\r\n\r\n      if (visible) {\r\n       timer = setTimeout(() => {\r\n          onDismiss()\r\n        }, 3000)\r\n      }\r\n\r\n      return () => {\r\n        clearTimeout(timer)\r\n      }\r\n      // eslint-disable-next-line\r\n    }, [visible])\r\n\r\n    const cls = [\r\n        styles.SuccessAlert,\r\n        className\r\n    ]\r\n\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n             <Alert color=\"success\" isOpen={visible} toggle={onDismiss}>\r\n                <h4 className=\"alert-heading\">{alertHeading}</h4>\r\n                <p>\r\n                  {message}\r\n                </p>\r\n                <hr />\r\n                <p className=\"mb-0\">\r\n                  {bottomMessage}\r\n                </p>\r\n              </Alert>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuccessAlert","import React from 'react'\r\nimport { Alert } from 'reactstrap'\r\n\r\nimport styles from './FailureAlert.module.scss'\r\n\r\nconst FailureAlert = ({\r\n  className, alertHeading='Ошибка!', message='Что-то пошло не так',\r\n  bottomMessage='', visible=false, setVisible,\r\n  ...props}) => {\r\n\r\n  const onDismiss = () => setVisible(false);\r\n\r\n\r\n    const cls = [\r\n        styles.FailureAlert,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n             <Alert color=\"danger\" isOpen={visible} toggle={onDismiss}>\r\n                <h4 className=\"alert-heading\">{alertHeading}</h4>\r\n                <p>\r\n                  {message}\r\n                </p>\r\n                <hr />\r\n                <p className=\"mb-0\">\r\n                  {bottomMessage}\r\n                </p>\r\n              </Alert>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FailureAlert","import { useState } from \"react\";\r\n\r\n\r\n\r\nexport const useAlert = () => {\r\n\r\n  const [successAlertVisible, setSuccessAlertVisible] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState('Успешно');\r\n  const [failureAlertVisible, setFailureAlertVisible] = useState(false);\r\n  const [failureMessage, setFailureMessage] = useState('Ошибка');\r\n\r\n  const checkRes = (withSuccessAlert=true) => {\r\n    return (res) => {\r\n      if (res.ok) {\r\n        if (withSuccessAlert) {\r\n          setSuccessAlertVisible(true)\r\n          setSuccessMessage(`${res.message}`)\r\n        }\r\n      } else {\r\n          setFailureAlertVisible(true)\r\n          setFailureMessage(`Ошибка ${res.message[0]}`)\r\n      }\r\n\r\n      return res\r\n  }\r\n  }\r\n\r\n  return {\r\n    successAlertVisible, setSuccessAlertVisible, successMessage, setSuccessMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, setFailureMessage,\r\n    checkRes\r\n  }\r\n  \r\n}\r\n\r\n","import React, { useEffect, useState }  from 'react'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport {  Breadcrumb, BreadcrumbItem, Button } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from './AcquirerAddition.module.scss'\r\nimport { connect } from 'react-redux'\r\nimport { createAcquirerThunk } from '../../../redux/actions/acquirerActions'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\n\r\nconst AcquirerAddition = ({\r\n    className, createAcquirerThunk, ...props\r\n}) => {\r\n\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n        failureAlertVisible, setFailureAlertVisible, failureMessage, setFailureMessage, checkRes} = useAlert()\r\n    \r\n\r\n    const {values, handleChange, errors, isValid, resetForm, setIsValid } = useFormAndValidation()\r\n\r\n    const [checked, setChecked] = useState(true)\r\n    useEffect(() => {\r\n        setIsValid(false)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        console.log(values);\r\n        createAcquirerThunk({\r\n            ...values,\r\n            active: checked\r\n        })\r\n        .then((res) => {\r\n            checkRes()(res)\r\n            return res\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  setTimeout(() => {\r\n                    resetForm()\r\n                  }, 1000)\r\n              }\r\n          })\r\n          .then(() => console.log('AcquirerAddition'))\r\n          .catch((err) => console.log(err))\r\n\r\n    }\r\n\r\n    const handleCheckBoxChange = (evt) => {\r\n        setChecked(evt.target.checked)\r\n    }\r\n\r\n    const cls = [\r\n        styles.AcquirerAddition,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/acquirers' exact>Банки</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Добавление банка </BreadcrumbItem>\r\n        </Breadcrumb>\r\n           <center> <h1>Добавление банка</h1></center>\r\n          <form onSubmit={onSubmit} >\r\n            <MyTable>\r\n                <TableInput\r\n                    name='name'\r\n                    label='Название'\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    errorText={errors.name}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                />\r\n                <TableInput\r\n                    name='alias'\r\n                    label='alias'\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    value={values.alias}\r\n                    errorText={errors.alias}\r\n                    pattern={'[a-z0-9_]{2,50}'}\r\n                    minLength={2}\r\n                    maxLength={50}\r\n                />\r\n                <TableInput\r\n                    name='active'\r\n                    label='Активен'\r\n                    onChange={handleCheckBoxChange}\r\n                    type='checkbox'\r\n                    checked={checked}\r\n                    \r\n                />\r\n\r\n            </MyTable>\r\n\r\n            <Button\r\n                 color={isValid? \"primary\": 'secondary'}\r\n                disabled={!isValid}\r\n            >\r\n                Добавить\r\n            </Button>\r\n          </form>\r\n\r\n                <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default connect(null, { createAcquirerThunk })(AcquirerAddition)","import React from 'react'\r\nimport { Button } from 'reactstrap'\r\nimport MyTable from '../MyTable'\r\n\r\nimport styles from './MyTableForm.module.scss'\r\n\r\nconst MyTableForm = ({\r\n  className, onSubmit, children, isValid, buttonText='Добавить', ...props\r\n}) => {\r\n\r\n    const cls = [\r\n        styles.MyTableForm,\r\n        className\r\n    ]\r\n\r\n\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n           <form onSubmit={onSubmit}>\r\n                <MyTable>\r\n                   {children}\r\n                </MyTable>\r\n\r\n\r\n                <Button\r\n                    color={isValid? \"primary\": 'secondary'}\r\n                    disabled={!isValid}\r\n                 >\r\n                   \r\n                    {buttonText}\r\n                </Button>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyTableForm","import React from 'react'\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\n\r\nimport styles from './TableMultiselect.module.scss'\r\n\r\nconst TableMultiselect = ({className, label, multiRef, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.TableMultiselect,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <tr className={cls.join(' ')}>\r\n            <th>\r\n            {label}\r\n            </th>\r\n            <td>\r\n                <Multiselect\r\n                    {...props}\r\n                    ref={multiRef}\r\n                    style={{ \r\n                        multiselectContainer: { \r\n                            margin: '1rem',\r\n                            marginLeft: '2rem',\r\n                            // width: '80%'\r\n                        },\r\n                    }}\r\n                />\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TableMultiselect","export const operationsOptions = [\r\n  {name: 'AFT', value: 'aft', jsonKey: 'operations'},\r\n  {name: 'AFT рекуррент', value: 'aft_recurring', jsonKey: 'operations'},\r\n  {name: 'ECOM', value: 'ecom', jsonKey: 'operations'},\r\n  {name: 'ECOM рекуррент', value: 'ecom_recurring', jsonKey: 'operations'},\r\n  {name: 'ECOM рекуррент регистрация', value: 'ecom_recurring_reg', jsonKey: 'operations'},\r\n  {name: 'OCT (B2C) - выдача на карту', value: 'oct_card', jsonKey: 'operations'},\r\n  {name: 'OCT - выдача на счет', value: 'oct_account', jsonKey: 'operations'},\r\n]\r\n\r\n\r\nexport const activeOptions = [\r\n  {name: 'Да', value: true, jsonKey: 'active'},\r\n  {name: 'Нет', value: false, jsonKey: 'active'},\r\n]\r\n\r\n\r\nexport const currenceOptions = [\r\n  {\"value\": \"643\", \"code\": \"RUB\", \"name\": \"Российский рубль\", jsonKey: 'currency_num'},\r\n      {\"value\": \"840\", \"code\": \"USD\", \"name\": \"Доллар США\", jsonKey: 'currency_num'},\r\n      {\"value\": \"978\", \"code\": \"EUR\", \"name\": \"Евро\", jsonKey: 'currency_num'},\r\n      {\"value\": \"392\", \"code\": \"JPY\", \"name\": \"Японская йена\", jsonKey: 'currency_num'},\r\n      {\"value\": \"156\", \"code\": \"CNY\", \"name\": \"Китайский юань женьминьби\", jsonKey: 'currency_num'},\r\n]\r\n\r\nexport const cardBrandsOptions = [\r\n  {name: 'VISA', value: 'visa', jsonKey: 'card_brands'},\r\n  {name: 'Master card', value: 'mc', jsonKey: 'card_brands'},\r\n  {name: 'JCB', value: 'jcb', jsonKey: 'card_brands'},\r\n  {name: 'AMEX', value: 'amex', jsonKey: 'card_brands'},\r\n  {name: 'Discover', value: 'discover', jsonKey: 'card_brands'},\r\n  {name: 'MIR', value: 'mir', jsonKey: 'card_brands'},\r\n]\r\n","import React from 'react'\r\nimport { Button } from 'reactstrap'\r\n\r\nimport styles from './MyButton.module.scss'\r\n\r\nconst MyButton = ({\r\n  className, onClick, color='secondary', buttonText='Сохранить', ...props\r\n}) => {\r\n\r\n    const cls = [\r\n        styles.MyButton,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <Button\r\n                color={color}\r\n                onClick={onClick}\r\n            >\r\n                {buttonText}\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyButton","import React from 'react'\r\n\r\nimport styles from './StatusTD.module.scss'\r\n\r\nconst StatusTD = ({className, active, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.StatusTD,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <td className={cls.join(' ')}>\r\n        <span className={active? styles.active: styles.notActive}>\r\n           {(active && 'активен') || 'неактивен'}\r\n        </span>\r\n        </td>\r\n    )\r\n}\r\n\r\nexport default StatusTD","import React from 'react'\r\n\r\nimport styles from './ClickableTH.module.scss'\r\n\r\nconst ClickableTH = ({className, label, onClick, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.ClickableTH,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <th onClick={onClick} className={cls.join(' ')}>\r\n           {label}\r\n        </th>\r\n    )\r\n}\r\n\r\nexport default ClickableTH","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Table } from 'reactstrap'\r\nimport MyTableForm from '../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../hooks/useFormValiation'\r\nimport { getAcquirersThunk } from '../../redux/actions/acquirerActions'\r\n\r\nimport styles from './Acquirers.module.scss'\r\nimport TableMultiselect from '../../components/UI/MyTable/TableMultiselect/TableMultiselect';\r\nimport { activeOptions } from '../../utils/constants';\r\nimport { getTrimmedValues } from '../../utils/utils';\r\nimport MyButton from '../../components/UI/MyButton/MyButton';\r\nimport StatusTD from '../../components/UI/MyTable/StatusTD/StatusTD';\r\nimport ClickableTH from '../../components/UI/MyTable/ClickableTH/ClickableTH';\r\nimport SuccessAlert from '../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../hooks/useAlert'\r\n\r\nconst Acquirers = ({className, getAcquirersThunk, acquirers=[], ...props}) => {\r\n    \r\n    const history = useHistory()\r\n\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n        failureAlertVisible, setFailureAlertVisible, failureMessage, setFailureMessage, checkRes} = useAlert()\r\n    \r\n    const {values, handleChange, errors, setValues, isValid } = useFormAndValidation()\r\n    const [order, setOrder] = useState(true)\r\n\r\n    const changeOrder = (field) => {\r\n      setOrder(!order)\r\n  \r\n      const filterData = getTrimmedValues(values)\r\n  \r\n      const sortedData = {\r\n          ...filterData,\r\n          \"sort_by\": [\r\n              {\r\n                field,\r\n                order: order? 'asc' : 'desc'\r\n              }\r\n          ]\r\n      }\r\n      \r\n      getAcquirersThunk(sortedData)\r\n      .then(checkRes(false))\r\n  \r\n  }\r\n\r\n    const onRemove = (selectedList, removedItem) => {\r\n        console.log(selectedList);\r\n    }\r\n\r\n\r\n      const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        \r\n        const filterData = getTrimmedValues(values)\r\n\r\n        getAcquirersThunk(filterData)\r\n        .then(checkRes(false))\r\n     \r\n        console.log(filterData);\r\n      }\r\n\r\n\r\n    const onSingleSelect = (selectedList, {jsonKey, value}) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [jsonKey]: value\r\n        })\r\n    }\r\n\r\n    const cls = [\r\n        styles.Acquirers,\r\n        className\r\n    ]\r\n    \r\n\r\n    useEffect(() => {\r\n        getAcquirersThunk()\r\n        .then(checkRes(false))\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <center><h1>Список банков</h1></center>\r\n            <MyTableForm\r\n                 onSubmit={onSubmit}\r\n                isValid={isValid}\r\n                buttonText='Найти'\r\n            >\r\n                <TableInput\r\n                    name='name'\r\n                    label='Название'\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    errorText={errors.name}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                />\r\n                \r\n                <TableMultiselect\r\n                        label='Aктивен'\r\n                        options={activeOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onSingleSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                    />\r\n                \r\n            </MyTableForm>\r\n            <Table hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>№</th>\r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('name')}\r\n                            label='Название'\r\n                        />\r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('active')}\r\n                            label='Cтатус'\r\n                        />\r\n                        \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        acquirers?.length?\r\n                          acquirers.map((item, i) => {\r\n                            return (\r\n                                <tr \r\n                                    key={item.uuid}\r\n                                    onClick={() => history.push(`/acquirers/${item.uuid}`)}\r\n                                >\r\n                                    <td>{i+1}</td>\r\n                                    <td>{item.name}</td>\r\n                                    <StatusTD\r\n                                        active={item.active}\r\n                                    />\r\n                                </tr>\r\n                            )\r\n                        }) :\r\n                        (\r\n                            <tr>\r\n                                <th>\r\n                                    <h1>ничего не найдено</h1>\r\n                                </th>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                    \r\n                    \r\n                </tbody>\r\n            </Table>\r\n\r\n\r\n            <MyButton\r\n                color={'primary'}\r\n                onClick={() => history.push('/add-acquirer')}\r\n                buttonText='добавить банк'\r\n            />\r\n\r\n                <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        acquirers: state.acquirers.acquirers\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default  connect(mapStateToProps, { getAcquirersThunk })(Acquirers)","import React from 'react'\r\n\r\nimport styles from './DetailsTableRow.module.scss'\r\n\r\nconst DetailsTableRow = ({\r\n  className, data, label, ...props\r\n}) => {\r\n\r\n    const cls = [\r\n        styles.DetailsTableRow,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <tr className={cls.join(' ')}>\r\n                    <th>\r\n\r\n                        {label}\r\n                    </th>\r\n                    <td>\r\n                      <span>\r\n                        {data}\r\n                      </span>\r\n                    </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default DetailsTableRow","import React from 'react'\r\n\r\nimport styles from './FlexBlock.module.scss'\r\n\r\nconst FlexBlock = ({className, children, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.FlexBlock,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FlexBlock","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport MyButton from '../../../components/UI/MyButton/MyButton'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\n\r\nimport styles from './AcquirersDetails.module.scss'\r\nimport { deleteAcquirersThunk, getAcquirerDetailsThunk, setAcquirerDetails } from '../../../redux/actions/acquirerActions'\r\nimport DetailsTableRow from '../../../components/UI/MyTable/DetailsTableRow/DetailsTableRow'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport FlexBlock from '../../../components/Blocks/FlexBlock/FlexBlock'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\n\r\nconst AcquirersDetails = ({\r\n  className, details, getAcquirerDetailsThunk, setAcquirerDetails, deleteAcquirersThunk,\r\n   ...props}) => {\r\n\r\n  const {id} = useParams()\r\n  const history = useHistory()\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, setFailureMessage, checkRes} = useAlert()\r\n\r\n\r\n  const deleteAcquirer = () => {\r\n    const confirmed = window.confirm(\"Вы точно хотите удалить?\");\r\n    if (confirmed) {\r\n        deleteAcquirersThunk([id])\r\n        .then((res) => {\r\n          checkRes()(res)\r\n          return res\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                setTimeout(() => {\r\n                  history.goBack()\r\n                }, 1000)\r\n            }\r\n        })\r\n        .then(() => console.log('deleteAcquirersThunk')\r\n        )\r\n        .catch((err) => console.log(err))\r\n        \r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAcquirerDetailsThunk([id])\r\n    return () => {\r\n      setAcquirerDetails({\r\n          uuid: '',\r\n          active: true,\r\n          alias: '',\r\n          name: '',\r\n        })\r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n    const cls = [\r\n        styles.AcquirersDetails,\r\n        className\r\n    ]\r\n    if (!details) {\r\n      return <h1>нет такого эквайера</h1>\r\n  }\r\n\r\n  if (!details.uuid) {\r\n      return <Spinner/>\r\n  }\r\n\r\n  return (\r\n    <div className={cls.join(' ')}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/acquirers' exact>Список банков</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Детали банка {details.name}</BreadcrumbItem>\r\n        </Breadcrumb>\r\n\r\n        <center><h1>Детальная информация об эквайере</h1></center>\r\n        <MyTable>\r\n            <DetailsTableRow\r\n                label='uuid'\r\n                data={details.uuid}\r\n            />\r\n            <DetailsTableRow\r\n                label='Название'\r\n                data={details.name}\r\n            />\r\n            <DetailsTableRow\r\n                label='Статус'\r\n                data={details.active? 'активен' : 'неактивен'}\r\n            />\r\n             <DetailsTableRow\r\n                label='alias'\r\n                data={details.alias}\r\n            />\r\n\r\n        </MyTable>\r\n\r\n        <FlexBlock>\r\n            <MyButton\r\n                onClick={() => history.push(`/acquirers/update/${id}`)}\r\n                buttonText='редактировать'\r\n            />\r\n\r\n            <MyButton\r\n                color={'danger'}\r\n                onClick={deleteAcquirer}\r\n                buttonText='удалить'\r\n            />\r\n        </FlexBlock>\r\n        \r\n        <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\nreturn {\r\n  details: state.acquirers.details,\r\n}\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { \r\n  getAcquirerDetailsThunk, setAcquirerDetails, deleteAcquirersThunk\r\n})(AcquirersDetails)","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem, Button } from 'reactstrap'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport { getAcquirerDetailsThunk, setAcquirerDetails, updateAcquirerThunk } from '../../../redux/actions/acquirerActions'\r\nimport styles from './AcquirersUpdate.module.scss'\r\n\r\nconst AcquirersUpdate = ({\r\n  className, getAcquirerDetailsThunk, setAcquirerDetails, details,\r\n  updateAcquirerThunk, ...props\r\n}) => {\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, setFailureMessage, checkRes} = useAlert()\r\n\r\n\r\n  const {values, handleChange, errors, isValid, setValues, setIsValid } = useFormAndValidation()\r\n  const [checked, setChecked] = useState(true)\r\n  \r\n  const {id} = useParams()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    getAcquirerDetailsThunk([id])\r\n    return () => {\r\n      setAcquirerDetails({\r\n          uuid: '',\r\n          active: true,\r\n          alias: '',\r\n          name: '',\r\n        })\r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n//   useEffect(() => {\r\n//     setIsValid(false)\r\n//     // eslint-disable-next-line\r\n// }, [])\r\n\r\nuseEffect(() => {\r\n  setValues(details)\r\n  setChecked(details?.active)\r\n  // eslint-disable-next-line\r\n}, [details])\r\n\r\nconst onSubmit = (evt) => {\r\n  evt.preventDefault()\r\n  updateAcquirerThunk({uuid: id, ...values, active: checked})\r\n  .then((res) => {\r\n    checkRes()(res)\r\n    return res\r\n  })\r\n  .then(res => {\r\n      if (res.ok) {\r\n          setTimeout(() => {\r\n            history.goBack()\r\n          }, 1000)\r\n      }\r\n  })\r\n  .catch((err) => console.log(err))\r\n  console.log(values);\r\n}\r\n\r\nconst handleCheckBoxChange = (evt) => {\r\n  setChecked(evt.target.checked)\r\n}\r\n\r\n    const cls = [\r\n        styles.AcquirersUpdate,\r\n        className\r\n    ]\r\n    if (!details) {\r\n      return <h1>нет такого эквайера</h1>\r\n  }\r\n\r\n  if (!details.uuid) {\r\n      return <Spinner/>\r\n  }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n         <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/acquirers' exact>Список банков</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/acquirers/${id}`} exact>Детали банка &nbsp; <strong>{details.name}</strong></BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Редактирование банка &nbsp; <strong>{details.name}</strong></BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <h1>Редактирование информации эквайера </h1>\r\n            <form onSubmit={onSubmit}>\r\n              <MyTable>\r\n              <TableInput\r\n                    name='name'\r\n                    label='Название'\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    errorText={errors.name}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                />\r\n                <TableInput\r\n                    name='alias'\r\n                    label='alias'\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    value={values.alias}\r\n                    errorText={errors.alias}\r\n                    pattern={'[a-z0-9_]{2,50}'}\r\n                    minLength={2}\r\n                    maxLength={50}\r\n                />\r\n                <TableInput\r\n                    name='active'\r\n                    label='Активен'\r\n                    onChange={handleCheckBoxChange}\r\n                    type='checkbox'\r\n                    checked={checked}\r\n                    \r\n                />\r\n\r\n              </MyTable>\r\n              <Button\r\n                 color={isValid? \"success\": 'secondary'}\r\n                  disabled={!isValid}\r\n              >\r\n                сохранить\r\n              </Button>\r\n            </form>\r\n\r\n            \r\n            <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      details: state.acquirers.details,\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n   getAcquirerDetailsThunk, setAcquirerDetails, updateAcquirerThunk,\r\n  })(AcquirersUpdate)","import React from 'react'\r\n\r\nimport styles from './HomePage.module.scss'\r\n\r\nconst HomePage = (props) => {\r\n\r\n    return (\r\n        <div className={styles.HomePage}>\r\n            <h1>Главная страница</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage","export const mockNews = [\r\n  {\r\n    id: 1,\r\n    image: 'https://vepay.online/upload/iblock/9a6/9a658816a540dc262a0881104877e2ae.jpg',\r\n    short: '6-ОЙ ЮЖНОРОССИЙСКИЙ МИКРОФИНАНСОВЫЙ ФОРУМ',\r\n    full: `\r\n    10 сентября процессинговая компания VEPAY принимала участие в 6-ом Южнороссийском Микрофинансовом форуме в качестве партнера.\r\n    ⠀\r\n    Генеральный директор компании Евгений Колобов в рамках выступления на тему «Цифровизация бизнеса. Платежные тренды для микрофинансовых организаций» затронул вопросы финансовых решений для МФО, которые может предоставить VEPAY:\r\n    -Рекуррент\r\n    -УПРИД (удаленная упрощенная идентификация клиентов)\r\n    -Оплата по ссылке\r\n    -Получение платежей\r\n    -Мобильное приложение\r\n    -Верификация заемщика\r\n    -Кастомизация\r\n    \r\n    VEPAY - технологии в действии!\r\n    \r\n    Свяжитесь с нами: info@vepay.online или по телефону +7 495 954 84 95`,\r\n    date: \"2020-09-25T18:25:43.511Z\"\r\n  },\r\n  {\r\n    id: 2,\r\n    image: 'https://vepay.online/upload/iblock/6f9/6f9e2cd88d82c555816ba89ace29f5e8.jpeg',\r\n    short: 'Пресс-релиз от 10.09.2020 УПРИД для МФО',\r\n    full: `Процессинговая компания VEPAY сообщает о запуске сервиса для микрофинансовых организаций об упрощенной идентификации клиентов, соответствующего требованиям Федерального закона № 115-ФЗ, а, также, сервиса верификации банковской карты заемщика через систему быстрых платежей.\r\n\r\n    Данный сервис позволяет проверить следующие данные: ФИО, серия и номер паспорта, ИНН, СНИЛС, номер полиса ОМС, пол, дата рождения, а также производить авторизацию заемщиков через портал Госуслуг.\r\n    \r\n    Удаленная идентификация - это механизм, позволяющий россиянам получать финансовые услуги дистанционно в различных финансовых учреждениях, подтвердив свою личность с помощью биометрических персональных данных. \r\n    \r\n    Сервис для микрофинансовых и других кредитных организаций VEPAY по верификации карты клиента и упрощенной идентификации позволит компании ускорить время принятия решения по выдаче займа и его зачисления на банковскую карту заемщика, снизить количество мошеннических операций, актуализировать информацию по действующим клиентам и выявить дополнительные данные в режиме онлайн. \r\n    \r\n    VEPAY обеспечивает помощь в интеграции, а также оказывает техническую поддержку по возникающим вопросам.\r\n    \r\n    Процессинговая компания VEPAY – это российская компания, предоставляющая отраслевой сервис в области платежных технологий на рынках России, Западной Европы и СНГ для юридических лиц и самозанятых лиц.\r\n    \r\n    Основными направлениями работы являются отрасли МФО и финансовые организации, интернет-магазины и маркетплейс, краудфандинговые платформы, сервисы онлайн-образования, ЖКХ.\r\n    \r\n    Свяжитесь с нами: info@vepay.online или по телефону +7 495 954 84 95`,\r\n    date: \"2020-09-11T18:25:43.511Z\"\r\n  },\r\n  {\r\n    id: 3,\r\n    image: 'https://vepay.online/upload/iblock/b09/b09f72fb03c21c30637baec98dbd4aa6.jpg',\r\n    short: 'Интервью генерального директора VEPAY Евгения Колобова Digital MFO Forum',\r\n    full: `Генеральный директор процессинговой компании «VEPAY» Евгений Колобов 27.08.2020г. принимал участие в конференции Digital MFO.\r\n\r\n    В рамках интервью с Евгением Колобовым, модераторы Владимир Шикин и Вячеслав Семенихин обсудили наиболее важные вопросы, в отношение рынка МФО и краудфандинга, а именно: верификация карт заемщика МФО через СБП, \"click-to-offer\", продукт для инвестиционных платформ и его отличие от банковских продуктов.\r\n    \r\n    Также, обсуждение коснулось темы начинающих предпринимателей (самозанятые) и быстрых вариантов оплаты товаров и услуг, которые не требуют сложной технической интеграции с системой VEPAY.\r\n    \r\n    Мы благодарим наших коллег за приглашение на конференцию!\r\n    \r\n    Запись интервью с генеральным директором процессинговой компании «VEPAY» Евгением Колобовым, можно увидеть на сайте форума digital-mfo.ru\r\n    \r\n    VEPAY - технологии в действии!\r\n    \r\n    Свяжитесь с нами: info@vepay.online или по телефону +7 495 954 84 95`,\r\n    date: \"2020-08-28T18:25:43.511Z\"\r\n  },\r\n  {\r\n    id: 4,\r\n    image: 'https://vepay.online/upload/iblock/0b9/0b9941a78dc742162794b2d1a3e5c11d.png',\r\n    short: 'VEPAY: бренд с индивидуальным подходом и корпоративными ценностями',\r\n    full: `Евгений Колобов, сооснователь и генеральный директор процессинговой компании VEPAY, в своем интервью журналу «ПЛАС» рассказывает о последних трендах финтеха, возникших под влиянием пандемии, а также новых возможностях для начинающих предпринимателей.\r\n\r\n    В интервью вы узнаете:\r\n    о последних трендах платежного рынка;\r\n    как сэкономить на платежах, и каковы нюансы арифметики платежного бизнеса;\r\n    об эффективных платежных инструментах для небольших интернет-магазинов;\r\n    о сервисах процессинговой компании VEPAY для микрофинансовых организаций и краудфандинговых платформ;\r\n    о бренде VEPAY и его отношению к клиентам;\r\n    а также много всего интересного.\r\n    Прочесть интервью https://plusworld.ru/lr/vepay-brend-s-individualnym-podkhodom/\r\n    \r\n    О процессинговой компании VEPAY\r\n    Процессинговая компания VEPAY – это российская компания, предоставляющая отраслевой сервис в области платежных технологий на рынках России и СНГ для юридических лиц.\r\n    \r\n    Основными направлениями работы являются отрасли МФО и финансовые организации, интернет-магазины и маркетплейс, краудфандинговые платформы, сервисы онлайн-образования, ЖКХ.\r\n    \r\n    Задать вопрос info@vepay.online\r\n    Позвонить +7 499 954-84-95\r\n    Заполнить заявку на подключение https://vepay.online/new.php\r\n    Начните принимать платежи уже завтра!`,\r\n    date: \"2020-08-25T18:25:43.511Z\"\r\n  },\r\n\r\n]","import myAxios from '../../configs/modified-axios'\r\n\r\nimport { mockNews } from '../../utils/mock-news'\r\nimport { getAccessToken } from '../../utils/utils'\r\n\r\n\r\nimport { SET_NEWS_FAILURE, GET_NEWS_SUCCESS, NEWS_LOADING,\r\n  GET_NEWS_DETAILS\r\n } from \"./actionTypes\"\r\n\r\n\r\nexport const getNewsThunk = () => {\r\n  return async (dispatch) => {\r\n    dispatch(setNewsLoading(true))\r\n\r\n    try {\r\n      dispatch(setNews(mockNews)) // TEST\r\n      // const data = {\r\n      //   access_token: getAccessToken(),\r\n\r\n      // }\r\n      // const res = await myAxios.post(`/api/get_news`, data)\r\n      // if (res.status === 200 && res.data.result) {\r\n        // dispatch(setNewsFailure({ news: null }))\r\n      //   dispatch(setNews(res.data.result.news))\r\n      // } else {\r\n        // dispatch(setNewsFailure({ news: res.data.errors }))\r\n      // } \r\n    } catch (error) {\r\n      dispatch(setNewsFailure({ news: ['Сервер недоступен'] }))\r\n      console.log(error);\r\n    } finally {\r\n     dispatch(setNewsLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const getNewsDetailsThunk = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch(setNewsLoading(true))\r\n    \r\n    try {\r\n      dispatch(setNewsDetails(mockNews.find((news) => news.id === +id)))\r\n\r\n      // const data = {\r\n      //   access_token: getAccessToken(),\r\n      //   ids: [id]\r\n      // }\r\n      // const res = await myAxios.post(`/api/get_news_by_ids`, data)\r\n      // if (res.status === 200 && res.data.result) {\r\n          // dispatch(setNewsFailure({ details: null }))\r\n      //   dispatch(setNewsDetails(res.data.result.news[0]))\r\n      // } else {\r\n      //   dispatch(setNewsFailure({ details: res.data.errors }))\r\n      // }\r\n    } catch (error) {\r\n      dispatch(setNewsFailure({ details: ['Сервер недоступен'] }))\r\n      console.log(error);\r\n    } finally {\r\n      dispatch(setNewsLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateNewsDetailsThunk = (newsData) => {\r\n  return async (dispatch) => {\r\n    dispatch(setNewsLoading(true))\r\n    try {\r\n      const data = {\r\n        ...newsData,\r\n        access_token: getAccessToken(),\r\n        // date: new Date(),\r\n        // category_alias: \"site\"\r\n\r\n      }\r\n      const res = await myAxios.post(`/api/update_news`, data)\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setNewsFailure({ update: null }))\r\n        dispatch(setNewsDetails(res.data.result))\r\n      } else {\r\n        dispatch(setNewsFailure({ update: res.data.errors }))\r\n      }\r\n    } catch (error) {\r\n      dispatch(setNewsFailure({ update: ['Сервер недоступен'] }))\r\n      console.log(error);\r\n    } finally {\r\n      dispatch(setNewsLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteNewsThunk = (id) => {\r\n  return async (dispatch) => {\r\n\r\n    dispatch(setNewsLoading(true))\r\n    try {\r\n      const data = {\r\n        access_token: getAccessToken(),\r\n        ids: [id]\r\n      }\r\n      const res = await myAxios.post(`/api/delete_news`, data)\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setNewsFailure({ delete: null }))\r\n      } else {\r\n        dispatch(setNewsFailure({ delete: res.data.errors }))\r\n      }\r\n    } catch (error) {\r\n      dispatch(setNewsFailure({ delete: ['Сервер недоступен'] }))\r\n      console.log(error);\r\n    } finally {\r\n      dispatch(setNewsLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const createNewsThunk = (newsData) => {\r\n  return async (dispatch) => {\r\n    dispatch(setNewsLoading(true))\r\n    try {\r\n      const data = {\r\n        ...newsData,\r\n        access_token: getAccessToken(),\r\n        // date: new Date(),\r\n        // category_alias: \"site\"\r\n      }\r\n      const res = await myAxios.post(`/api/add_news`, data)\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setNewsFailure({ create: null }))\r\n        dispatch(setNewsDetails(res.data.result))\r\n      } else {\r\n        dispatch(setNewsFailure({ create: res.data.errors }))\r\n      }\r\n    } catch (error) {\r\n      dispatch(setNewsFailure({ create: ['Сервер недоступен'] }))\r\n      console.log(error);\r\n    } finally {\r\n      dispatch(setNewsLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const setNewsLoading = (status) => {\r\n  return {\r\n    type: NEWS_LOADING,\r\n    status\r\n  }\r\n}\r\n\r\nexport const setNewsFailure = (errors) => {\r\n  return {\r\n    type: SET_NEWS_FAILURE,\r\n    errors\r\n  }\r\n}\r\n\r\nexport const setNews = (news) => {\r\n  return {\r\n    type: GET_NEWS_SUCCESS,\r\n    news\r\n  }\r\n}\r\nexport const setNewsDetails = (details) => {\r\n  return {\r\n    type: GET_NEWS_DETAILS,\r\n    details\r\n  }\r\n}","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { ListGroup, ListGroupItem } from 'reactstrap'\r\nimport { getNewsThunk } from '../../redux/actions/blogActions'\r\n\r\nimport styles from './News.module.scss'\r\n\r\nconst News = ({news, getNewsThunk, history}) => {\r\n\r\n  useEffect(() => {\r\n    getNewsThunk()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n    return (\r\n        <div className={styles.News}>\r\n        \r\n            <h1>Новости</h1>\r\n            <ListGroup tag='ol'>\r\n              {\r\n                news.map((item) => {\r\n                  return (\r\n                    <ListGroupItem \r\n                    className={styles.listItem}\r\n                      key={item.id}\r\n                      onClick={() => history.push(`/news/${item.id}`)}\r\n                    >\r\n                      {item.short}\r\n                    </ListGroupItem>\r\n                  )\r\n                })\r\n              }\r\n            </ListGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      news: state.blog.news\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {getNewsThunk}) (News)","import React, { useEffect, useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button, Input } from 'reactstrap'\r\nimport { createNewsThunk } from '../../../redux/actions/blogActions'\r\n\r\nimport styles from './NewsCreation.module.scss'\r\n\r\n\r\n\r\nconst NewsCreation = ({createNewsThunk, }) => {\r\n    const [short, setShort] = useState('')\r\n    const [full, setFull] = useState('')\r\n    const [picture, setPicture] = useState('')\r\n    console.log(picture);\r\n\r\n    const fileInput = useRef()\r\n\r\n    useEffect(() => {\r\n        // getNewsDetailsThunk(match.params.id)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(fileInput.current.files[0]);\r\n        let ok = window.confirm('Вы действительно хотите создать новость?')\r\n        if (ok) {\r\n            console.log('ok');\r\n            // history.push('/news')\r\n            createNewsThunk({\r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.NewsCreation}>\r\n            <h1>Создание новости</h1>\r\n            <form onSubmit={onSubmit} >\r\n                <h3>Добавить картинку новости</h3>\r\n                <Input \r\n                    type='file' \r\n                    name='picture'\r\n                    innerRef={fileInput}\r\n                    onChange={() => setPicture(fileInput.current.files[0])}\r\n                />\r\n                <h3>Название новости (short)</h3>\r\n                <textarea \r\n                    name=\"short\" \r\n                    value={short}  \r\n                    onChange={(e) => setShort(e.target.value)}\r\n                    rows=\"3\">\r\n                </textarea>\r\n                <h3>Полный текст (full)</h3>\r\n                <textarea \r\n                    name=\"full\" \r\n                    value={full}  \r\n                    onChange={(e) => setFull(e.target.value)}\r\n                    rows=\"20\">\r\n                </textarea>\r\n                <Button \r\n                    color='success'\r\n                    disabled={!(short && full && picture)}\r\n                >\r\n                    Создать новость\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, {createNewsThunk})(NewsCreation)","import React, { useEffect, useState } from 'react'\r\nimport { useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem, Button, Input } from 'reactstrap'\r\nimport { deleteNewsThunk, getNewsDetailsThunk, updateNewsDetailsThunk } from '../../../redux/actions/blogActions'\r\n\r\nimport styles from './NewsDetails.module.scss'\r\n\r\nconst NewsDetails = ({\r\n    details, \r\n    getNewsDetailsThunk, \r\n    updateNewsDetailsThunk, \r\n    deleteNewsThunk,\r\n    history, \r\n    match, \r\n    ...props}) => {\r\n    const [short, setShort] = useState(details.short)\r\n    const [full, setFull] = useState(details.full)\r\n    const [picture, setPicture] = useState('')\r\n    console.log(picture);\r\n\r\n    const fileInput = useRef()\r\n\r\n    useEffect(() => {\r\n        getNewsDetailsThunk(match.params.id)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n    useEffect(() => {\r\n        setShort(details.short)\r\n        setFull(details.full)\r\n    }, [details])\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(fileInput.current.files[0]);\r\n        let ok = window.confirm('Вы действительно хотите обновить новость?')\r\n        if (ok) {\r\n            console.log('ok');\r\n            // history.push('/news')\r\n            updateNewsDetailsThunk({\r\n                id: details.id,\r\n                short,\r\n                full,\r\n                picture\r\n            })\r\n        }\r\n    }\r\n\r\n    return details && (\r\n        <div className={styles.NewsDetails}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/news' exact>Новости</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Детали новости</BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <h1>Детали новости</h1>\r\n            <form onSubmit={onSubmit} >\r\n                <h3>Обновить фото</h3>\r\n                <Input \r\n                    type='file' \r\n                    name='picture'\r\n                    innerRef={fileInput}\r\n                    onChange={() => setPicture(fileInput.current.files[0])}\r\n                />\r\n                <h3>Название новости (short)</h3>\r\n                <textarea \r\n                    name=\"short\" \r\n                    value={short}  \r\n                    onChange={(e) => setShort(e.target.value)}\r\n                    rows=\"3\">\r\n                </textarea>\r\n                <h3>Полный текст (full)</h3>\r\n                <textarea \r\n                    name=\"full\" \r\n                    value={full}  \r\n                    onChange={(e) => setFull(e.target.value)}\r\n                    rows=\"20\">\r\n                </textarea>\r\n                <Button \r\n                    color='success'\r\n                >\r\n                    Сохранить\r\n                </Button>\r\n            </form>\r\n            <Button \r\n                color='danger'\r\n                className='mt-3'\r\n                onClick={() => console.log('delete')}\r\n            >\r\n                Удалить новость\r\n            </Button>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        details: state.blog.details,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    getNewsDetailsThunk, \r\n    updateNewsDetailsThunk,\r\n    deleteNewsThunk,\r\n})(NewsDetails)","import myAxios from '../../configs/modified-axios'\r\nimport { makeRes } from '../../utils/utils'\r\nimport { SET_PARTNER_ACQUIRERS, SET_PARTNER_ACQUIRER_DETAILS, PARTNER_ACQUIRERS_LOADING, PARTNER_ACQUIRERS_FAILURE, PARTNER_ACQUIRERS_SUCCESS } from './actionTypes'\r\n\r\n\r\nexport const createPartnerAcquirerThunk = (inputData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n\r\n      const res = await myAxios.post(`/api/admin/add_partner_acquirer`, inputData)\r\n\r\n      console.log(res);\r\n      \r\n      if (res.status === 200 && res.data.result) {\r\n          dispatch(alertPartnerAcquirersSuccess({create: 'Банк партнёра добавлен успешно'}))\r\n          return makeRes(true, 'Банк партнёра добавлен успешно')\r\n        } else {\r\n          dispatch(alertPartnerAcquirersFailure({ create: res.data.errors }))\r\n          return makeRes(false, res.data.errors)\r\n        } \r\n    } catch (error) {\r\n      console.log(error.message);\r\n      dispatch(alertPartnerAcquirersFailure({create: [error.message]}))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n} \r\n\r\nexport const getPartnerAcquirersThunk = (filterData={}) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_partners_acquirers`, filterData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(getPartnerAcquirersSuccess( res.data.result['partners_acquirers']))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertPartnerAcquirersFailure({ partnerAcquirers: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertPartnerAcquirersFailure({ partnerAcquirers: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const getPartnerAcquirerDetailsThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_partners_acquirers_by_uuids`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setPartnerAcquirerDetails( res.data.result['partners_acquirers'][0]))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertPartnerAcquirersFailure({ details: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertPartnerAcquirersFailure({ details: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const updatePartnerAcquirerThunk = (partnerData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/update_partner_acquirer`, partnerData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertPartnerAcquirersSuccess({update: 'информация о банке партнёра успешно обновлена'}))\r\n        return makeRes(true, 'информация о банке партнёра успешно обновлена')\r\n      } else {\r\n        dispatch(alertPartnerAcquirersFailure({ update: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertPartnerAcquirersFailure({ update: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const deletePartnerAcquirersThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/delete_partners_acquirers`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertPartnerAcquirersSuccess({delete: 'Банк партнёра успешно удалён'}))\r\n        return makeRes(true, 'Банк партнёра успешно удалён')\r\n      } else {\r\n        dispatch(alertPartnerAcquirersFailure({ delete: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertPartnerAcquirersFailure({ delete: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const setPartnerAcquirersLoading = (status) => {\r\n  return {\r\n    type: PARTNER_ACQUIRERS_LOADING,\r\n    status\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const getPartnerAcquirersSuccess = (partnerAcquirers) => {\r\n  return {\r\n    type: SET_PARTNER_ACQUIRERS,\r\n    partnerAcquirers\r\n  }\r\n}\r\n\r\nexport const setPartnerAcquirerDetails = (details) => {\r\n  return {\r\n    type: SET_PARTNER_ACQUIRER_DETAILS,\r\n    details\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const alertPartnerAcquirersFailure = (errors) => {\r\n  return {\r\n    type: PARTNER_ACQUIRERS_FAILURE,\r\n    errors\r\n  }\r\n}\r\nexport const alertPartnerAcquirersSuccess = (message) => {\r\n  return {\r\n    type: PARTNER_ACQUIRERS_SUCCESS,\r\n    message\r\n  }\r\n}\r\n\r\n\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { NavLink, useHistory, useParams } from 'react-router-dom'\r\nimport MyTableForm from '../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../hooks/useFormValiation'\r\n\r\nimport styles from './PartnerAcquierers.module.scss'\r\nimport { Breadcrumb, BreadcrumbItem, Table } from 'reactstrap'\r\nimport TableMultiselect from '../../components/UI/MyTable/TableMultiselect/TableMultiselect'\r\nimport { connect } from 'react-redux'\r\nimport { getPartnerAcquirersThunk } from '../../redux/actions/partnerAcquirersActions'\r\nimport MyButton from '../../components/UI/MyButton/MyButton'\r\nimport StatusTD from '../../components/UI/MyTable/StatusTD/StatusTD'\r\nimport { getTrimmedValues } from '../../utils/utils'\r\nimport { activeOptions, cardBrandsOptions } from '../../utils/constants'\r\nimport { getAcquirersThunk } from '../../redux/actions/acquirerActions'\r\nimport SuccessAlert from '../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../hooks/useAlert'\r\nimport ClickableTH from '../../components/UI/MyTable/ClickableTH/ClickableTH'\r\n\r\nconst PartnerAcquierers = ({\r\n    className, getPartnerAcquirersThunk, partnerAcquirers=[],\r\n    acquirers, getAcquirersThunk,\r\n    ...props}) => {\r\n\r\n    const {partnerId} = useParams()\r\n    const history = useHistory()\r\n\r\n    const activeRef = useRef()\r\n\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n        failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n    \r\n\r\n    const {values, handleChange, errors, setValues, isValid } = useFormAndValidation()\r\n   \r\n    const onSingleSelect = (selectedList, {jsonKey, value}) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [jsonKey]: value\r\n        })\r\n    }\r\n    // const onBankSelect = (selectedList, selectedItem) => {\r\n    //     console.log(selectedList);\r\n    //     setValues({\r\n    //         ...values,\r\n    //         acquirer_uuid: selectedItem.uuid\r\n    //     })\r\n    // }\r\n    const onMultiSelect = (selectedList, selectedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [selectedItem.jsonKey]: selectedList.map(i => i.value)\r\n        })\r\n    }\r\n\r\n    const [order, setOrder] = useState(true)\r\n\r\n    const changeOrder = (field) => {\r\n      setOrder(!order)\r\n      let filterData = getTrimmedValues(values)\r\n\r\n      if (filterData.priority_to) {\r\n          filterData.priority_to = Number(filterData.priority_to)\r\n      }\r\n      if (filterData.priority_from) {\r\n          filterData.priority_from = Number(filterData.priority_from)\r\n      }\r\n\r\n      if (filterData.card_brands) {\r\n          if (filterData.card_brands.length === 0) {\r\n              const {card_brands, ...rest} = filterData\r\n              filterData = rest\r\n          }\r\n      }\r\n  \r\n      const sortedData = {\r\n          ...filterData,\r\n          \"sort_by\": [\r\n              {\r\n                field,\r\n                order: order? 'asc' : 'desc'\r\n              }\r\n          ]\r\n      }\r\n      \r\n      getPartnerAcquirersThunk({\r\n        ...sortedData,\r\n        partner_uuid: partnerId\r\n     })\r\n     .then(checkRes(false))\r\n  \r\n  }\r\n\r\n    const onRemove = (selectedList, removedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [removedItem.jsonKey]: selectedList.map(i => i.value)\r\n        })\r\n    }\r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        let filterData = getTrimmedValues(values)\r\n\r\n        if (filterData.priority_to) {\r\n            filterData.priority_to = Number(filterData.priority_to)\r\n        }\r\n        if (filterData.priority_from) {\r\n            filterData.priority_from = Number(filterData.priority_from)\r\n        }\r\n\r\n        if (filterData.card_brands) {\r\n            if (filterData.card_brands.length === 0) {\r\n                const {card_brands, ...rest} = filterData\r\n                filterData = rest\r\n            }\r\n        }\r\n\r\n        getPartnerAcquirersThunk({\r\n            ...filterData,\r\n            partner_uuid: partnerId\r\n        })\r\n        .then(checkRes(false))\r\n\r\n        console.log(filterData);\r\n      }\r\n    const cls = [\r\n        styles.PartnerAcquierers,\r\n        className\r\n    ]\r\n\r\n\r\n    useEffect(() => {\r\n        getAcquirersThunk()\r\n        .then(checkRes(false))\r\n    // eslint-disable-next-line\r\n      }, [])\r\n\r\n    useEffect(() => {\r\n        getPartnerAcquirersThunk({\r\n            partner_uuid: partnerId\r\n        })\r\n        .then(checkRes(false))\r\n        // eslint-disable-next-line \r\n      }, [])\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список партнёров</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners/${partnerId}`} exact>Детали партнёра</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Список банков партнёра</BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <center><h1>Список банков партнёра</h1></center>\r\n\r\n            <MyTableForm\r\n                 onSubmit={onSubmit}\r\n                isValid={isValid}\r\n                buttonText='Найти'\r\n            >\r\n\r\n                <TableMultiselect\r\n                    label='Aктивен'\r\n                    options={activeOptions}\r\n                    displayValue=\"name\"\r\n                    onSelect={onSingleSelect}\r\n                    onRemove={onRemove}\r\n                    placeholder='Выберите'\r\n                    singleSelect\r\n                    multiRef={activeRef}\r\n                />\r\n                <TableMultiselect\r\n                    label='Бренды карт'\r\n                    options={cardBrandsOptions}\r\n                    displayValue=\"name\"\r\n                    onSelect={onMultiSelect}\r\n                    onRemove={onRemove}\r\n                    placeholder='Выберите'\r\n                />\r\n                 <TableInput\r\n                        type='number'\r\n                        name='priority_from'\r\n                        label='Приоритет от'\r\n                        onChange={handleChange}\r\n                        value={values.priority_from}\r\n                        errorText={errors.priority_from}\r\n                        style={{\r\n                            width: `140px`\r\n                        }}\r\n                        min={1}\r\n                        max={100}\r\n                    />\r\n                 <TableInput\r\n                        type='number'\r\n                        name='priority_to'\r\n                        label='Приоритет до'\r\n                        onChange={handleChange}\r\n                        value={values.priority_to}\r\n                        errorText={errors.priority_to}\r\n                        style={{\r\n                            width: `140px`\r\n                        }}\r\n                        min={1}\r\n                        max={100}\r\n                    />\r\n\r\n            </MyTableForm>\r\n\r\n            <Table hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Банк</th>\r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('active')}\r\n                            label='Cтатус'\r\n                        />\r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('priority')}\r\n                            label='Приоритет'\r\n                        />\r\n                        {/* <th>Приоритет</th> */}\r\n                        <th>Карты</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                   \r\n                    {\r\n                        partnerAcquirers && partnerAcquirers.map((item) => {\r\n                            const bank = acquirers?.find((bank) => {\r\n                                    return bank.uuid === item.acquirer_uuid\r\n                                })\r\n\r\n                            return (\r\n                                <tr \r\n                                    key={item.uuid} \r\n                                    onClick={() => history.push(`/partners-acquirers/${partnerId}/${item.uuid}`)}\r\n                                >\r\n                                    <td>{bank?.name}</td>\r\n                                    <StatusTD\r\n                                        active={item.active}\r\n                                    />\r\n                                    <td>{item.priority}</td>\r\n                                    <td>{item.card_brands.join(' ').toUpperCase()}</td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                    \r\n                </tbody>\r\n            </Table>\r\n            {/* <Link to={`/add-partner-acquirer/${partnerId}`} >добавить банк</Link> */}\r\n\r\n            <MyButton\r\n                color={'primary'}\r\n                onClick={() => history.push(`/add-partner-acquirer/${partnerId}`)}\r\n                buttonText='добавить банк'\r\n            />\r\n\r\n                <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        partnerAcquirers: state.partnerAcquirers.partnerAcquirers,\r\n        acquirers: state.acquirers.acquirers,\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    getPartnerAcquirersThunk, getAcquirersThunk,\r\n})(PartnerAcquierers)","import React, { useState, useEffect } from 'react'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport TableMultiselect from '../../../components/UI/MyTable/TableMultiselect/TableMultiselect'\r\n\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport { getAcquirersThunk } from '../../../redux/actions/acquirerActions'\r\nimport { activeOptions, cardBrandsOptions, } from '../../../utils/constants'\r\nimport { createPartnerAcquirerThunk } from '../../../redux/actions/partnerAcquirersActions'\r\n\r\n\r\nimport styles from './PartnerAcquierersAddition.module.scss'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\n\r\nconst PartnerAcquierersAddition = ({\r\n    className, acquirers, getAcquirersThunk, createPartnerAcquirerThunk,\r\n\r\n    ...props}) => {\r\n\r\n    const { partnerId } = useParams()\r\n    const history = useHistory()\r\n\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n        failureAlertVisible, setFailureAlertVisible, failureMessage, setFailureMessage, checkRes} = useAlert()\r\n    \r\n\r\n    const {values, handleChange, errors, isValid, setValues, resetForm, setIsValid } = useFormAndValidation()\r\n\r\n    const [bankOptions, setBankOptions] = useState([{name: 'Загружаются данные...', avtive: true}])\r\n\r\n    const onSingleSelect = (selectedList, {jsonKey, value}) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [jsonKey]: value\r\n        })\r\n    }\r\n    const onBankSelect = (selectedList, selectedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            acquirer_uuid: selectedItem.uuid\r\n        })\r\n    }\r\n    const onMultiSelect = (selectedList, selectedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [selectedItem.jsonKey]: selectedList.map(i => i.value)\r\n        })\r\n    }\r\n\r\n    const onRemove = (selectedList, removedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [removedItem.jsonKey]: selectedList.map(i => i.value)\r\n        })\r\n    }\r\n\r\n   \r\n    \r\n    useEffect(() => {\r\n        getAcquirersThunk()\r\n        .then(checkRes(false))\r\n        // eslint-disable-next-line\r\n    }, [])\r\n    useEffect(() => {\r\n        if (acquirers) {\r\n            setBankOptions(acquirers)\r\n        }\r\n    }, [acquirers])\r\n\r\n    // useEffect(() => {\r\n    //     setIsValid(false)\r\n    //     // eslint-disable-next-line\r\n    // }, [])\r\n\r\n    const cls = [\r\n        styles.PartnerAcquierersAddition,\r\n        className\r\n    ]\r\n    \r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        const partnerBankData = {\r\n            ...values,\r\n            partner_uuid: partnerId\r\n        }\r\n        if (partnerBankData.priority) {\r\n            partnerBankData.priority = Number(partnerBankData.priority)\r\n        }\r\n        console.log(partnerBankData);\r\n\r\n        createPartnerAcquirerThunk(partnerBankData)\r\n        .then((res) => {\r\n            checkRes()(res)\r\n            return res\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  setTimeout(() => {\r\n                    history.goBack()\r\n                  }, 1000)\r\n              }\r\n          })\r\n          .then(() => console.log('createPartnerAcquirerThunk'))\r\n          .catch((err) => console.log(err))\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список партнёров</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners/${partnerId}`} exact>Детали партнёра</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners-acquirers/${partnerId}`} exact>Список банков партнёра</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Детали банка</BreadcrumbItem>\r\n        </Breadcrumb>\r\n             <center><h1>Добавление банка партнера</h1></center>\r\n            <MyTableForm\r\n                onSubmit={onSubmit}\r\n                isValid={isValid}\r\n            >\r\n                    <TableMultiselect\r\n                        label='Банк'\r\n                        options={bankOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onBankSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                    />\r\n                     <TableMultiselect\r\n                        label='Aктивен'\r\n                        options={activeOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onSingleSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                    />\r\n                    <TableMultiselect\r\n                        label='Карточные бренды'\r\n                        options={cardBrandsOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onMultiSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                    />\r\n                    <TableInput\r\n                        type='number'\r\n                        name='priority'\r\n                        label='Приоритет'\r\n                        onChange={handleChange}\r\n                        value={values.priority || 10}\r\n                        errorText={errors.priority}\r\n                        min={1}\r\n                        max={100}\r\n                    />\r\n                    \r\n            </MyTableForm>\r\n\r\n            \r\n            <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        acquirers: state.acquirers.acquirers,\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n     getAcquirersThunk, createPartnerAcquirerThunk, \r\n    })(PartnerAcquierersAddition)","import React, { useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport { getAcquirersThunk } from '../../../redux/actions/acquirerActions'\r\nimport { deletePartnerAcquirersThunk, getPartnerAcquirerDetailsThunk } from '../../../redux/actions/partnerAcquirersActions'\r\n\r\n\r\nimport styles from './PartnerAcquierersDetails.module.scss'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport DetailsTableRow from '../../../components/UI/MyTable/DetailsTableRow/DetailsTableRow'\r\nimport MyButton from '../../../components/UI/MyButton/MyButton'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport FlexBlock from '../../../components/Blocks/FlexBlock/FlexBlock'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\n\r\nconst PartnerAcquierersDetails = ({\r\n  className, details, getPartnerAcquirerDetailsThunk, deletePartnerAcquirersThunk,\r\n\r\n  ...props}) => {\r\n\r\n  const {partnerId, id} = useParams()\r\n  const history = useHistory()\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, setFailureMessage, checkRes} = useAlert()\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    getPartnerAcquirerDetailsThunk([id])\r\n    .then(checkRes(false))\r\n\r\n    return () => {\r\n      // setShopDetails({\r\n      //     uuid: '',\r\n      //     partner_uuid: '',\r\n      //     name: '',\r\n      //   })\r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n  const onDelete = () => {\r\n    const confirmed = window.confirm(\"Вы точно хотите удалить?\");\r\n    if (confirmed) {\r\n      deletePartnerAcquirersThunk([id])\r\n      .then((res) => {\r\n        checkRes()(res)\r\n        return res\r\n      })\r\n      .then(res => {\r\n          if (res.ok) {\r\n              setTimeout(() => {\r\n                history.goBack()\r\n              }, 1000)\r\n          }\r\n      })\r\n      .then(() => {\r\n        console.log('deletePartnerAcquirersThunk');\r\n      })\r\n      .catch((err) => console.log(err))\r\n    }\r\n  }\r\n\r\n    const cls = [\r\n        styles.PartnerAcquierersDetails,\r\n        className\r\n    ]\r\n    if (!details) {\r\n      return <h1>нет такого банка партнера</h1>\r\n    }\r\n\r\n    if (!details.uuid) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список партнёров</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners/${partnerId}`} exact>Детали партнёра</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners-acquirers/${partnerId}`} exact>Список банков партнёра</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Детали банка</BreadcrumbItem>\r\n        </Breadcrumb>\r\n             <center><h1>Детальная информация о банке партнера</h1></center>\r\n            <MyTable>\r\n              <DetailsTableRow\r\n                  label='uuid'\r\n                  data={details.uuid}\r\n              />\r\n              <DetailsTableRow\r\n                  label='Банк'\r\n                  data={details.acquirer_uuid}\r\n              />\r\n              <DetailsTableRow\r\n                  label='Статус'\r\n                  data={(details.active && 'активен') || 'неактивен'}\r\n              />\r\n              <DetailsTableRow\r\n                  label='Приоритет'\r\n                  data={details.priority}\r\n              />\r\n              <DetailsTableRow\r\n                  label='Бренды карт'\r\n                  data={details.card_brands.join(' ').toUpperCase()}\r\n              />\r\n\r\n        </MyTable>\r\n\r\n        <FlexBlock>\r\n              <MyButton\r\n                    color={'secondary'}\r\n                    onClick={() => history.push(`/partners-acquirers/${partnerId}/${id}/update`)}\r\n                    buttonText='редактировать'\r\n                />\r\n                <MyButton\r\n                    color={'danger'}\r\n                    onClick={onDelete}\r\n                    buttonText='удалить'\r\n                />\r\n        </FlexBlock>\r\n\r\n                  <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    details: state.partnerAcquirers.details,\r\n  }\r\n  }\r\n  \r\n\r\nexport default connect(mapStateToProps, {\r\n  getPartnerAcquirerDetailsThunk, deletePartnerAcquirersThunk,\r\n})(PartnerAcquierersDetails)","import React, { useState, useEffect } from 'react'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport TableMultiselect from '../../../components/UI/MyTable/TableMultiselect/TableMultiselect'\r\n\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport { getAcquirersThunk } from '../../../redux/actions/acquirerActions'\r\nimport { activeOptions, cardBrandsOptions, } from '../../../utils/constants'\r\nimport { getPartnerAcquirerDetailsThunk, updatePartnerAcquirerThunk } from '../../../redux/actions/partnerAcquirersActions'\r\n\r\n\r\nimport styles from './PartnerAcquierersUpdate.module.scss'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\n\r\nconst PartnerAcquierersUpdate = ({\r\n  className, acquirers, getAcquirersThunk, getPartnerAcquirerDetailsThunk,\r\n  details, updatePartnerAcquirerThunk,\r\n  ...props}) => {\r\n\r\n  const { partnerId, id } = useParams()\r\n  const history = useHistory()\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, setFailureMessage, checkRes} = useAlert()\r\n\r\n\r\n  const {values, handleChange, errors, isValid, setValues, setIsValid } = useFormAndValidation()\r\n  const [bankOptions, setBankOptions] = useState([{name: 'Загружаются данные...', avtive: true}])\r\n  const [bankPreselect, setBankPreselect] = useState([{name: 'загружается...'}])\r\n  const [activePreselect, setActivePreselect] = useState([{name: 'загружается...'}])\r\n  const [cardBrandsPreselect, setCardBrandsPreselect] = useState([{name: 'загружается...'}])\r\n \r\n  const onSingleSelect = (selectedList, {jsonKey, value}) => {\r\n    console.log(selectedList);\r\n    setValues({\r\n            ...values,\r\n            [jsonKey]: value\r\n        })\r\n    }\r\n    const onBankSelect = (selectedList, selectedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            acquirer_uuid: selectedItem.uuid\r\n        })\r\n    }\r\n    const onMultiSelect = (selectedList, selectedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [selectedItem.jsonKey]: selectedList.map(i => i.value)\r\n        })\r\n    }\r\n\r\n    const onRemove = (selectedList, removedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [removedItem.jsonKey]: selectedList.map(i => i.value)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n\r\n      getPartnerAcquirerDetailsThunk([id])\r\n  \r\n      return () => {\r\n        // setShopDetails({\r\n        //     uuid: '',\r\n        //     partner_uuid: '',\r\n        //     name: '',\r\n        //   })\r\n      }\r\n      // eslint-disable-next-line \r\n    }, [])\r\n    useEffect(() => {\r\n      getAcquirersThunk()\r\n      // eslint-disable-next-line\r\n  }, [])\r\n  useEffect(() => {\r\n      if (acquirers) {\r\n          setBankOptions(acquirers)\r\n      }\r\n  }, [acquirers])\r\n\r\n  useEffect(() => {\r\n    setValues(details)\r\n    // eslint-disable-next-line\r\n  }, [details])\r\n\r\n  useEffect(() => {\r\n    if (details && acquirers) {\r\n  \r\n      const preselectedBank = [...acquirers].find(i => i.uuid === details.acquirer_uuid)\r\n      if (preselectedBank?.name) {\r\n        setBankPreselect([preselectedBank])\r\n      }\r\n  \r\n      const isActive = activeOptions.find(i => i.value === details.active)\r\n  \r\n      if (isActive) {\r\n        setActivePreselect([isActive])\r\n      }\r\n\r\n      const preselectedCardBrands = cardBrandsOptions.filter(i => {\r\n        return details.card_brands.includes(i.value)\r\n      })\r\n\r\n      if (preselectedCardBrands.length) {\r\n        setCardBrandsPreselect(preselectedCardBrands)\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [details, acquirers])\r\n\r\n    const cls = [\r\n        styles.PartnerAcquierersUpdate,\r\n        className\r\n    ]\r\n\r\n    const onSubmit = (evt) => {\r\n      evt.preventDefault()\r\n      const partnerBankData = {\r\n          ...values,\r\n          // partner_uuid: partnerId\r\n      }\r\n      if (partnerBankData.priority) {\r\n          partnerBankData.priority = Number(partnerBankData.priority)\r\n      }\r\n      console.log(partnerBankData);\r\n\r\n      updatePartnerAcquirerThunk(partnerBankData)\r\n      .then(checkRes())\r\n      .then(res => {\r\n        if (res.ok) {\r\n            setTimeout(() => {\r\n              history.goBack()\r\n            }, 1000)\r\n        }\r\n    })\r\n      .then(() => console.log('updatePartnerAcquirerThunk'))\r\n\r\n  }\r\n\r\n  if (!details) {\r\n    return <h1>нет такого банка партнера</h1>\r\n  }\r\n\r\n  if (!details.uuid) {\r\n      return <Spinner/>\r\n  }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список партнёров</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners/${partnerId}`} exact>Детали партнёра</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners-acquirers/${partnerId}`} exact>Список банков партнёра</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners-acquirers/${partnerId}/${id}`} exact>Детали банка</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Редактирование банка</BreadcrumbItem>\r\n        </Breadcrumb>\r\n              <center><h1>Редактирование банка партнера</h1></center>\r\n            <MyTableForm\r\n                onSubmit={onSubmit}\r\n                isValid={isValid}\r\n                buttonText='Обновить'\r\n            >\r\n                    <TableMultiselect\r\n                        label='Банк'\r\n                        options={bankOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onBankSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                        selectedValues={bankPreselect}\r\n                    />\r\n                     <TableMultiselect\r\n                        label='Aктивен'\r\n                        options={activeOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onSingleSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                        selectedValues={activePreselect}\r\n                    />\r\n                    <TableMultiselect\r\n                        label='Карточные бренды'\r\n                        options={cardBrandsOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onMultiSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        selectedValues={cardBrandsPreselect}\r\n                        \r\n                    />\r\n                    <TableInput\r\n                        type='number'\r\n                        name='priority'\r\n                        label='Приоритет'\r\n                        onChange={handleChange}\r\n                        value={values.priority || 10}\r\n                        errorText={errors.priority}\r\n                        min={1}\r\n                        max={100}\r\n                    />\r\n                    \r\n            </MyTableForm>\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      acquirers: state.acquirers.acquirers,\r\n      details: state.partnerAcquirers.details,\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n  getAcquirersThunk, getPartnerAcquirerDetailsThunk, updatePartnerAcquirerThunk,\r\n})(PartnerAcquierersUpdate)","import myAxios from '../../configs/modified-axios'\r\nimport { makeRes } from '../../utils/utils'\r\nimport { SET_PARTNERS, SET_PARTNER_DETAILS, PARTNERS_LOADING, PARTNERS_FAILURE, PARTNERS_SUCCESS } from './actionTypes'\r\n\r\n\r\nexport const createPartnerThunk = (inputData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n\r\n      const res = await myAxios.post(`/api/admin/add_partner`, inputData)\r\n\r\n      console.log(res);\r\n      \r\n      if (res.status === 200 && res.data.result) {\r\n          dispatch(alertPartnersSuccess({create: 'Партрнёр добавлен успешно'}))\r\n          return makeRes(true, 'Партрнёр добавлен успешно')\r\n        } else {\r\n          dispatch(alertPartnersFailure({ create: res.data.errors }))\r\n          return makeRes(false, res.data.errors)\r\n        } \r\n    } catch (error) {\r\n      console.log(error.message);\r\n      dispatch(alertPartnersFailure({create: [error.message]}))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n} \r\n\r\n\r\n\r\nexport const getPartnersThunk = (filterData={}) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_partners`, filterData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(getPartnersSuccess( res.data.result.partners))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertPartnersFailure({ partners: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertPartnersFailure({ partners: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const getPartnerDetailsThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_partners_by_uuids`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setPartnerDetails( res.data.result.partners[0]))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertPartnersFailure({ details: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertPartnersFailure({ details: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const updatePartnerThunk = (partnerData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/update_partner`, partnerData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertPartnersSuccess({update: 'информация о партнёре успешно обновлена'}))\r\n        return makeRes(true, 'информация о партнёре успешно обновлена')\r\n      } else {\r\n        dispatch(alertPartnersFailure({ update: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertPartnersFailure({ update: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const deletePartnersThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/delete_partners`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertPartnersSuccess({delete: 'партнёр успешно удалён'}))\r\n        return makeRes(true, 'партнёр успешно удалён')\r\n      } else {\r\n        dispatch(alertPartnersFailure({ delete: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertPartnersFailure({ delete: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const setPartnersLoading = (status) => {\r\n  return {\r\n    type: PARTNERS_LOADING,\r\n    status\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const getPartnersSuccess = (partners) => {\r\n  return {\r\n    type: SET_PARTNERS,\r\n    partners\r\n  }\r\n}\r\n\r\nexport const setPartnerDetails = (details) => {\r\n  return {\r\n    type: SET_PARTNER_DETAILS,\r\n    details\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const alertPartnersFailure = (errors) => {\r\n  return {\r\n    type: PARTNERS_FAILURE,\r\n    errors\r\n  }\r\n}\r\nexport const alertPartnersSuccess = (message) => {\r\n  return {\r\n    type: PARTNERS_SUCCESS,\r\n    message\r\n  }\r\n}\r\n\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { Breadcrumb, BreadcrumbItem, Button } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from './PartnerAddition.module.scss'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { connect } from 'react-redux'\r\nimport { createPartnerThunk } from '../../../redux/actions/partnerActions'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\n\r\n\r\nconst PartnerAddition = ({className, createPartnerThunk, ...props}) => {\r\n\r\n    const {values, handleChange, errors, isValid, resetForm, setIsValid } = useFormAndValidation()\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage, setSuccessMessage,\r\n        failureAlertVisible, setFailureAlertVisible, failureMessage, setFailureMessage,\r\n        checkRes} = useAlert()\r\n   \r\n        const cls = [\r\n        styles.PartnerAddition,\r\n        className\r\n    ]\r\n\r\n    useEffect(() => {\r\n        setIsValid(false)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        console.log(values);\r\n        createPartnerThunk(values)\r\n        .then((res) => {\r\n            checkRes()(res)\r\n            if (res.ok) resetForm()\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n          <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Партнёры</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Добавление партнёра </BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <h1>Добавить партнёра</h1>\r\n            <form onSubmit={onSubmit} >\r\n                <MyTable>\r\n                    <TableInput\r\n                         name='inn'\r\n                        label='ИНН'\r\n                        required={true}\r\n                        onChange={handleChange}\r\n                        value={values.inn}\r\n                        errorText={errors.inn}\r\n                        minLength={10}\r\n                        maxLength={12}\r\n                    />\r\n                    <TableInput\r\n                         name='name'\r\n                         label='Название'\r\n                        required={true}\r\n                        onChange={handleChange}\r\n                        value={values.name}\r\n                        errorText={errors.name}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    {/* <TableInput\r\n                         name='uuid'\r\n                        label='uuid'\r\n                        onChange={handleChange}\r\n                        value={values.uuid}\r\n                    /> */}\r\n                    \r\n                </MyTable>\r\n                <Button \r\n                    color={isValid? \"primary\": 'secondary'}\r\n                    disabled={!isValid}\r\n                >\r\n                    добавить\r\n                </Button>\r\n            </form>\r\n\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n\r\n//     }\r\n// }\r\n\r\n\r\n\r\nexport default connect(null, { createPartnerThunk })(PartnerAddition)","import myAxios from '../../configs/modified-axios'\r\nimport { makeRes } from '../../utils/utils';\r\nimport { SHOPS_FAILURE, SHOPS_LOADING, SHOPS_SUCCESS, SET_SHOPS, SET_SHOP_DETAILS } from './actionTypes';\r\n\r\n\r\nexport const createShopThunk = (inputData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n\r\n      const res = await myAxios.post(`/api/admin/add_store`, inputData)\r\n\r\n      console.log(res);\r\n      \r\n      if (res.status === 200 && res.data.result) {\r\n          dispatch(alertShopsSuccess({create: 'Магазин добавлен успешно'}))\r\n          return makeRes(true, 'Магазин добавлен успешно')\r\n        } else {\r\n          dispatch(alertShopsFailure({ create: res.data.errors }))\r\n          return makeRes(false, res.data.errors)\r\n        } \r\n    } catch (error) {\r\n      console.log(error.message);\r\n      dispatch(alertShopsFailure({create: [error.message]}))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n} \r\n\r\nexport const getShopsThunk = (filterData={}) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_stores`, filterData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(getShopsSuccess( res.data.result.stores))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertShopsFailure({ stores: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertShopsFailure({ stores: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    \r\n    }\r\n  }\r\n}\r\n\r\nexport const getShopDetailsThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_stores_by_uuids`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setShopDetails( res.data.result.stores[0]))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertShopsFailure({ details: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertShopsFailure({ details: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateShopThunk = (shopData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/update_store`, shopData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertShopsSuccess({update: 'информация о магазине успешно обновлена'}))\r\n        return makeRes(true, 'информация о магазине успешно обновлена')\r\n      } else {\r\n        dispatch(alertShopsFailure({ update: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertShopsFailure({ update: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const deleteShopsThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/delete_stores`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertShopsSuccess({delete: 'Магазин успешно удалён'}))\r\n        return makeRes(true, 'Магазин успешно удалён')\r\n      } else {\r\n        dispatch(alertShopsFailure({ delete: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertShopsFailure({ delete: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const setShopsLoading = (status) => {\r\n  return {\r\n    type: SHOPS_LOADING,\r\n    status\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const getShopsSuccess = (shops) => {\r\n  return {\r\n    type: SET_SHOPS,\r\n    shops\r\n  }\r\n}\r\n\r\nexport const setShopDetails = (details) => {\r\n  return {\r\n    type: SET_SHOP_DETAILS,\r\n    details\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const alertShopsFailure = (errors) => {\r\n  return {\r\n    type: SHOPS_FAILURE,\r\n    errors\r\n  }\r\n}\r\nexport const alertShopsSuccess = (message) => {\r\n  return {\r\n    type: SHOPS_SUCCESS,\r\n    message\r\n  }\r\n}\r\n\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { Breadcrumb, BreadcrumbItem, Table } from 'reactstrap'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport { deletePartnersThunk, getPartnerDetailsThunk, setPartnerDetails } from '../../../redux/actions/partnerActions'\r\n\r\nimport styles from './PartnerDetails.module.scss'\r\nimport { getShopsThunk } from '../../../redux/actions/shopActions'\r\nimport DetailsTableRow from '../../../components/UI/MyTable/DetailsTableRow/DetailsTableRow'\r\nimport MyButton from '../../../components/UI/MyButton/MyButton'\r\nimport { NavLink } from 'react-router-dom'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport FlexBlock from '../../../components/Blocks/FlexBlock/FlexBlock'\r\n\r\n\r\n\r\nconst PartnerDetails = ({\r\n    className, details, getPartnerDetailsThunk, setPartnerDetails, deletePartnersThunk,\r\n    getShopsThunk, shops,\r\n     ...props}) => {\r\n\r\n  const {id} = useParams()\r\n  const history = useHistory()\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, setFailureMessage, checkRes} = useAlert()\r\n\r\n\r\n  const deletePartner = () => {\r\n    const confirmed = window.confirm(\"Вы точно хотите удалить?\");\r\n    if (confirmed) {\r\n        deletePartnersThunk([id])\r\n        .then((res) => {\r\n            checkRes()(res)\r\n            return res\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                setTimeout(() => {\r\n                    history.goBack()\r\n                }, 3000)\r\n            }\r\n        })\r\n        .catch((err) => console.log(err))\r\n    }\r\n   \r\n  }\r\n\r\n  useEffect(() => {\r\n    getPartnerDetailsThunk([id])\r\n    .then(checkRes(false))\r\n    .catch((err) => console.log(err))\r\n    \r\n    return () => {\r\n        setPartnerDetails({\r\n            uuid: '',\r\n            inn: '',\r\n            name: ''\r\n        })\r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getShopsThunk({\r\n        partner_uuid: id\r\n    })\r\n    .then(checkRes(false))\r\n    .catch((err) => console.log(err))\r\n    \r\n    return () => {\r\n      \r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n    const cls = [\r\n        styles.PartnerDetails,\r\n        className\r\n    ]\r\n    if (!details) {\r\n        return <h1>нет такого партнера</h1>\r\n    }\r\n\r\n    if (!details.uuid) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список партнёров</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Детали партнёра &nbsp; <strong>{details.name}</strong></BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <center><h1>Детальная информация о партнёре</h1></center>\r\n            <MyTable>\r\n                <DetailsTableRow\r\n                    label='uuid'\r\n                    data={details.uuid}\r\n                />\r\n                <DetailsTableRow\r\n                    label='ИНН'\r\n                    data={details.inn}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Название'\r\n                    data={details.name}\r\n                />\r\n             \r\n            </MyTable>\r\n\r\n            <FlexBlock>\r\n                <MyButton\r\n                    color={'secondary'}\r\n                    onClick={() => history.push(`/partners/update/${id}`)}\r\n                    buttonText='редактировать'\r\n                />\r\n                <MyButton\r\n                    color={'danger'}\r\n                    onClick={deletePartner}\r\n                    buttonText='удалить партнёра'\r\n                />\r\n            </FlexBlock>\r\n\r\n            \r\n            <MyButton\r\n                color={'success'}\r\n                onClick={() => history.push(`/partners-acquirers/${id}`)}\r\n                buttonText='банки партнера'\r\n            />\r\n         \r\n\r\n                     <center><h2>Список магазинов</h2></center>\r\n            {\r\n                shops && (\r\n\r\n                    <Table hover>\r\n\r\n                        <thead>\r\n                            <tr>\r\n                                <th>№</th>\r\n                                <th>Название</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                shops.map((shop, i) => {\r\n                                    return (\r\n                                        <tr \r\n                                            key={shop.uuid} \r\n                                            onClick={() => history.push(`/shops/${shop.uuid}`)}\r\n                                        >\r\n                                            <td>{i+1}</td>\r\n                                            <td>{shop.name}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                        </tbody>\r\n\r\n                    </Table>\r\n\r\n                )\r\n            }\r\n\r\n           \r\n            {/* <Link to={`/add-shop/${id}`} >добавить магазин</Link> */}\r\n            <MyButton\r\n                color={'primary'}\r\n                onClick={() => history.push(`/add-shop/${id}`)}\r\n                buttonText='добавить магазин'\r\n            />\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        details: state.partners.details,\r\n        shops: state.shops.shops,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps, {\r\n        getPartnerDetailsThunk, setPartnerDetails, deletePartnersThunk,\r\n        getShopsThunk,\r\n    }\r\n    )(PartnerDetails)","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Table, Pagination, PaginationItem, PaginationLink, Container  } from 'reactstrap'\r\nimport { getPartnersThunk } from '../../redux/actions/partnerActions'\r\nimport MyTableForm from '../../components/UI/MyTable/MyTableForm/MyTableForm'\r\n\r\nimport styles from './Partners.module.scss'\r\nimport TableInput from '../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../hooks/useFormValiation'\r\nimport { getTrimmedValues } from '../../utils/utils'\r\nimport MyButton from '../../components/UI/MyButton/MyButton'\r\nimport ClickableTH from '../../components/UI/MyTable/ClickableTH/ClickableTH'\r\nimport ReactPaginate from 'react-paginate'\r\nimport SuccessAlert from '../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../hooks/useAlert'\r\n\r\n\r\nconst Partners = ({className, getPartnersThunk, partners=[], ...props}) => {\r\n\r\n  const {values, handleChange, errors, isValid, } = useFormAndValidation()\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, setFailureMessage, checkRes} = useAlert()\r\n\r\n  const [order, setOrder] = useState(true)\r\n  const [limit, setLimit] = useState(3)\r\n  const [offset, setOffset] = useState(0)\r\n\r\n  const changeOrder = (field) => {\r\n    setOrder(!order)\r\n\r\n    const filterData = getTrimmedValues(values)\r\n\r\n    const sortedData = {\r\n        ...filterData,\r\n        \"sort_by\": [\r\n            {\r\n              field,\r\n              order: order? 'asc' : 'desc'\r\n            }\r\n        ]\r\n    }\r\n    \r\n    getPartnersThunk(sortedData)\r\n\r\n}\r\n\r\n    const handlePageClick = (data) => {\r\n\r\n        console.log(data);\r\n\r\n        const filterData = getTrimmedValues(values)\r\n\r\n        setOffset(data.selected * (filterData.limit || 3))\r\n\r\n        getPartnersThunk({\r\n            limit: filterData.limit || 3,\r\n            ...filterData,\r\n            offset\r\n        })\r\n    }\r\n\r\n\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault()\r\n\r\n    const filterData = getTrimmedValues(values)\r\n\r\n    if (filterData.limit) {\r\n        filterData.limit = Number(filterData.limit)\r\n    }\r\n\r\n    getPartnersThunk(filterData)\r\n    .then(checkRes(false))\r\n    .then(() => console.log('filter getPartnersThunk'))\r\n    console.log(filterData);\r\n  }\r\n\r\n\r\n    const history = useHistory()\r\n\r\n    const cls = [\r\n        styles.Partners,\r\n        className\r\n    ]\r\n\r\n    useEffect(() => {\r\n        getPartnersThunk()\r\n        .then(checkRes(false))\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <center><h1>список партнёров</h1></center>\r\n            <MyTableForm\r\n                onSubmit={onSubmit}\r\n                isValid={isValid}\r\n                buttonText='Найти'\r\n            >\r\n                <TableInput\r\n                    name='inn'\r\n                    label='ИНН'\r\n                    onChange={handleChange}\r\n                    value={values.inn}\r\n                    errorText={errors.inn}\r\n                    minLength={1}\r\n                    maxLength={12}\r\n                    \r\n                />\r\n                <TableInput\r\n                    name='name'\r\n                    label='Название'\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    errorText={errors.name}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                />\r\n                <TableInput\r\n                        type='number'\r\n                        name='limit'\r\n                        label='Кол-во записей'\r\n                        onChange={handleChange}\r\n                        value={values.limit}\r\n                        errorText={errors.limit}\r\n                        style={{\r\n                            width: `140px`\r\n                        }}\r\n                        min={1}\r\n                        max={100}\r\n                    />\r\n            </MyTableForm>\r\n\r\n            <Table hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>№</th>\r\n                        <th>uuid</th>\r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('inn')}\r\n                            label='ИНН'\r\n                        />\r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('name')}\r\n                            label='Название'\r\n                        />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        partners?.length?\r\n                         partners.map((item, i) => {\r\n                            return (\r\n                                <tr \r\n                                    key={item.uuid}\r\n                                    onClick={() => history.push(`/partners/${item.uuid}`)}\r\n                                >\r\n                                    <td>{i+1}</td>\r\n                                    <td>{item.uuid}</td>\r\n                                    <td>{item.inn}</td>\r\n                                    <td>{item.name}</td>\r\n                                </tr>\r\n                            )\r\n                        }) : (\r\n                            <tr>\r\n                                <th>\r\n                                    <h1>ничего не найдено</h1>\r\n                                </th>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                    \r\n                    \r\n                </tbody>\r\n            </Table>\r\n\r\n            <div className={styles.tableBotton} >\r\n\r\n            <MyButton\r\n                color={'primary'}\r\n                onClick={() => history.push(`/add-partner`)}\r\n                buttonText='добавить партнера'\r\n            />\r\n\r\n            <Pagination className={styles.Pagination} aria-label=\"Page navigation\">\r\n                <PaginationItem>\r\n                    <PaginationLink first href=\"#\" />\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                    <PaginationLink previous href=\"#\" />\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                    <PaginationLink href=\"#\">\r\n                    1\r\n                    </PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                    <PaginationLink href=\"#\">\r\n                    2\r\n                    </PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                    <PaginationLink href=\"#\">\r\n                    3\r\n                    </PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                    <PaginationLink href=\"#\">\r\n                    4\r\n                    </PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                    <PaginationLink href=\"#\">\r\n                    5\r\n                    </PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                    <PaginationLink next href=\"#\" />\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                    <PaginationLink last href=\"#\" />\r\n                </PaginationItem>\r\n            </Pagination>\r\n\r\n            {/* <ReactPaginate\r\n                previousLabel={'назад'}\r\n                nextLabel={'вперед'}\r\n                breakLabel={'...'}\r\n                breakClassName={'break-me'}\r\n                pageCount={15/limit}\r\n                marginPagesDisplayed={2}\r\n                pageRangeDisplayed={5}\r\n                onPageChange={handlePageClick}\r\n                containerClassName={'pagination'}\r\n                activeClassName={styles.active}\r\n                pageClassName={styles.pageClass}\r\n                /> */}\r\n\r\n            </div>\r\n\r\n           \r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n           \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        partners: state.partners.partners\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n     getPartnersThunk \r\n})(Partners)","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem, Button } from 'reactstrap'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport { getPartnerDetailsThunk, setPartnerDetails, updatePartnerThunk } from '../../../redux/actions/partnerActions'\r\n\r\nimport styles from './PartnerUpdate.module.scss'\r\n\r\nconst PartnerUpdate = ({\r\n  className, getPartnerDetailsThunk, setPartnerDetails, updatePartnerThunk,\r\n  details, ...props\r\n}) => {\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, setFailureMessage, checkRes} = useAlert()\r\n\r\n\r\n\r\n  const {values, handleChange, errors, isValid, resetForm, setValues, setIsValid } = useFormAndValidation()\r\n  const {id} = useParams()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    getPartnerDetailsThunk([id])\r\n    .then(checkRes(false))\r\n    .catch((err) => console.log(err))\r\n    return () => {\r\n        setPartnerDetails({\r\n            uuid: '',\r\n            inn: '',\r\n            name: ''\r\n        })\r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setIsValid(false)\r\n    // eslint-disable-next-line\r\n}, [])\r\n  useEffect(() => {\r\n    setValues(details)\r\n    // eslint-disable-next-line\r\n}, [details])\r\n\r\n\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault()\r\n    updatePartnerThunk({uuid: id, ...values})\r\n    .then((res) => {\r\n      checkRes()(res)\r\n      return res\r\n    })\r\n    .then(res => {\r\n        if (res.ok) {\r\n            setTimeout(() => {\r\n                history.goBack()\r\n            }, 3000)\r\n        }\r\n    })\r\n    .catch((err) => console.log(err))\r\n    console.log(values);\r\n  }\r\n\r\n    const cls = [\r\n        styles.PartnerUpdate,\r\n        className\r\n    ]\r\n\r\n    if (!details) {\r\n      return <h1>нет такого партнера</h1>\r\n  }\r\n\r\n  if (!details.uuid) {\r\n      return <Spinner/>\r\n  }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n         <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список партнёров</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners/${id}`} exact>Детали партнёра</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Редактирование партнёра</BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <h1>Редактирование информации партнера </h1>\r\n            <form onSubmit={onSubmit}>\r\n              <MyTable>\r\n                <TableInput\r\n                    name='inn'\r\n                    label='ИНН'\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    value={values.inn}\r\n                    errorText={errors.inn}\r\n                    minLength={10}\r\n                    maxLength={12}\r\n                    \r\n                />\r\n                <TableInput\r\n                    name='name'\r\n                    label='Название'\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    errorText={errors.name}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                />\r\n              </MyTable>\r\n              <Button\r\n                 color={isValid? \"success\": 'secondary'}\r\n                  disabled={!isValid}\r\n              >\r\n                сохранить\r\n              </Button>\r\n            </form>\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      details: state.partners.details,\r\n  }\r\n}\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps, {getPartnerDetailsThunk, setPartnerDetails, updatePartnerThunk})(PartnerUpdate)","import myAxios from '../../configs/modified-axios'\r\nimport { makeRes } from '../../utils/utils'\r\nimport { SET_TERMINALS, SET_TERMINAL_DETAILS, TERMINALS_LOADING, TERMINALS_FAILURE, TERMINALS_SUCCESS } from './actionTypes'\r\n\r\n\r\nexport const createTerminalThunk = (inputData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n\r\n      const res = await myAxios.post(`/api/admin/add_terminal`, inputData)\r\n\r\n      console.log(res);\r\n      \r\n      if (res.status === 200 && res.data.result) {\r\n          dispatch(alertTerminalsSuccess({create: 'Терминал добавлен успешно'}))\r\n          return makeRes(true, 'Терминал добавлен успешно')\r\n        } else {\r\n          dispatch(alertTerminalsFailure({ create: res.data.errors }))\r\n          return makeRes(false, res.data.errors)\r\n        } \r\n    } catch (error) {\r\n      console.log(error.message);\r\n      dispatch(alertTerminalsFailure({create: [error.message]}))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n} \r\n\r\nexport const getTerminalsThunk = (filterData={}) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_terminals`, filterData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(getTerminalsSuccess( res.data.result.terminals))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertTerminalsFailure({ terminals: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertTerminalsFailure({ terminals: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const getTerminalDetailsThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_terminals_by_uuids`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setTerminalDetails( res.data.result.terminals[0]))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertTerminalsFailure({ details: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertTerminalsFailure({ details: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateTerminalThunk = (terminalData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/update_terminal`, terminalData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertTerminalsSuccess({update: 'информация о терминале успешно обновлена'}))\r\n        return makeRes(true, 'информация о терминале успешно обновлена')\r\n      } else {\r\n        dispatch(alertTerminalsFailure({ update: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertTerminalsFailure({ update: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const deleteTerminalsThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/delete_terminals`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertTerminalsSuccess({delete: 'терминал успешно удалён'}))\r\n        return makeRes(true, 'терминал успешно удалён')\r\n      } else {\r\n        dispatch(alertTerminalsFailure({ delete: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertTerminalsFailure({ delete: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const setTerminalsLoading = (status) => {\r\n  return {\r\n    type: TERMINALS_LOADING,\r\n    status\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const getTerminalsSuccess = (terminals) => {\r\n  return {\r\n    type: SET_TERMINALS,\r\n    terminals\r\n  }\r\n}\r\n\r\nexport const setTerminalDetails = (details) => {\r\n  return {\r\n    type: SET_TERMINAL_DETAILS,\r\n    details\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const alertTerminalsFailure = (errors) => {\r\n  return {\r\n    type: TERMINALS_FAILURE,\r\n    errors\r\n  }\r\n}\r\nexport const alertTerminalsSuccess = (message) => {\r\n  return {\r\n    type: TERMINALS_SUCCESS,\r\n    message\r\n  }\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem, Button, Table } from 'reactstrap'\r\nimport FlexBlock from '../../../components/Blocks/FlexBlock/FlexBlock'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport MyButton from '../../../components/UI/MyButton/MyButton'\r\nimport ClickableTH from '../../../components/UI/MyTable/ClickableTH/ClickableTH'\r\nimport DetailsTableRow from '../../../components/UI/MyTable/DetailsTableRow/DetailsTableRow'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport StatusTD from '../../../components/UI/MyTable/StatusTD/StatusTD'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport { getAcquirersThunk } from '../../../redux/actions/acquirerActions'\r\nimport { deleteShopsThunk, getShopDetailsThunk, setShopDetails } from '../../../redux/actions/shopActions'\r\nimport { getTerminalsThunk } from '../../../redux/actions/terminalActions'\r\nimport { currenceOptions } from '../../../utils/constants'\r\nimport { getTrimmedValues } from '../../../utils/utils'\r\n\r\nimport styles from './ShopDetails.module.scss'\r\n\r\nconst ShopDetails = ({\r\n  className, details,  getShopDetailsThunk, setShopDetails, getTerminalsThunk,\r\n  deleteShopsThunk, terminals, acquirers, getAcquirersThunk,\r\n   ...props}) => {\r\n\r\n  const {id} = useParams()\r\n  const history = useHistory()\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, setFailureMessage, checkRes} = useAlert()\r\n\r\n    const [order, setOrder] = useState(true)\r\n\r\n    const changeOrder = (field) => {\r\n      setOrder(!order)\r\n  \r\n    //   const filterData = getTrimmedValues(values)\r\n  \r\n      const sortedData = {\r\n        //   ...filterData,\r\n          \"sort_by\": [\r\n              {\r\n                field,\r\n                order: order? 'asc' : 'desc'\r\n              }\r\n          ]\r\n      }\r\n      \r\n      getTerminalsThunk({\r\n          ...sortedData,\r\n          store_uuid: id\r\n        })\r\n      .then(checkRes(false))\r\n  \r\n  }\r\n\r\n  const deleteShop = () => {\r\n    const confirmed = window.confirm(\"Вы точно хотите удалить?\");\r\n    if (confirmed) {\r\n        deleteShopsThunk([id])\r\n        .then((res) => {\r\n            checkRes()(res)\r\n            return res\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                setTimeout(() => {\r\n                    history.goBack()\r\n                }, 3000)\r\n            }\r\n        })\r\n        .then(() => {\r\n            console.log('deleteShopsThunk');\r\n        })\r\n        .catch((err) => console.log(err))\r\n    }\r\n    \r\n  }\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    getAcquirersThunk()\r\n// eslint-disable-next-line\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n\r\n    getShopDetailsThunk([id])\r\n    getTerminalsThunk({store_uuid: id})\r\n\r\n    return () => {\r\n      setShopDetails({\r\n          uuid: '',\r\n          partner_uuid: '',\r\n          name: '',\r\n        })\r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n    const cls = [\r\n        styles.ShopDetails,\r\n        className\r\n    ]\r\n    if (!details) {\r\n        return <h1>нет такого магазина</h1>\r\n    }\r\n\r\n    if (!details.uuid) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n         <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список партнёров</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Детали магазина &nbsp; <strong>{details.name}</strong></BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <center><h1>Детальная информация о магазине</h1></center>\r\n            <MyTable>\r\n                 <DetailsTableRow\r\n                    label='uuid'\r\n                    data={details.uuid}\r\n                />\r\n                 <DetailsTableRow\r\n                    label='Название'\r\n                    data={details.name}\r\n                />\r\n            </MyTable>\r\n\r\n            <FlexBlock>\r\n                    <MyButton\r\n                        color={'secondary'}\r\n                        onClick={() => history.push(`/shops/update/${id}`)}\r\n                        buttonText='редактировать'\r\n                    />\r\n                    <MyButton\r\n                        color={'danger'}\r\n                        onClick={deleteShop}\r\n                        buttonText='удалить'\r\n                    />\r\n            </FlexBlock>\r\n\r\n\r\n            <center><h2>Список терминалов</h2></center>\r\n          \r\n\r\n                    <Table hover>\r\n\r\n                        <thead>\r\n                            <tr>\r\n                                <th>№</th>\r\n                                <th>Банк</th>\r\n                                <ClickableTH\r\n                                    onClick={() => changeOrder('active')}\r\n                                    label='Cтатус'\r\n                                />\r\n                                <ClickableTH\r\n                                    onClick={() => changeOrder('currency_num')}\r\n                                    label='Валюта'\r\n                                />\r\n                                <ClickableTH\r\n                                    onClick={() => changeOrder('name')}\r\n                                    label='Название'\r\n                                />\r\n                                <th>Операции</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                           {\r\n                            terminals && terminals.map((item, i) => {\r\n                                const currency =  currenceOptions.find(i => {\r\n                                                    return i.value === item.currency_num\r\n                                                })\r\n                                const bank = acquirers?.find((bank) => {\r\n                                    return bank.uuid === item.acquirer_uuid\r\n                                })\r\n                                return (\r\n                                        <tr \r\n                                            key={item.uuid} \r\n                                            onClick={() => history.push(`/terminals/${item.uuid}`)}\r\n                                        >\r\n                                            <td>{i+1}</td>\r\n                                            <td>{bank?.name}</td>\r\n                                            <StatusTD\r\n                                                active={item.active}\r\n                                            />\r\n                                            <td> \r\n\r\n                                                {`${item.currency_num} / ${currency?.code} / ${currency?.name}`}\r\n                                                \r\n                                            </td>\r\n                                            <td>{item.name}</td>\r\n                                            <td>{item.operations.join(' ').toUpperCase()}</td>\r\n                                        </tr>\r\n                                    )\r\n                            })\r\n                           }\r\n\r\n                        </tbody>\r\n\r\n                    </Table>\r\n                    \r\n                    <MyButton\r\n                        color={'primary'}\r\n                        onClick={() => history.push(`/add-terminal/${id}`)}\r\n                        buttonText='добавить терминал'\r\n                    />\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    details: state.shops.details,\r\n    terminals: state.terminals.terminals,\r\n    acquirers: state.acquirers.acquirers,\r\n  }\r\n  }\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n  getShopDetailsThunk, setShopDetails, deleteShopsThunk, getTerminalsThunk,\r\n  getAcquirersThunk,\r\n})(ShopDetails)","import React from 'react'\r\n\r\nimport styles from './Shops.module.scss'\r\n\r\nconst Shops = ({className, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.Shops,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <h1>Shops</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shops","import React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\n\r\nimport styles from './ShopsAddition.module.scss'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { createShopThunk } from '../../../redux/actions/shopActions'\r\nimport { checkResponse } from '../../../utils/utils'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\n\r\nconst ShopsAddition = ({className, createShopThunk, ...props}) => {\r\n\r\n    const {partnerId} = useParams()\r\n\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n        failureAlertVisible, setFailureAlertVisible, failureMessage, setFailureMessage, checkRes} = useAlert()\r\n    \r\n\r\n    const {values, handleChange, errors, isValid, resetForm, setValues, setIsValid } = useFormAndValidation()\r\n    \r\n    useEffect(() => {\r\n        setIsValid(false)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const cls = [\r\n        styles.ShopsAddition,\r\n        className\r\n    ]\r\n\r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        const shopData = {\r\n            ...values,\r\n            partner_uuid: partnerId\r\n        }\r\n        console.log(shopData);\r\n\r\n        createShopThunk(shopData)\r\n        .then((res) => {\r\n            checkRes()(res)\r\n            return res\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                setTimeout(() => {\r\n                    resetForm()\r\n                }, 3000)\r\n            }\r\n        })\r\n        .catch((err) => console.log(err))\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n         <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список партнёров</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners/${partnerId}`} exact>Детали партнёра</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Добавление магазина</BreadcrumbItem>\r\n        </Breadcrumb>\r\n\r\n            <center><h1>Добавление магазина</h1></center>\r\n            <MyTableForm\r\n                onSubmit={onSubmit}\r\n                isValid={isValid}\r\n            >\r\n                    <TableInput\r\n                         name='name'\r\n                        label='Название'\r\n                        required={true}\r\n                        onChange={handleChange}\r\n                        value={values.name}\r\n                        errorText={errors.name}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n            </MyTableForm>\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default connect(null, { createShopThunk })(ShopsAddition)","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\n\r\nimport styles from './ShopUpdate.module.scss'\r\nimport { getShopDetailsThunk, setShopDetails, updateShopThunk } from '../../../redux/actions/shopActions'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\n\r\nconst ShopUpdate = ({\r\n  className,  details,  getShopDetailsThunk, setShopDetails, \r\n  updateShopThunk, \r\n  ...props}) => {\r\n\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n      failureAlertVisible, setFailureAlertVisible, failureMessage, setFailureMessage, checkRes} = useAlert()\r\n  \r\n\r\n  const {values, handleChange, errors, isValid, setValues, setIsValid } = useFormAndValidation()\r\n\r\n  const {id} = useParams()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    getShopDetailsThunk([id])\r\n    .then(checkRes(false))\r\n    return () => {\r\n      setShopDetails({\r\n          uuid: '',\r\n          partner_uuid: '',\r\n          name: '',\r\n        })\r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setIsValid(false)\r\n    // eslint-disable-next-line\r\n}, [])\r\n\r\nuseEffect(() => {\r\n  setValues(details)\r\n  // eslint-disable-next-line\r\n}, [details])\r\n\r\nconst onSubmit = (evt) => {\r\n  evt.preventDefault()\r\n  updateShopThunk({uuid: id, ...values})\r\n  .then((res) => {\r\n    checkRes()(res)\r\n    return res\r\n  })\r\n  .then(res => {\r\n      if (res.ok) {\r\n          setTimeout(() => {\r\n            history.goBack()\r\n          }, 1000)\r\n      }\r\n  })\r\n  .catch((err) => console.log(err))\r\n  console.log(values);\r\n}\r\n\r\n    const cls = [\r\n        styles.ShopUpdate,\r\n        className\r\n    ]\r\n\r\n    if (!details) {\r\n      return <h1>нет такого магазина</h1>\r\n  }\r\n\r\n  if (!details.uuid) {\r\n      return <Spinner/>\r\n  }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n         <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список партнёров</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/shops/${id}`} exact>Детали магазина</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Редактирование магазина &nbsp; <strong>{details.name}</strong></BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <h1>Редактирование информации о магазине </h1>\r\n            <MyTableForm\r\n              onSubmit={onSubmit}\r\n              isValid={isValid}\r\n            >\r\n              <TableInput\r\n                    name='name'\r\n                    label='Название'\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    errorText={errors.name}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                />\r\n\r\n            </MyTableForm>\r\n\r\n                <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    details: state.shops.details,\r\n  }\r\n  }\r\n  \r\n\r\n\r\n  export default connect(mapStateToProps, {\r\n    getShopDetailsThunk, setShopDetails, updateShopThunk\r\n  })(ShopUpdate)","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport FlexBlock from '../../../components/Blocks/FlexBlock/FlexBlock'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport MyButton from '../../../components/UI/MyButton/MyButton'\r\nimport DetailsTableRow from '../../../components/UI/MyTable/DetailsTableRow/DetailsTableRow'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport { deleteTerminalsThunk, getTerminalDetailsThunk } from '../../../redux/actions/terminalActions'\r\n\r\nimport styles from './TerminalDetails.module.scss'\r\n\r\nconst TerminalDetails = ({\r\n  className, details, getTerminalDetailsThunk, deleteTerminalsThunk,\r\n  ...props}) => {\r\n\r\n  const { id } = useParams()\r\n  const history = useHistory()\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, setFailureMessage, checkRes} = useAlert()\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    getTerminalDetailsThunk([id])\r\n    .then(checkRes(false))\r\n\r\n    return () => {\r\n      // setShopDetails({\r\n      //     uuid: '',\r\n      //     partner_uuid: '',\r\n      //     name: '',\r\n      //   })\r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n  const onDelete = () => {\r\n    const confirmed = window.confirm(\"Вы точно хотите удалить?\");\r\n    if (confirmed) {\r\n      deleteTerminalsThunk([id])\r\n      .then((res) => {\r\n        checkRes()(res)\r\n        return res\r\n      })\r\n      .then(res => {\r\n          if (res.ok) {\r\n              setTimeout(() => {\r\n                history.goBack()\r\n              }, 1000)\r\n          }\r\n      })\r\n      .then(() => console.log('deleteTerminalsThunk'))\r\n      .catch((err) => console.log(err))\r\n    }\r\n  }\r\n\r\n    const cls = [\r\n        styles.TerminalDetails,\r\n        className\r\n    ]\r\n\r\n    if (!details) {\r\n      return <h1>нет такого терминала</h1>\r\n    }\r\n\r\n    if (!details.uuid) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n         <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список партнёров</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Детали терминала &nbsp; <strong>{details.name}</strong></BreadcrumbItem>\r\n        </Breadcrumb>\r\n             <center><h1>Детальная информация о терминале</h1></center>\r\n            <MyTable>\r\n                <DetailsTableRow\r\n                    label='uuid'\r\n                    data={details.uuid}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Банк'\r\n                    data={details.acquirer_uuid}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Статус'\r\n                    data={(details.active && 'активен') || 'неактивен'}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Код валюты'\r\n                    data={details.currency_num}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Название'\r\n                    data={details.name}\r\n                />\r\n                <DetailsTableRow\r\n                    label='id конфигурации'\r\n                    data={details.config_id}\r\n                />\r\n                 <DetailsTableRow\r\n                    label='Операции'\r\n                    data={details.operations.join(' ').toUpperCase()}\r\n                />\r\n        </MyTable>\r\n\r\n\r\n       <FlexBlock>\r\n          <MyButton\r\n                color={'secondary'}\r\n                onClick={() => history.push(`/terminals/update/${id}`)}\r\n                buttonText='редактировать'\r\n            />\r\n            <MyButton\r\n                color={'danger'}\r\n                onClick={onDelete}\r\n                buttonText='удалить'\r\n            />\r\n       </FlexBlock>\r\n       \r\n            <SuccessAlert\r\n                    visible={successAlertVisible}\r\n                    setVisible={setSuccessAlertVisible}\r\n                    message={successMessage}\r\n                />\r\n\r\n            <FailureAlert\r\n                visible={failureAlertVisible}\r\n                setVisible={setFailureAlertVisible}\r\n                message={failureMessage}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    details: state.terminals.details,\r\n  }\r\n  }\r\n\r\n  \r\n\r\nexport default connect(mapStateToProps, {\r\n  getTerminalDetailsThunk, deleteTerminalsThunk, \r\n })(TerminalDetails)","import React from 'react'\r\n\r\nimport styles from './Terminals.module.scss'\r\n\r\nconst Terminals = ({className, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.Terminals,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <h1>Terminals</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Terminals","import React, { useState, useEffect } from 'react'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport TableMultiselect from '../../../components/UI/MyTable/TableMultiselect/TableMultiselect'\r\n\r\nimport styles from './TerminalsAddition.module.scss'\r\nimport { useParams } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport { getAcquirersThunk } from '../../../redux/actions/acquirerActions'\r\nimport { createTerminalThunk } from '../../../redux/actions/terminalActions'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\n\r\nconst TerminalsAddition = ({\r\n    className, getAcquirersThunk, acquirers, createTerminalThunk,\r\n    ...props}) => {\r\n\r\n    const {shopId} = useParams()\r\n\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n        failureAlertVisible, setFailureAlertVisible, failureMessage, setFailureMessage, checkRes} = useAlert()\r\n    \r\n\r\n    const {values, handleChange, errors, isValid, resetForm, setValues, setIsValid } = useFormAndValidation()\r\n    \r\n    const [bankOptions, setBankOptions] = useState([{name: 'Загружаются данные...', avtive: true}])\r\n    const activeOptions = [\r\n        {name: 'Да', value: true, jsonKey: 'active'},\r\n        {name: 'Нет', value: false, jsonKey: 'active'},\r\n    ]\r\n    \r\n    const operationsOptions = [\r\n        {name: 'AFT', value: 'aft', jsonKey: 'operations'},\r\n        {name: 'AFT рекуррент', value: 'aft_recurring', jsonKey: 'operations'},\r\n        {name: 'ECOM', value: 'ecom', jsonKey: 'operations'},\r\n        {name: 'ECOM рекуррент', value: 'ecom_recurring', jsonKey: 'operations'},\r\n        {name: 'ECOM рекуррент регистрация', value: 'ecom_recurring_reg', jsonKey: 'operations'},\r\n        {name: 'OCT (B2C) - выдача на карту', value: 'oct_card', jsonKey: 'operations'},\r\n        {name: 'OCT - выдача на счет', value: 'oct_account', jsonKey: 'operations'},\r\n    ]\r\n\r\n    const currenceOptions = [\r\n        {\"value\": \"643\", \"code\": \"RUB\", \"name\": \"Российский рубль\", jsonKey: 'currency_num'},\r\n            {\"value\": \"840\", \"code\": \"USD\", \"name\": \"Доллар США\", jsonKey: 'currency_num'},\r\n            {\"value\": \"978\", \"code\": \"EUR\", \"name\": \"Евро\", jsonKey: 'currency_num'},\r\n            {\"value\": \"392\", \"code\": \"JPY\", \"name\": \"Японская йена\", jsonKey: 'currency_num'},\r\n            {\"value\": \"156\", \"code\": \"CNY\", \"name\": \"Китайский юань женьминьби\", jsonKey: 'currency_num'},\r\n    ]\r\n\r\n    const onSingleSelect = (selectedList, {jsonKey, value}) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [jsonKey]: value\r\n        })\r\n    }\r\n    const onBankSelect = (selectedList, selectedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            acquirer_uuid: selectedItem.uuid\r\n        })\r\n    }\r\n    const onMultiSelect = (selectedList, selectedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [selectedItem.jsonKey]: selectedList.map(i => i.value)\r\n        })\r\n    }\r\n\r\n    const onRemove = (selectedList, removedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [removedItem.jsonKey]: selectedList.map(i => i.value)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAcquirersThunk()\r\n        // eslint-disable-next-line\r\n    }, [])\r\n    useEffect(() => {\r\n        if (acquirers) {\r\n            setBankOptions(acquirers)\r\n        }\r\n    }, [acquirers])\r\n\r\n    useEffect(() => {\r\n        setIsValid(false)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const cls = [\r\n        styles.TerminalsAddition,\r\n        className\r\n    ]\r\n\r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        const terminalData = {\r\n            ...values,\r\n            store_uuid: shopId\r\n        }\r\n        console.log(terminalData);\r\n\r\n        createTerminalThunk(terminalData)\r\n        .then((res) => {\r\n            checkRes()(res)\r\n            return res\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  setTimeout(() => {\r\n                      resetForm()\r\n                  }, 3000)\r\n              }\r\n          })\r\n          .catch((err) => console.log(err))\r\n        .then(() => console.log('TerminalsAddition'))\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n         <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список партнёров</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/shops/${shopId}`} exact>Детали магазина</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Добавление терминала</BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <center><h1>Добавление терминала</h1></center>\r\n            <MyTableForm\r\n                onSubmit={onSubmit}\r\n                isValid={isValid}\r\n            >\r\n                    <TableInput\r\n                         name='name'\r\n                        label='Название'\r\n                        required={true}\r\n                        onChange={handleChange}\r\n                        value={values.name}\r\n                        errorText={errors.name}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableMultiselect\r\n                        label='Банк'\r\n                        options={bankOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onBankSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                    />\r\n                     <TableMultiselect\r\n                        label='Aктивен'\r\n                        options={activeOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onSingleSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                    />\r\n                    <TableMultiselect\r\n                        label='Операции'\r\n                        options={operationsOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onMultiSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                    />\r\n                    <TableMultiselect\r\n                        label='Код валюты'\r\n                        options={currenceOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onSingleSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                    />\r\n                    <TableInput\r\n                         name='config_id'\r\n                        label='id конфигурации'\r\n                        required={true}\r\n                        onChange={handleChange}\r\n                        value={values.config_id}\r\n                        errorText={errors.config_id}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n            </MyTableForm>\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        acquirers: state.acquirers.acquirers,\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n     getAcquirersThunk, createTerminalThunk,\r\n    })(TerminalsAddition)","import React, { useState, useEffect } from 'react'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport TableMultiselect from '../../../components/UI/MyTable/TableMultiselect/TableMultiselect'\r\n\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport { getTerminalDetailsThunk, setTerminalDetails, updateTerminalThunk } from '../../../redux/actions/terminalActions'\r\n\r\n\r\n\r\nimport styles from './TerminalUpdate.module.scss'\r\nimport { activeOptions, currenceOptions, operationsOptions } from '../../../utils/constants'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\n\r\nconst TerminalUpdate = ({\r\n  className, getTerminalDetailsThunk, details, acquirers, \r\n  setTerminalDetails, updateTerminalThunk,\r\n  ...props}) => {\r\n\r\n  const {id} = useParams()\r\n  const history = useHistory()\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, setFailureMessage, checkRes} = useAlert()\r\n\r\n\r\n  const {values, handleChange, errors, isValid, setValues, setIsValid } = useFormAndValidation()\r\n  const [activePreselect, setActivePreselect] = useState([{name: 'загружается...'}])\r\n  const [operationsPreselect, setOperationsPreselect] = useState([{name: 'загружается...'}])\r\n  const [currencyPreselect, setcurrencyPreselect] = useState([{name: 'загружается...'}])\r\n \r\n//   useEffect(() => {\r\n//     setIsValid(false)\r\n//     // eslint-disable-next-line\r\n// }, [])\r\n\r\nuseEffect(() => {\r\n  const {acquirer_uuid, store_uuid, ...rest} = details\r\n  setValues(rest)\r\n  // eslint-disable-next-line\r\n}, [details])\r\n\r\nuseEffect(() => {\r\n  if (details) {\r\n\r\n    const isActive = activeOptions.find(i => i.value === details.active)\r\n\r\n    if (isActive) {\r\n      setActivePreselect([isActive])\r\n    }\r\n\r\n    const preselectedOperations = operationsOptions.filter(i => {\r\n        return details.operations.includes(i.value)\r\n    } )\r\n\r\n    if (preselectedOperations.length) {\r\n      setOperationsPreselect(preselectedOperations)\r\n    }\r\n\r\n    const preselectedCurrency = currenceOptions.find(i => {\r\n      return details.currency_num === i.value\r\n  } )\r\n\r\n    if (preselectedCurrency) {\r\n      setcurrencyPreselect([preselectedCurrency])\r\n    }\r\n\r\n  }\r\n  // eslint-disable-next-line\r\n}, [details])\r\n\r\n\r\nuseEffect(() => {\r\n\r\n  getTerminalDetailsThunk([id])\r\n  .then(checkRes(false))\r\n\r\n  return () => {\r\n    setTerminalDetails({\r\n        uuid: '',\r\n        acquirer_uuid: '',\r\n        name: '',\r\n        config: {},\r\n        currency_num: '',\r\n        config_id: '',\r\n        operations: [],\r\n        store_uuid: ''\r\n      })\r\n  }\r\n  // eslint-disable-next-line \r\n}, [])\r\n\r\n  const onSingleSelect = (selectedList, {jsonKey, value}) => {\r\n      console.log(selectedList);\r\n      setValues({\r\n          ...values,\r\n          [jsonKey]: value\r\n      })\r\n  }\r\n\r\n  const onMultiSelect = (selectedList, selectedItem) => {\r\n      console.log(selectedList);\r\n      setValues({\r\n          ...values,\r\n          [selectedItem.jsonKey]: selectedList.map(i => i.value)\r\n      })\r\n  }\r\n\r\n  const onRemove = (selectedList, removedItem) => {\r\n      console.log(selectedList);\r\n      setValues({\r\n          ...values,\r\n          [removedItem.jsonKey]: selectedList.map(i => i.value)\r\n      })\r\n  }\r\n\r\n    const cls = [\r\n        styles.TerminalUpdate,\r\n        className\r\n    ]\r\n\r\n    const onSubmit = (evt) => {\r\n      evt.preventDefault()\r\n      console.log(values);\r\n      const terminalData = {\r\n          ...values,\r\n          uuid: id\r\n      }\r\n      console.log(terminalData);\r\n\r\n      updateTerminalThunk(terminalData)\r\n      .then((res) => {\r\n        checkRes()(res)\r\n        return res\r\n      })\r\n      .then(res => {\r\n          if (res.ok) {\r\n              setTimeout(() => {\r\n                history.goBack()\r\n              }, 1000)\r\n          }\r\n      })\r\n      .then(() => console.log('TerminalsAddition'))\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  \r\n    if (!details) {\r\n      return <h1>нет такого терминала</h1>\r\n    }\r\n\r\n    if (!details.uuid) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n         <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список партнёров</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/terminals/${id}`} exact>Детали терминала</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Обновление терминала &nbsp; <strong> {details.name}</strong> </BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <center><h1>Обновление терминала</h1></center>\r\n            <MyTableForm\r\n                onSubmit={onSubmit}\r\n                isValid={isValid}\r\n                buttonText='Сохранить'\r\n            >\r\n                    <TableInput\r\n                         name='name'\r\n                        label='Название'\r\n                        onChange={handleChange}\r\n                        value={values.name}\r\n                        errorText={errors.name}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                     <TableMultiselect\r\n                        label='Aктивен'\r\n                        options={activeOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onSingleSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                        selectedValues={activePreselect}\r\n                    />\r\n                    <TableMultiselect\r\n                        label='Операции'\r\n                        options={operationsOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onMultiSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        selectedValues={operationsPreselect}\r\n                    />\r\n                    <TableMultiselect\r\n                        label='Код валюты'\r\n                        options={currenceOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onSingleSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                        selectedValues={currencyPreselect}\r\n                    />\r\n                    <TableInput\r\n                         name='config_id'\r\n                        label='id конфигурации'\r\n                        onChange={handleChange}\r\n                        value={values.config_id}\r\n                        errorText={errors.config_id}\r\n                        minLength={1}\r\n                        maxLength={200}\r\n                    />\r\n            </MyTableForm>\r\n\r\n                <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    details: state.terminals.details,\r\n    // acquirers: state.acquirers.acquirers,\r\n  }\r\n  }\r\n\r\n  \r\n\r\nexport default connect(mapStateToProps, {\r\n   getTerminalDetailsThunk, setTerminalDetails, updateTerminalThunk\r\n  }) (TerminalUpdate)","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport AccountCreation from '../../pages/Accounts/AccountCreation/AccountCreation'\r\nimport AccountDetails from '../../pages/Accounts/AccountDetails/AccountDetails'\r\nimport Accounts from '../../pages/Accounts/Accounts'\r\nimport AcquirerAddition from '../../pages/Acquirers/AcquirerAddition/AcquirerAddition'\r\nimport Acquirers from '../../pages/Acquirers/Acquirers'\r\nimport AcquirersDetails from '../../pages/Acquirers/AcquirersDetails/AcquirersDetails'\r\nimport AcquirersUpdate from '../../pages/Acquirers/AcquirersUpdate/AcquirersUpdate'\r\nimport HomePage from '../../pages/HomePage/HomePage'\r\nimport News from '../../pages/News/News'\r\nimport NewsCreation from '../../pages/News/NewsCreation/NewsCreation'\r\nimport NewsDetails from '../../pages/News/NewsDetails/NewsDetails'\r\nimport PartnerAcquierers from '../../pages/PartnerAcquierers/PartnerAcquierers'\r\nimport PartnerAcquierersAddition from '../../pages/PartnerAcquierers/PartnerAcquierersAddition/PartnerAcquierersAddition'\r\nimport PartnerAcquierersDetails from '../../pages/PartnerAcquierers/PartnerAcquierersDetails/PartnerAcquierersDetails'\r\nimport PartnerAcquierersUpdate from '../../pages/PartnerAcquierers/PartnerAcquierersUpdate/PartnerAcquierersUpdate'\r\nimport PartnerAddition from '../../pages/Partners/PartnerAddition/PartnerAddition'\r\nimport PartnerDetails from '../../pages/Partners/PartnerDetails/PartnerDetails'\r\nimport Partners from '../../pages/Partners/Partners'\r\nimport PartnerUpdate from '../../pages/Partners/PartnerUpdate/PartnerUpdate'\r\nimport ShopDetails from '../../pages/Shops/ShopDetails/ShopDetails'\r\nimport Shops from '../../pages/Shops/Shops'\r\nimport ShopsAddition from '../../pages/Shops/ShopsAddition/ShopsAddition'\r\nimport ShopUpdate from '../../pages/Shops/ShopUpdate/ShopUpdate'\r\nimport TerminalDetails from '../../pages/Terminals/TerminalDetails/TerminalDetails'\r\nimport Terminals from '../../pages/Terminals/Terminals'\r\nimport TerminalsAddition from '../../pages/Terminals/TerminalsAddition/TerminalsAddition'\r\nimport TerminalUpdate from '../../pages/Terminals/TerminalUpdate/TerminalUpdate'\r\n\r\nimport styles from './Main.module.scss'\r\n\r\nconst Main = (props) => {\r\n\r\n    return (\r\n        <div className={styles.Main}>\r\n            <Switch>\r\n                <Route path='/' exact component={HomePage} />\r\n                <Route path='/accounts' exact component={Accounts} />\r\n                <Route path='/accounts/:id' component={AccountDetails} />\r\n                <Route path='/create-account' component={AccountCreation} />\r\n                <Route path='/news' exact component={News} />\r\n                <Route path='/news/:id' component={NewsDetails} />\r\n                <Route path='/create-news' component={NewsCreation} />\r\n                <Route path='/acquirers' exact component={Acquirers} />\r\n                <Route path='/acquirers/:id' exact component={AcquirersDetails} />\r\n                <Route path='/acquirers/update/:id' exact component={AcquirersUpdate} />\r\n                <Route path='/add-acquirer' component={AcquirerAddition} />\r\n                <Route path='/partners' exact component={Partners} />\r\n                <Route path='/partners/:id' exact component={PartnerDetails} />\r\n                <Route path='/partners/update/:id' exact component={PartnerUpdate} />\r\n                <Route path='/add-partner' component={PartnerAddition} />\r\n                <Route path='/partners-acquirers/:partnerId' exact component={PartnerAcquierers} />\r\n                <Route path='/partners-acquirers/:partnerId/:id' exact component={PartnerAcquierersDetails} />\r\n                <Route path='/partners-acquirers/:partnerId/:id/update' exact component={PartnerAcquierersUpdate} />\r\n                <Route path='/add-partner-acquirer/:partnerId' component={PartnerAcquierersAddition} />\r\n                <Route path='/shops' exact component={Shops} />\r\n                <Route path='/shops/:id' exact component={ShopDetails} />\r\n                <Route path='/shops/update/:id' exact component={ShopUpdate} />\r\n                <Route path='/add-shop/:partnerId' component={ShopsAddition} />\r\n                <Route path='/terminals' exact component={Terminals} />\r\n                <Route path='/terminals/:id' exact component={TerminalDetails} />\r\n                <Route path='/terminals/update/:id' exact component={TerminalUpdate} />\r\n                <Route path='/add-terminal/:shopId' exact component={TerminalsAddition} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","import React, { Fragment } from 'react'\r\nimport { UncontrolledCollapse } from 'reactstrap'\r\n\r\nimport styles from './MyDropDown.module.scss'\r\n\r\nconst MyDropDown = ({title, children, className, ...props}) => {\r\n\r\n  const id = 'toggler' +  Math.random().toString().slice(2)\r\n\r\n  const cls = [\r\n    styles.MyDropDown,\r\n    className\r\n  ]\r\n\r\n    return (\r\n        <Fragment>\r\n          <p id={id} className={cls.join(' ')} >{title}</p>\r\n          <UncontrolledCollapse toggler={`#${id}`}>\r\n            {children}\r\n          </UncontrolledCollapse>\r\n          <hr />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default MyDropDown","import React from 'react'\r\nimport { NavLink as RRNavLink } from \"react-router-dom\";\r\nimport { NavLink } from 'reactstrap';\r\n\r\nimport styles from './MyLink.module.scss'\r\n\r\nconst MyLink = (props) => {\r\n\r\n    return (\r\n      <NavLink tag={RRNavLink} \r\n        className={styles.MyLink}\r\n        {...props} \r\n        activeStyle={{\r\n          fontWeight: \"bold\",\r\n          color: \"#A31FED\"\r\n        }}\r\n      >{props.children}</NavLink>\r\n    )\r\n}\r\n\r\nexport default MyLink","import React from \"react\";\r\nimport { Nav, NavItem } from 'reactstrap';\r\nimport MyDropDown from \"../UI/MyDropDown/MyDropDown\";\r\nimport MyLink from \"../UI/MyLink/MyLink\";\r\n\r\nimport styles from \"./SideMenu.module.scss\";\r\n\r\nconst SideMenu = (props) => {\r\n  return (\r\n    <div className={styles.SideMenu}>\r\n      <MyDropDown title={`Управление аккаунтами`}>\r\n        <Nav vertical>\r\n            <NavItem>\r\n              <MyLink to=\"/accounts\">Аккаунты</MyLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <MyLink to=\"/create-account\">Создать аккаунт</MyLink>\r\n            </NavItem>\r\n          </Nav>\r\n      </MyDropDown>\r\n      <MyDropDown title={'Интеграция'}>\r\n        <Nav vertical>\r\n            <NavItem>\r\n              <MyLink to=\"/partners\">Партнёры</MyLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <MyLink to=\"/acquirers\">Банки</MyLink>\r\n            </NavItem>\r\n        </Nav>\r\n      </MyDropDown>\r\n      <MyDropDown title={'Транзакции'}>\r\n        <Nav vertical>\r\n            <NavItem>\r\n              <MyLink to=\"/transactions\">Транзакции</MyLink>\r\n            </NavItem>\r\n        </Nav>\r\n      </MyDropDown>\r\n\r\n   \r\n \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideMenu;\r\n","import React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Footer from '../../components/Footer/Footer'\r\nimport Header from '../../components/Header/Header'\r\nimport Login from '../../components/Login/Login'\r\nimport Main from '../../components/Main/Main'\r\nimport SideMenu from '../../components/SideMenu/SideMenu'\r\nimport { refreshToken, setIsLoggedIn } from '../../redux/actions/loginActions'\r\nimport { getAccessExpiry } from '../../utils/utils'\r\n\r\nimport styles from './Layout.module.scss'\r\n\r\nconst Layout = ({isLoggedIn, refreshToken, setIsLoggedIn}) => {\r\n\r\n    \r\n    useEffect(() => {\r\n        const tokenTime = getAccessExpiry()\r\n        if (!tokenTime) return\r\n        const isExpired = Date.now() >= tokenTime\r\n        const delay = Math.floor((tokenTime - Date.now()))\r\n        let timer;\r\n        console.log(delay);\r\n        if (isExpired) {\r\n            refreshToken()\r\n        } else {\r\n            setIsLoggedIn(true)\r\n            timer = setTimeout(() => {\r\n                refreshToken()\r\n            }, delay )\r\n        }\r\n        return () => clearTimeout(timer)\r\n    },[refreshToken, setIsLoggedIn])\r\n\r\n    // if (!isLoggedIn) {\r\n    //     return (\r\n    //         <Login/>\r\n    //     )\r\n    // }\r\n\r\n    return (\r\n        <div className={styles.Layout}>\r\n            <Header/>\r\n            <div className='d-flex'>\r\n                <SideMenu/>\r\n                <Main/>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.login.isLoggedIn,\r\n        // errors: state.login.errors,\r\n        // loading: state.login.loading,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {refreshToken, setIsLoggedIn})(Layout)","import React from 'react'\r\n\r\nimport styles from './ErrorBoundary.module.scss'\r\n\r\nclass ErrorBoundary extends React.Component {\r\n\r\n    state = { hasError: false };\r\n  \r\n    static getDerivedStateFromError(error) {\r\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n      return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error, errorInfo) {\r\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n      console.log(error, errorInfo)\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) {\r\n        // Можно отрендерить запасной UI произвольного вида\r\n        return <h1 className={styles.ErrorBoundary}>Что-то пошло не так.</h1>;\r\n      }\r\n  \r\n      return this.props.children; \r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary","import { CLOSE_MENU, OPEN_MENU } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    menuIsOpened: false,\r\n}\r\n\r\n\r\nexport default function layoutReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case OPEN_MENU:\r\n            return { ...state, menuIsOpened: true }\r\n        case CLOSE_MENU:\r\n            return { ...state, menuIsOpened: false }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { LOG_OUT, SET_IS_ADMIN, SET_IS_LOGGED_IN, SET_LOGIN_ERRORS, SET_LOGIN_LOADING } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  isLoggedIn: false,\r\n  errors: null,\r\n  loading: false,\r\n  user: 'customer',\r\n  authData: null,\r\n  isAdmin: false\r\n}\r\n\r\nexport default function loginReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_IS_LOGGED_IN:\r\n      return {\r\n        ...state, \r\n        isLoggedIn: action.status,\r\n        authData: action.authData\r\n      }\r\n    case SET_IS_ADMIN:\r\n      return {\r\n        ...state,\r\n        isAdmin: action.isAdmin,\r\n        user: 'admin',\r\n      }\r\n    case SET_LOGIN_ERRORS:\r\n      return {\r\n        ...state,\r\n        errors: action.errors\r\n      }\r\n    case SET_LOGIN_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status,\r\n      }\r\n    case LOG_OUT:\r\n      return initialState\r\n    default:\r\n      return state;\r\n  }\r\n}","import { SET_NEWS_FAILURE, GET_NEWS_SUCCESS, NEWS_LOADING,\r\n  GET_NEWS_DETAILS,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  news: [],\r\n  loading: false,\r\n  errors: {\r\n    news: null,\r\n    details: null,\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  details: {},\r\n}\r\n\r\nexport default function blogReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_NEWS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        news: action.news\r\n      }\r\n    case NEWS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status\r\n      }\r\n    case SET_NEWS_FAILURE:\r\n      return {\r\n        ...state,\r\n        errors: {\r\n          ...state.errors,\r\n          ...action.errors\r\n        }\r\n      }\r\n    case GET_NEWS_DETAILS:\r\n        return {\r\n          ...state,\r\n          details: action.details\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { ACCOUNTS_LOADING, GET_ACCOUNTS_DETAILS, GET_ACCOUNTS_FAILURE, GET_ACCOUNTS_SUCCESS } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  accounts: [],\r\n  loading: false,\r\n  errors: {\r\n    accounts: null,\r\n    details: null,\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  details: {},\r\n}\r\n\r\nexport default function accountReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ACCOUNTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        accounts: action.accounts\r\n      }\r\n    case ACCOUNTS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status\r\n      }\r\n    case GET_ACCOUNTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        errors: {\r\n          ...state.errors,\r\n          ...action.errors\r\n        }\r\n      }\r\n      case GET_ACCOUNTS_DETAILS:\r\n        return {\r\n          ...state,\r\n          details: action.details\r\n        }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { SET_PARTNERS, SET_PARTNER_DETAILS, PARTNERS_LOADING, PARTNERS_FAILURE, PARTNERS_SUCCESS } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  partners: [],\r\n  loading: false,\r\n  details: {\r\n    uuid: '',\r\n    inn: '',\r\n    name: ''\r\n  },\r\n  errors: {\r\n    partners: null,\r\n    details: null,\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  success: {\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  filter: {\r\n    inn: '',\r\n    limit: 100,\r\n    name: '',\r\n    offset: 0,\r\n    sort_by: [],\r\n    uuid: ''\r\n  }\r\n}\r\n\r\nexport default function partnerReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n\r\n    case PARTNERS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status\r\n      }\r\n\r\n    case SET_PARTNERS:\r\n      return {\r\n        ...state,\r\n        partners: action.partners\r\n      }\r\n\r\n    case SET_PARTNER_DETAILS:\r\n      return {\r\n        ...state,\r\n        details: action.details\r\n      }\r\n  \r\n      case PARTNERS_FAILURE:\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            ...state.errors,\r\n            ...action.errors\r\n          }\r\n        }\r\n\r\n      case PARTNERS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          success: {\r\n            ...state.success,\r\n            ...action.message\r\n          }\r\n        }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { ACQUIRERS_FAILURE, ACQUIRERS_LOADING, ACQUIRERS_SUCCESS, SET_ACQUIRERS, \r\n  SET_ACQUIRER_DETAILS, \r\n} from \"../actions/actionTypes\";\r\n\r\n\r\nconst initialState = {\r\n  acquirers: [],\r\n  loading: false,\r\n  details: {\r\n    uuid: '',\r\n    active: true,\r\n    alias: '',\r\n    name: '',\r\n  },\r\n  errors: {\r\n    acquirers: null,\r\n    details: null,\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  success: {\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  filter: {\r\n    limit: 100,\r\n    name: '',\r\n    offset: 0,\r\n    sort_by: [],\r\n    uuid: '',\r\n    active: true,\r\n    alias: '',\r\n  }\r\n}\r\n\r\nexport default function acquirerReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ACQUIRERS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status,\r\n      };\r\n    case ACQUIRERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: {\r\n          ...state.success,\r\n          ...action.message,\r\n        },\r\n      };\r\n    case ACQUIRERS_FAILURE:\r\n      return {\r\n        ...state,\r\n        errors: {\r\n          ...state.errors,\r\n          ...action.errors,\r\n        },\r\n      };\r\n    case SET_ACQUIRER_DETAILS:\r\n      return {\r\n        ...state,\r\n        details: action.details,\r\n      };\r\n    case SET_ACQUIRERS:\r\n      return {\r\n        ...state,\r\n        acquirers: action.acquirers,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_SHOPS, SET_SHOP_DETAILS, SHOPS_FAILURE, SHOPS_LOADING, SHOPS_SUCCESS } from \"../actions/actionTypes\";\r\n\r\n\r\nconst initialState = {\r\n  shops: [],\r\n  loading: false,\r\n  details: {\r\n    uuid: '',\r\n    partner_uuid: '',\r\n    name: '',\r\n  },\r\n  errors: {\r\n    shops: null,\r\n    details: null,\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  success: {\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  filter: {\r\n    limit: 100,\r\n    name: '',\r\n    offset: 0,\r\n    sort_by: [],\r\n    uuid: '',\r\n    partner_uuid: '',\r\n  }\r\n}\r\n\r\nexport default function shopReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SHOPS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status,\r\n      };\r\n    case SHOPS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: {\r\n          ...state.success,\r\n          ...action.message,\r\n        },\r\n      };\r\n    case SHOPS_FAILURE:\r\n      return {\r\n        ...state,\r\n        errors: {\r\n          ...state.errors,\r\n          ...action.errors,\r\n        },\r\n      };\r\n    case SET_SHOP_DETAILS:\r\n      return {\r\n        ...state,\r\n        details: action.details,\r\n      };\r\n    case SET_SHOPS:\r\n      return {\r\n        ...state,\r\n        shops: action.shops,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_TERMINALS, SET_TERMINAL_DETAILS, TERMINALS_FAILURE, TERMINALS_LOADING, TERMINALS_SUCCESS } from \"../actions/actionTypes\";\r\n\r\n\r\nconst initialState = {\r\n  terminals: [],\r\n  loading: false,\r\n  details: {\r\n    uuid: '',\r\n    acquirer_uuid: '',\r\n    name: '',\r\n    config: {},\r\n    currency_num: '',\r\n    config_id: '',\r\n    operations: [],\r\n    store_uuid: ''\r\n  },\r\n  errors: {\r\n    terminals: null,\r\n    details: null,\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  success: {\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  filter: {\r\n    limit: 100,\r\n    name: '',\r\n    offset: 0,\r\n    sort_by: [],\r\n    uuid: '',\r\n  }\r\n}\r\n\r\nexport default function terminalReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case TERMINALS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status,\r\n      };\r\n    case TERMINALS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: {\r\n          ...state.success,\r\n          ...action.message,\r\n        },\r\n      };\r\n    case TERMINALS_FAILURE:\r\n      return {\r\n        ...state,\r\n        errors: {\r\n          ...state.errors,\r\n          ...action.errors,\r\n        },\r\n      };\r\n    case SET_TERMINAL_DETAILS:\r\n      return {\r\n        ...state,\r\n        details: action.details,\r\n      };\r\n    case SET_TERMINALS:\r\n      return {\r\n        ...state,\r\n        terminals: action.terminals,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_PARTNER_ACQUIRERS, SET_PARTNER_ACQUIRER_DETAILS, PARTNER_ACQUIRERS_LOADING, PARTNER_ACQUIRERS_FAILURE, PARTNER_ACQUIRERS_SUCCESS } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  partnerAcquirers: [],\r\n  loading: false,\r\n  details: {\r\n    uuid: '',\r\n    acquirer_uuid: '',\r\n    active: '',\r\n    card_brands: [],\r\n    partner_uuid: '',\r\n    priority: '',\r\n  },\r\n  errors: {\r\n    partnerAcquirers: null,\r\n    details: null,\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  success: {\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  filter: {\r\n    limit: 100,\r\n    offset: 0,\r\n    sort_by: [],\r\n    uuid: ''\r\n  }\r\n}\r\n\r\nexport default function partnerAcquirerReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n\r\n    case PARTNER_ACQUIRERS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status\r\n      }\r\n\r\n    case SET_PARTNER_ACQUIRERS:\r\n      return {\r\n        ...state,\r\n        partnerAcquirers: action.partnerAcquirers\r\n      }\r\n\r\n    case SET_PARTNER_ACQUIRER_DETAILS:\r\n      return {\r\n        ...state,\r\n        details: action.details\r\n      }\r\n  \r\n      case PARTNER_ACQUIRERS_FAILURE:\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            ...state.errors,\r\n            ...action.errors\r\n          }\r\n        }\r\n\r\n      case PARTNER_ACQUIRERS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          success: {\r\n            ...state.success,\r\n            ...action.message\r\n          }\r\n        }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import {combineReducers} from 'redux'\r\nimport layoutReducer from './layoutReducer'\r\nimport loginReducer from './loginReducer'\r\nimport blogReducer from './blogReducer'\r\nimport accountReducer from './accountReducer'\r\nimport partnerReducer from './partnerReducer'\r\nimport acquirerReducer from './acquirerReducer'\r\nimport shopReducer from './shopReducer'\r\nimport terminalReducer from './terminalReducer'\r\nimport partnerAcquirerReducer from './partnerAcquirersReducer'\r\n\r\nexport default combineReducers({\r\n    layout: layoutReducer,\r\n    login: loginReducer,\r\n    blog: blogReducer,\r\n    accounts: accountReducer,\r\n    partners: partnerReducer,\r\n    acquirers: acquirerReducer,\r\n    shops: shopReducer,\r\n    terminals: terminalReducer,\r\n    partnerAcquirers: partnerAcquirerReducer,\r\n\r\n\r\n})","import thunk from 'redux-thunk';\r\nimport {createStore, compose, applyMiddleware} from 'redux'\r\n\r\nimport rootReducer from './reducers/rootReducer'\r\n\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    }) : compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nexport default store;","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport Layout from \"../../containers/Layout/Layout\";\nimport ErrorBoundary from \"../ErrorBoundary/ErrorBoundary\";\nimport store from \"../../redux/store\";\n\nfunction App() {\n  return (\n    <div>\n      <Provider store={store}>\n       {/*  \"homepage\": \"https://gennady-bars.github.io/vepay-admin/\", */}\n        <BrowserRouter basename='/vepay-admin'>\n        {/* <BrowserRouter> */}\n          <ErrorBoundary>\n            <Layout />\n          </ErrorBoundary>\n        </BrowserRouter>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}