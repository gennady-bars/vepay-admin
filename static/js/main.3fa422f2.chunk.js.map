{"version":3,"sources":["components/Login/Login.module.scss","components/UI/MyInput/MyInput.module.scss","components/UI/MyTable/StatusTD/StatusTD.module.scss","pages/Partners/Partners.module.scss","components/Header/Header.module.scss","components/Spinner/Spinner.module.scss","pages/Accounts/Accounts.module.scss","pages/News/News.module.scss","components/Footer/Footer.module.scss","img/logo-white-text.svg","components/UI/MyTable/MyTable.module.scss","components/MyAlert/SuccessAlert/SuccessAlert.module.scss","components/MyAlert/FailureAlert/FailureAlert.module.scss","components/UI/MyTable/MyTableForm/MyTableForm.module.scss","components/UI/MyButton/MyButton.module.scss","components/UI/MyTable/ClickableTH/ClickableTH.module.scss","components/UI/MyTable/DetailsTableRow/DetailsTableRow.module.scss","components/Blocks/FlexBlock/FlexBlock.module.scss","pages/News/NewsCreation/NewsCreation.module.scss","pages/News/NewsDetails/NewsDetails.module.scss","pages/Partners/PartnerDetails/PartnerDetails.module.scss","components/Main/Main.module.scss","components/UI/MyDropDown/MyDropDown.module.scss","components/UI/MyLink/MyLink.module.scss","components/SideMenu/SideMenu.module.scss","redux/actions/loginActions.js","components/Footer/Footer.jsx","configs/modified-axios.js","utils/utils.js","redux/actions/actionTypes.js","components/Header/Header.jsx","components/Spinner/Spinner.jsx","components/Login/Login.jsx","redux/actions/accountActions.js","pages/Accounts/AccountCreation/AccountCreation.jsx","pages/Accounts/AccountDetails/AccountDetails.jsx","components/UI/MyTable/MyTable.jsx","components/UI/MyInput/MyInput.jsx","pages/Accounts/Accounts.jsx","components/UI/MyTable/TableInput/TableInput.jsx","hooks/useFormValiation.js","redux/actions/acquirerActions.js","components/MyAlert/SuccessAlert/SuccessAlert.jsx","components/MyAlert/FailureAlert/FailureAlert.jsx","hooks/useAlert.js","pages/Acquirers/AcquirerAddition/AcquirerAddition.jsx","components/UI/MyTable/MyTableForm/MyTableForm.jsx","components/UI/MyTable/TableMultiselect/TableMultiselect.jsx","utils/constants.js","components/UI/MyButton/MyButton.jsx","components/UI/MyTable/StatusTD/StatusTD.jsx","components/UI/MyTable/ClickableTH/ClickableTH.jsx","components/UI/MyTable/TableNotFound/TableNotFound.jsx","pages/Acquirers/Acquirers.jsx","components/UI/MyTable/DetailsTableRow/DetailsTableRow.jsx","components/Blocks/FlexBlock/FlexBlock.jsx","pages/Acquirers/AcquirersDetails/AcquirersDetails.jsx","pages/Acquirers/AcquirersUpdate/AcquirersUpdate.jsx","pages/HomePage/HomePage.jsx","utils/mock-news.js","redux/actions/blogActions.js","pages/News/News.jsx","pages/News/NewsCreation/NewsCreation.jsx","pages/News/NewsDetails/NewsDetails.jsx","redux/actions/partnerAcquirersActions.js","pages/PartnerAcquierers/PartnerAcquierers.jsx","pages/PartnerAcquierers/PartnerAcquierersAddition/PartnerAcquierersAddition.jsx","pages/PartnerAcquierers/PartnerAcquierersDetails/PartnerAcquierersDetails.jsx","pages/PartnerAcquierers/PartnerAcquierersUpdate/PartnerAcquierersUpdate.jsx","redux/actions/partnerActions.js","pages/Partners/PartnerAddition/PartnerAddition.jsx","redux/actions/shopActions.js","pages/Partners/PartnerDetails/PartnerDetails.jsx","pages/Partners/Partners.jsx","pages/Partners/PartnerUpdate/PartnerUpdate.jsx","redux/actions/terminalActions.js","pages/Shops/ShopDetails/ShopDetails.jsx","pages/Shops/Shops.jsx","pages/Shops/ShopsAddition/ShopsAddition.jsx","pages/Shops/ShopUpdate/ShopUpdate.jsx","pages/Terminals/TerminalDetails/TerminalDetails.jsx","pages/Terminals/Terminals.jsx","pages/Terminals/TerminalsAddition/TerminalsAddition.jsx","pages/Terminals/TerminalUpdate/TerminalUpdate.jsx","components/Main/Main.jsx","components/UI/MyDropDown/MyDropDown.jsx","components/UI/MyLink/MyLink.jsx","components/SideMenu/SideMenu.jsx","containers/Layout/Layout.jsx","components/ErrorBoundary/ErrorBoundary.jsx","redux/reducers/layoutReducer.js","redux/reducers/loginReducer.js","redux/reducers/blogReducer.js","redux/reducers/accountReducer.js","redux/reducers/partnerReducer.js","redux/reducers/acquirerReducer.js","redux/reducers/shopReducer.js","redux/reducers/terminalReducer.js","redux/reducers/partnerAcquirersReducer.js","redux/reducers/rootReducer.js","redux/store.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","timer","Footer","props","useState","date","setDate","useEffect","currentYear","Date","getFullYear","className","styles","accountAxios","axios","create","baseURL","getAccessToken","localStorage","getItem","setAccessToken","token","setItem","setRefreshToken","setAccessExpiry","seconds","now","Number","getAccessExpiry","setRefreshExpiry","getTrimmedValues","values","filterData","Object","keys","forEach","key","data","trim","limit","priority_to","priority_from","makeRes","ok","message","refreshToken","dispatch","a","refToken","myAxios","post","refresh_token","res","console","log","status","result","authData","setLoginErrors","setIsLoggedIn","autoRefresh","logout","removeItem","clearTimeout","type","refresh","tokenTime","delay","Math","floor","setTimeout","setIsAdmin","isAdmin","errors","setLoginLoading","connect","state","user","login","isOpen","setIsOpen","Header","Navbar","color","dark","expand","NavbarBrand","tag","Link","to","src","whiteLogo","alt","NavbarToggler","onClick","Collapse","navbar","Nav","NavbarText","Spinner","cls","join","loading","logInThunk","loginData","includes","email","password","controls","setControls","setTouched","onControlChange","e","control","target","name","value","touched","errorMessage","err","test","spinner","Login","formWrapper","Form","UncontrolledAlert","FormGroup","Label","for","Input","id","placeholder","onChange","Button","disabled","setAccountsLoading","setAccountsFailure","setAccounts","accounts","setAccountDetails","details","AccountCreation","Breadcrumb","listTag","BreadcrumbItem","NavLink","exact","active","required","getAccountDetailsThunk","access_token","ids","match","history","phone_number","deleted","blocked","suspended_until","verification_required","role_names","params","then","AccountDetails","onSubmit","preventDefault","check","checked","checkbox","MyTable","children","MyInput","inputStyles","label","errorText","inputCls","input","handleInputChange","error","getAccountsThunk","Accounts","Table","hover","map","account","tr","push","scope","TableInput","inputId","setInputId","String","random","slice","htmlFor","useFormAndValidation","setValues","setErrors","isValid","setIsValid","resetForm","useCallback","newValues","newErrors","newIsValid","handleChange","validationMessage","closest","checkValidity","getAcquirersThunk","getAcquirersSuccess","acquirers","alertAcquirersFailure","getAcquirerDetailsThunk","uuids","setAcquirerDetails","alertAcquirersSuccess","SuccessAlert","alertHeading","bottomMessage","visible","setVisible","onDismiss","Alert","toggle","FailureAlert","useAlert","successAlertVisible","setSuccessAlertVisible","successMessage","setSuccessMessage","failureAlertVisible","setFailureAlertVisible","failureMessage","setFailureMessage","checkRes","withSuccessAlert","createAcquirerThunk","inputData","setChecked","AcquirerAddition","evt","catch","minLength","maxLength","alias","pattern","MyTableForm","buttonText","TableMultiselect","multiRef","ref","style","multiselectContainer","margin","marginLeft","operationsOptions","jsonKey","activeOptions","currenceOptions","cardBrandsOptions","MyButton","StatusTD","notActive","ClickableTH","TableNotFound","useHistory","order","setOrder","changeOrder","field","sortedData","Acquirers","options","displayValue","onSelect","selectedList","onRemove","removedItem","singleSelect","length","item","i","uuid","DetailsTableRow","FlexBlock","deleteAcquirersThunk","delete","useParams","AcquirersDetails","window","confirm","goBack","updateAcquirerThunk","acquirerData","update","AcquirersUpdate","HomePage","mockNews","image","short","full","setNewsLoading","setNewsFailure","setNews","news","setNewsDetails","blog","getNewsThunk","News","ListGroup","ListGroupItem","listItem","createNewsThunk","newsData","setShort","setFull","picture","setPicture","fileInput","useRef","NewsCreation","current","files","innerRef","rows","getNewsDetailsThunk","find","updateNewsDetailsThunk","deleteNewsThunk","NewsDetails","getPartnerAcquirerDetailsThunk","setPartnerAcquirerDetails","alertPartnerAcquirersFailure","getPartnerAcquirersSuccess","partnerAcquirers","alertPartnerAcquirersSuccess","getPartnerAcquirersThunk","partnerId","activeRef","card_brands","partner_uuid","PartnerAcquierers","selectedItem","width","min","max","bank","acquirer_uuid","priority","toUpperCase","createPartnerAcquirerThunk","avtive","bankOptions","setBankOptions","PartnerAcquierersAddition","partnerBankData","deletePartnerAcquirersThunk","PartnerAcquierersDetails","updatePartnerAcquirerThunk","partnerData","bankPreselect","setBankPreselect","activePreselect","setActivePreselect","cardBrandsPreselect","setCardBrandsPreselect","preselectedBank","isActive","preselectedCardBrands","filter","PartnerAcquierersUpdate","selectedValues","getPartnerDetailsThunk","setPartnerDetails","partners","alertPartnersFailure","getPartnersSuccess","alertPartnersSuccess","createPartnerThunk","PartnerAddition","inn","getShopDetailsThunk","setShopDetails","stores","alertShopsFailure","getShopsSuccess","shops","alertShopsSuccess","deletePartnersThunk","getShopsThunk","PartnerDetails","shop","getPartnersThunk","offset","setOffset","sort_by","Partners","tableBotton","Pagination","aria-label","PaginationItem","PaginationLink","previous","href","next","updatePartnerThunk","PartnerUpdate","getTerminalDetailsThunk","setTerminalDetails","terminals","alertTerminalsFailure","getTerminalsSuccess","alertTerminalsSuccess","deleteShopsThunk","getTerminalsThunk","store_uuid","onSingleSelect","ShopDetails","operations","currency","currency_num","code","Shops","createShopThunk","ShopsAddition","shopData","updateShopThunk","ShopUpdate","deleteTerminalsThunk","config","config_id","TerminalDetails","Terminals","createTerminalThunk","shopId","TerminalsAddition","terminalData","updateTerminalThunk","operationsPreselect","setOperationsPreselect","currencyPreselect","setcurrencyPreselect","rest","preselectedOperations","preselectedCurrency","TerminalUpdate","Main","path","component","MyDropDown","title","toString","UncontrolledCollapse","toggler","MyLink","RRNavLink","activeStyle","fontWeight","SideMenu","vertical","NavItem","isLoggedIn","isExpired","Layout","ErrorBoundary","hasError","errorInfo","this","React","Component","initialState","menuIsOpened","success","combineReducers","layout","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","App","basename","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3fa422f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__tE4NM\",\"formWrapper\":\"Login_formWrapper__2ozNL\",\"spinner\":\"Login_spinner__2CkRo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyInput\":\"MyInput_MyInput__2mCAw\",\"input\":\"MyInput_input__14CAW\",\"error\":\"MyInput_error__1kGCQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StatusTD\":\"StatusTD_StatusTD__3_sDd\",\"active\":\"StatusTD_active__1-hWj\",\"notActive\":\"StatusTD_notActive__2aGAy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Partners\":\"Partners_Partners__wwER6\",\"tableBotton\":\"Partners_tableBotton__2mEqg\",\"Pagination\":\"Partners_Pagination__1xgU4\",\"active\":\"Partners_active__2hKP4\",\"pageClass\":\"Partners_pageClass__-vqil\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2CE7u\",\"logout\":\"Header_logout__WsaaX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__5nkCa\",\"lds-spinner\":\"Spinner_lds-spinner__3be76\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Accounts\":\"Accounts_Accounts__ocwRD\",\"tr\":\"Accounts_tr__2Ilrp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"News\":\"News_News__eESvs\",\"listItem\":\"News_listItem__2BE1a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__2PgQ-\"};","module.exports = __webpack_public_path__ + \"static/media/logo-white-text.24b74a4b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyTable\":\"MyTable_MyTable__2bv-q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SuccessAlert\":\"SuccessAlert_SuccessAlert__30BqF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FailureAlert\":\"FailureAlert_FailureAlert__2sF1D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyTableForm\":\"MyTableForm_MyTableForm__NRbnR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyButton\":\"MyButton_MyButton__2CybH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ClickableTH\":\"ClickableTH_ClickableTH__3oFKW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DetailsTableRow\":\"DetailsTableRow_DetailsTableRow__2iGBU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FlexBlock\":\"FlexBlock_FlexBlock__9OSLy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewsCreation\":\"NewsCreation_NewsCreation__3qKjN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewsDetails\":\"NewsDetails_NewsDetails__3SVfA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PartnerDetails\":\"PartnerDetails_PartnerDetails__t_gp3\",\"buttonsBlock\":\"PartnerDetails_buttonsBlock__ZTqka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__FARTk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyDropDown\":\"MyDropDown_MyDropDown__VwQan\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyLink\":\"MyLink_MyLink__11W8c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideMenu\":\"SideMenu_SideMenu__2LorB\"};","// import myAxios from '../../configs/modified-axios'\r\nimport {accountAxios as myAxios} from '../../configs/modified-axios'\r\nimport { clearLocalStorage, getAccessExpiry, getRefreshToken, setAccessExpiry, setAccessToken, setRefreshExpiry, setRefreshToken } from '../../utils/utils'\r\nimport { SET_IS_ADMIN, SET_IS_LOGGED_IN, SET_LOGIN_ERRORS, SET_LOGIN_LOADING,\r\n  LOG_OUT, \r\n} from \"./actionTypes\"\r\n\r\nlet timer;\r\n\r\nexport const logInThunk = (loginData) => {\r\n  return async (dispatch) => {\r\n    const data = {}\r\n    Object.keys(loginData).forEach(key => {\r\n      if (loginData[key].trim()) {\r\n        data[key] = loginData[key].trim()\r\n      }\r\n    })\r\n    dispatch(setLoginLoading(true))\r\n    try {\r\n      const res = await myAxios.post(`/api/login`, data)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n          if (res.data.result['role_names'].includes('admin')) {\r\n            dispatch(setIsAdmin(true))\r\n            const authData = res.data.result\r\n            dispatch(setLoginErrors(null))\r\n\r\n            setAccessToken(authData['access_token'])\r\n            setAccessExpiry(authData['access_token_expires_in'])\r\n            setRefreshToken(authData['refresh_token'])\r\n            setRefreshExpiry(authData['refresh_token_expires_in'])\r\n\r\n            dispatch(setIsLoggedIn(true, authData))\r\n            autoRefresh(() => dispatch(refreshToken()))\r\n\r\n          } else {\r\n            dispatch(setLoginErrors(['Недостаточно прав']))\r\n          }\r\n      } else {\r\n        dispatch(setLoginErrors(res.data.errors))\r\n        console.log(res.data.errors);\r\n      }\r\n    } catch (error) {\r\n      dispatch(setLoginErrors(['Сервер временно недоступен']))\r\n      console.log(error.message);\r\n    } finally {\r\n      dispatch(setLoginLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const refreshToken = () => {\r\n  return async (dispatch) => {\r\n    const refToken = getRefreshToken()\r\n    try {\r\n      const res = await myAxios.post(`/api/refresh_token`, {refresh_token: refToken})\r\n      console.log(res);\r\n      if (res.status === 200 && res.data.result) {\r\n        const authData = res.data.result\r\n        dispatch(setLoginErrors(null))\r\n         // ====== TEST =========\r\n        setAccessToken(authData['access_token'])\r\n        setAccessExpiry(authData['access_token_expires_in'])\r\n        setRefreshToken(authData['refresh_token'])\r\n        setRefreshExpiry(authData['refresh_token_expires_in'])\r\n        // ====== TEST =========\r\n        dispatch(setIsLoggedIn(true, authData))\r\n        autoRefresh(() => dispatch(refreshToken()))\r\n\r\n      } else {\r\n        dispatch(logout())\r\n        console.log('dispatch(logout())');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const logout = () => {\r\n  clearLocalStorage()\r\n  clearTimeout(timer)\r\n  return {\r\n    type: LOG_OUT,\r\n  }\r\n}\r\n\r\nexport const autoRefresh = (refresh) => {\r\n  console.log('autoRefresh ' + timer );\r\n  clearTimeout(timer)\r\n  const tokenTime = getAccessExpiry()\r\n  const delay = Math.floor((tokenTime - Date.now()))\r\n  timer = setTimeout(() => {\r\n    refresh()\r\n  }, delay)\r\n}\r\n\r\n\r\nexport const setIsLoggedIn = (status, authData) => {\r\n  \r\n  return {\r\n    type: SET_IS_LOGGED_IN,\r\n    status,\r\n    authData\r\n  }\r\n}\r\n\r\nexport const setIsAdmin = (isAdmin) => {\r\n  return {\r\n    type: SET_IS_ADMIN,\r\n    isAdmin\r\n  }\r\n}\r\n\r\nexport const setLoginErrors = (errors) => {\r\n  return {\r\n    type: SET_LOGIN_ERRORS,\r\n    errors\r\n  }\r\n}\r\n\r\nexport const setLoginLoading = (status) => {\r\n  return {\r\n    type: SET_LOGIN_LOADING,\r\n    status\r\n  }\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport styles from './Footer.module.scss'\r\n\r\nconst Footer = (props) => {\r\n\r\n    const [date, setDate] = useState()\r\n\r\n    useEffect(() => {\r\n        const currentYear = new Date().getFullYear()\r\n        setDate(currentYear)\r\n    }, [])\r\n\r\n    return (\r\n        <div className={styles.Footer}>\r\n            <span>ООО \"ПРОЦЕССИНГОВАЯ КОМПАНИЯ БЫСТРЫХ ПЛАТЕЖЕЙ\" © 1999-{date}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import axios from 'axios'\r\n\r\nexport const accountAxios = axios.create({\r\n    baseURL: 'https://env-desc-accounts.backend.vepay.cf'\r\n})\r\n\r\nexport default axios.create({\r\n    // baseURL: 'http://develop-admin.192-168-110-2.nip.io'\r\n    baseURL: 'https://vpbc-334-integrations.backend.vepay.cf'\r\n})","export const getAccessToken = () => {\r\n  return localStorage.getItem('access_token')\r\n}\r\n\r\nexport const setAccessToken = (token) => {\r\n  localStorage.setItem('access_token', token)\r\n}\r\n\r\nexport const getRefreshToken = () => {\r\n  return localStorage.getItem('refresh_token')\r\n}\r\n\r\nexport const setRefreshToken = (token) => {\r\n  return localStorage.setItem('refresh_token', token)\r\n}\r\n\r\nexport const setAccessExpiry = (seconds) => {\r\n  localStorage.setItem('access_token_expires_in', Date.now() + Number(seconds) * 1000)\r\n}\r\nexport const getAccessExpiry = () => {\r\n   return Number(localStorage.getItem('access_token_expires_in'))\r\n}\r\n\r\nexport const setRefreshExpiry = (seconds) => {\r\n  localStorage.setItem('refresh_token_expires_in', Date.now() + Number(seconds) * 1000)\r\n}\r\n\r\nexport const getRefreshExpiry = () => {\r\n  return Number(localStorage.getItem('refresh_token_expires_in'))\r\n}\r\n\r\nexport const clearLocalStorage = () => {\r\n  localStorage.removeItem('access_token')\r\n  localStorage.removeItem('access_token_expires_in')\r\n  localStorage.removeItem('refresh_token')\r\n  localStorage.removeItem('refresh_token_expires_in')\r\n}\r\n\r\nexport const getTrimmedValues = (values) => {\r\n  const filterData = {}\r\n\r\n    Object.keys(values).forEach(key => {\r\n      const data = values[key]\r\n      if (typeof data === 'string') {\r\n        if (data.trim()) {\r\n          filterData[key] = data.trim()\r\n        }\r\n      } else if (typeof data === 'boolean') {\r\n        filterData[key] = data\r\n      } else {\r\n        filterData[key] = data\r\n      }\r\n    })\r\n\r\n    if (filterData.limit) {\r\n      filterData.limit = Number(filterData.limit)\r\n    }\r\n    if (filterData.priority_to) {\r\n      filterData.priority_to = Number(filterData.priority_to)\r\n    }\r\n    if (filterData.priority_from) {\r\n        filterData.priority_from = Number(filterData.priority_from)\r\n    }\r\n\r\n    return filterData\r\n}\r\n\r\nexport const checkResponse = (resetForm=(() => {}), message='') => {\r\n  return (res) => {\r\n    if (res === 'success') {\r\n      console.log( `${message} ${res}`)\r\n      resetForm()\r\n    }\r\n  }\r\n} \r\n\r\n\r\nexport const makeRes = (ok=true, message='Успешно', data={}) => {\r\n  return {\r\n    ok,\r\n    message,\r\n    data\r\n  }\r\n}","export const OPEN_MENU = 'OPEN_MENU'\r\nexport const CLOSE_MENU = 'CLOSE_MENU'\r\n\r\n\r\n// ========== login =========================\r\n\r\nexport const SET_IS_LOGGED_IN = 'SET_IS_LOGGED_IN'\r\nexport const SET_LOGIN_ERRORS = 'SET_LOGIN_ERRORS'\r\nexport const SET_LOGIN_LOADING = 'SET_LOGIN_LOADING'\r\nexport const SET_IS_ADMIN = 'SET_IS_ADMIN'\r\nexport const LOG_OUT = 'LOG_OUT'\r\n\r\n// ================ Blog ==================================\r\n\r\nexport const NEWS_LOADING = 'NEWS_LOADING'\r\nexport const GET_NEWS_SUCCESS = 'GET_NEWS_SUCCESS'\r\nexport const SET_NEWS_FAILURE = 'SET_NEWS_FAILURE'\r\nexport const GET_NEWS_DETAILS = 'GET_NEWS_DETAILS'\r\n\r\nexport const UPDATE_NEWS_DETAILS_SUCCESS = 'UPDATE_NEWS_DETAILS_SUCCESS'\r\n\r\nexport const DELETE_NEWS_SUCCESS = 'DELETE_NEWS_SUCCESS'\r\n\r\n// =============== Accounts ================================\r\n\r\nexport const ACCOUNTS_LOADING = 'ACCOUNTS_LOADING'\r\nexport const GET_ACCOUNTS_SUCCESS = 'GET_ACCOUNTS_SUCCESS'\r\nexport const GET_ACCOUNTS_FAILURE = 'GET_ACCOUNTS_FAILURE'\r\nexport const GET_ACCOUNTS_DETAILS = 'GET_ACCOUNTS_DETAILS'\r\nexport const UPDATE_ACCOUNTS_SUCCESS = 'UPDATE_ACCOUNTS_SUCCESS'\r\nexport const UPDATE_ACCOUNTS_FAILURE = 'UPDATE_ACCOUNTS_FAILURE'\r\nexport const CREATE_ACCOUNTS_SUCCESS = 'CREATE_ACCOUNTS_SUCCESS'\r\nexport const CREATE_ACCOUNTS_FAILURE = 'CREATE_ACCOUNTS_FAILURE'\r\n\r\n// =============== Partners ==============================\r\n\r\n\r\nexport const PARTNERS_LOADING = 'PARTNERS_LOADING'\r\nexport const PARTNERS_FAILURE = 'PARTNERS_FAILURE'\r\nexport const PARTNERS_SUCCESS = 'PARTNERS_SUCCESS'\r\nexport const SET_PARTNERS = 'SET_PARTNERS'\r\nexport const SET_PARTNER_DETAILS = 'SET_PARTNER_DETAILS'\r\nexport const GET_PARTNER_DETAILS_FAILURE = 'GET_PARTNER_DETAILS_FAILURE'\r\nexport const UPDATE_PARTNER_DETAILS_FAILURE = 'UPDATE_PARTNER_DETAILS_FAILURE'\r\nexport const DELETE_PARTNER_FAILURE = 'DELETE_PARTNER_FAILURE'\r\n\r\n// ================ Acquirers ============================\r\n\r\nexport const ACQUIRERS_LOADING = 'ACQUIRERS_LOADING'\r\nexport const ACQUIRERS_FAILURE = 'ACQUIRERS_FAILURE'\r\nexport const ACQUIRERS_SUCCESS = 'ACQUIRERS_SUCCESS'\r\nexport const SET_ACQUIRERS = 'SET_ACQUIRERS'\r\nexport const SET_ACQUIRER_DETAILS = 'SET_ACQUIRER_DETAILS'\r\nexport const GET_ACQUIRER_DETAILS_FAILURE = 'GET_ACQUIRER_DETAILS_FAILURE'\r\nexport const UPDATE_ACQUIRER_DETAILS_FAILURE = 'UPDATE_ACQUIRER_DETAILS_FAILURE'\r\nexport const DELETE_ACQUIRER_FAILURE = 'DELETE_ACQUIRER_FAILURE'\r\n\r\n// ============== Shops ===================================\r\n\r\nexport const SHOPS_LOADING = 'SHOPS_LOADING'\r\nexport const SHOPS_FAILURE = 'SHOPS_FAILURE'\r\nexport const SHOPS_SUCCESS = 'SHOPS_SUCCESS'\r\nexport const SET_SHOPS = 'SET_SHOPS'\r\nexport const SET_SHOP_DETAILS = 'SET_SHOP_DETAILS'\r\nexport const GET_SHOP_DETAILS_FAILURE = 'GET_SHOP_DETAILS_FAILURE'\r\nexport const UPDATE_SHOP_DETAILS_FAILURE = 'UPDATE_SHOP_DETAILS_FAILURE'\r\nexport const DELETE_SHOP_FAILURE = 'DELETE_SHOP_FAILURE'\r\n\r\n// ============== Terminals ===============================\r\n\r\nexport const TERMINALS_LOADING = 'TERMINALS_LOADING'\r\nexport const TERMINALS_FAILURE = 'TERMINALS_FAILURE'\r\nexport const TERMINALS_SUCCESS = 'TERMINALS_SUCCESS'\r\nexport const SET_TERMINALS = 'SET_TERMINALS'\r\nexport const SET_TERMINAL_DETAILS = 'SET_TERMINAL_DETAILS'\r\n\r\n// ============= Partner Acquirers =======================\r\n\r\nexport const PARTNER_ACQUIRERS_LOADING = 'PARTNER_ACQUIRERS_LOADING'\r\nexport const PARTNER_ACQUIRERS_FAILURE = 'PARTNER_ACQUIRERS_FAILURE'\r\nexport const PARTNER_ACQUIRERS_SUCCESS = 'PARTNER_ACQUIRERS_SUCCESS'\r\nexport const SET_PARTNER_ACQUIRERS = 'SET_PARTNER_ACQUIRERS'\r\nexport const SET_PARTNER_ACQUIRER_DETAILS = 'SET_PARTNER_ACQUIRER_DETAILS'\r\n\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavbarText,\r\n} from \"reactstrap\";\r\nimport { logout } from \"../../redux/actions/loginActions\";\r\nimport whiteLogo from '../../img/logo-white-text.svg'\r\n\r\nimport styles from \"./Header.module.scss\";\r\n\r\nconst Header = ({user, logout}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div className={styles.Header}>\r\n      <Navbar color=\"dark\" dark expand=\"md\">\r\n        <NavbarBrand tag={Link} to='/'>\r\n          <img src={whiteLogo} alt=\"whiteLogo\"/>\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            \r\n            \r\n          </Nav>\r\n          <NavbarText className='mr-4'>пользователь: <strong>{user}</strong> </NavbarText>\r\n          <NavbarText \r\n            onClick={logout}\r\n            // onClick={() => alert('функция пока отключена. Загляните в Header')}\r\n            className={styles.logout}\r\n            >выйти</NavbarText>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.login.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout})(Header);\r\n","import React from 'react'\r\n\r\nimport styles from './Spinner.module.scss'\r\n\r\nconst Spinner = ({className}) => {\r\n\r\n  const cls = [\r\n    styles.Spinner,\r\n    className\r\n  ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n           <div className={styles[\"lds-spinner\"]}><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Form, FormGroup, Label, Input, UncontrolledAlert } from \"reactstrap\";\r\nimport { logInThunk } from \"../../redux/actions/loginActions\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\n\r\nimport styles from \"./Login.module.scss\";\r\n\r\nconst Login = ({logInThunk, loading, errors, isAdmin}) => {\r\n\r\n  const [controls, setControls] = useState({\r\n    email: '',\r\n    password: '',\r\n    login: ''\r\n  })\r\n  const [touched, setTouched] = useState({\r\n    email: false,\r\n    password: false,\r\n    login: false\r\n  })\r\n\r\n  const onControlChange = (e) => {\r\n    const control = e.target\r\n    setControls((controls) => {\r\n      return {\r\n        ...controls,\r\n        [control.name]: control.value\r\n      }\r\n    })\r\n    setTouched((touched) => {\r\n      return {\r\n        ...touched,\r\n        [control.name]: true\r\n      }\r\n    })\r\n  }\r\n\r\n  let errorMessage = 'Попробуйте еще раз позже';\r\n  // if (!isAdmin) {\r\n  //   errorMessage = 'Недостаточно прав'\r\n  // }\r\n  if (errors) {\r\n    errors.forEach((err) => {\r\n      if (/Accounts service error/g.test(err)) {\r\n        errorMessage = 'Ошибка сервиса'\r\n      } else if (/Credentials incorrect/g.test(err)) {\r\n        errorMessage = 'Неверный логин или пароль'\r\n      } else if (/Недостаточно прав/g.test(err)) {\r\n        errorMessage = 'Недостаточно прав'\r\n      } else if (/Сервер временно недоступен/g.test(err)) {\r\n        errorMessage = 'Сервер временно недоступен'\r\n      }\r\n    })\r\n  }\r\n  \r\n\r\n  const {email, password, login} = controls\r\n\r\n  // console.log(controls, touched);\r\n\r\n  if (loading) {\r\n    return <Spinner className={styles.spinner}/>\r\n  }\r\n\r\n  return (\r\n    <div className={styles.Login}>\r\n      <div className={styles.formWrapper}>\r\n        <Form>\r\n          <center>Vepay admin</center>\r\n         {errors && (\r\n          <UncontrolledAlert color={'danger'}>\r\n            {errorMessage}\r\n          </UncontrolledAlert>\r\n         )}\r\n          <FormGroup>\r\n            <Label for=\"login\">Login</Label>\r\n            <Input\r\n              //  invalid={touched.login && !login}\r\n              type=\"text\"\r\n              name=\"login\"\r\n              id=\"login\"\r\n              placeholder=\"login\"\r\n              value={login}\r\n              onChange={onControlChange}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"email\">Email</Label>\r\n            <Input\r\n              //  invalid={touched.email && !email}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              placeholder=\"email\"\r\n              value={email}\r\n              onChange={onControlChange}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"password\">Пароль</Label>\r\n            <Input\r\n            // invalid={touched.password && !password}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"пароль\"\r\n              value={password}\r\n              onChange={onControlChange}\r\n            />\r\n          </FormGroup>\r\n          <Button \r\n           disabled={!((email || login) && password)}\r\n           onClick={() => logInThunk(controls)}\r\n          >Войти</Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.login.loading,\r\n    errors: state.login.errors,\r\n    isAdmin: state.login.isAdmin,\r\n     \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logInThunk})(Login);\r\n","// import myAxios from '../../configs/modified-axios'\r\nimport {accountAxios as myAxios} from '../../configs/modified-axios'\r\n\r\n// import { mockAccounts } from '../../utils/mock-accounts'\r\nimport { getAccessToken } from '../../utils/utils'\r\nimport { ACCOUNTS_LOADING, GET_ACCOUNTS_DETAILS, GET_ACCOUNTS_FAILURE, GET_ACCOUNTS_SUCCESS } from './actionTypes'\r\n\r\n\r\nexport const getAccountsThunk = () => {\r\n  return async (dispatch) => {\r\n    dispatch(setAccountsLoading(true))\r\n\r\n    try {\r\n      // dispatch(setAccounts(mockAccounts)) // TEST\r\n      const data = {\r\n        access_token: getAccessToken(),\r\n      }\r\n      const res = await myAxios.post(`/api/get_accounts`, data)\r\n      console.log(res);\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setAccountsFailure({ accounts: null }))\r\n        dispatch(setAccounts(res.data.result.accounts))\r\n      } else {\r\n        dispatch(setAccountsFailure({ accounts: res.data.errors }))\r\n      } \r\n    } catch (error) {\r\n      dispatch(setAccountsFailure({ accounts: ['Сервер недоступен'] }))\r\n    } finally {\r\n      dispatch(setAccountsLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const getAccountDetailsThunk = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch(setAccountsLoading(true))\r\n\r\n    try {\r\n      // dispatch(setAccountDetails(mockAccounts.find((account) => account.id === +id))) // TEST\r\n\r\n      const data = {\r\n        access_token: getAccessToken(),\r\n        ids: [id]\r\n      }\r\n      const res = await myAxios.post(`/api/get_accounts_by_ids`, data)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n          dispatch(setAccountsFailure({ details: null }))\r\n        dispatch(setAccountDetails(res.data.result.accounts[0]))\r\n      } else {\r\n        dispatch(setAccountsFailure({ details: res.data.errors }))\r\n      }\r\n    } catch (error) {\r\n      dispatch(setAccountsFailure({ details: ['Сервер недоступен'] }))\r\n      console.log(error);\r\n    } finally {\r\n      dispatch(setAccountsLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const setAccountsLoading = (status) => {\r\n  return {\r\n    type: ACCOUNTS_LOADING,\r\n    status\r\n  }\r\n}\r\n\r\nexport const setAccountsFailure = (errors) => {\r\n  return {\r\n    type: GET_ACCOUNTS_FAILURE,\r\n    errors\r\n  }\r\n}\r\n\r\nexport const setAccounts = (accounts) => {\r\n  return {\r\n    type: GET_ACCOUNTS_SUCCESS,\r\n    accounts\r\n  }\r\n}\r\n\r\nexport const setAccountDetails = (details) => {\r\n  return {\r\n    type: GET_ACCOUNTS_DETAILS,\r\n    details\r\n  }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Input, Label } from 'reactstrap'\r\nimport { getAccountDetailsThunk } from '../../../redux/actions/accountActions'\r\n\r\nimport styles from './AccountCreation.module.scss'\r\n\r\nconst AccountCreation = (props) => {\r\n\r\n  const [controls, setControls] = useState({\r\n    email: '',\r\n    password: '',\r\n    login: ''\r\n  })\r\n  const [touched, setTouched] = useState({\r\n    email: false,\r\n    password: false,\r\n    login: false\r\n  })\r\n\r\n  const onControlChange = (e) => {\r\n    const control = e.target\r\n    setControls((controls) => {\r\n      return {\r\n        ...controls,\r\n        [control.name]: control.value\r\n      }\r\n    })\r\n    setTouched((touched) => {\r\n      return {\r\n        ...touched,\r\n        [control.name]: true\r\n      }\r\n    })\r\n  }\r\n\r\n  const {email, password, login} = controls\r\n\r\n    return (\r\n        <div className={styles.AccountCreation}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/accounts' exact>Аккаунты</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Создание аккаунта</BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <h1>Создание аккаунта</h1>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"login\">Логин</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"login\"\r\n                    id=\"login\"\r\n                    placeholder=\"Логин\"\r\n                    value={login}\r\n                    onChange={onControlChange}\r\n                    required\r\n                  />\r\n              </FormGroup>\r\n                  \r\n              <FormGroup>\r\n                <Label for=\"email\">Email</Label>\r\n                <Input\r\n                  //  invalid={touched.email && !email}\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  placeholder=\"email\"\r\n                  value={email}\r\n                  onChange={onControlChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"password\">Пароль</Label>\r\n                <Input\r\n                // invalid={touched.password && !password}\r\n                  type=\"text\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  placeholder=\"пароль\"\r\n                  value={password}\r\n                  onChange={onControlChange}\r\n                />\r\n              </FormGroup>\r\n              <Button \r\n              disabled={!(email && login && password)}\r\n              color='success'\r\n              //  onClick={() => logInThunk(controls)}\r\n              >Создать</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccountCreation","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Input, Label } from 'reactstrap'\r\nimport { getAccountDetailsThunk } from '../../../redux/actions/accountActions'\r\n\r\nimport styles from './AccountDetails.module.scss'\r\n\r\n\r\n\r\nconst AccountDetails = ({\r\n  details,\r\n  getAccountDetailsThunk,\r\n  match,\r\n  history\r\n\r\n}) => {\r\n\r\n  const [controls, setControls] = useState({\r\n    email: '',\r\n    login: '',\r\n    phone_number: '',\r\n    deleted: '',\r\n    blocked: '',\r\n    suspended_until: '',\r\n    verification_required: '',\r\n    role_names: '',\r\n  })\r\n  const [touched, setTouched] = useState(false)\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(controls);\r\n  }\r\n\r\n  const onControlChange = (e) => {\r\n    const control = e.target\r\n    setControls((controls) => {\r\n      return {\r\n        ...controls,\r\n        [control.name]: control.value\r\n      }\r\n    })\r\n    setTouched(true)\r\n  }\r\n\r\n  const onCheckboxChange = (e) => {\r\n    const checkbox = e.target\r\n    setControls((controls) => {\r\n      return {\r\n        ...controls,\r\n        [checkbox.name]: checkbox.checked\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAccountDetailsThunk(+match.params.id)\r\n    .then(() => console.log('getAccountDetailsThunk'))\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!details) return;\r\n    setControls((controls) => {\r\n      // const detailsInfo = {}\r\n      // Object.keys(controls).forEach(key => {\r\n      //   detailsInfo[key] = details[key] || ''\r\n      // })\r\n      return {\r\n        ...controls,\r\n        ...details\r\n      }\r\n    })\r\n    console.log(details);\r\n  }, [details])\r\n\r\n  const {email, login, phone_number, deleted, \r\n    blocked, suspended_until, verification_required, role_names\r\n  } = controls\r\n\r\n  if (!details) {\r\n    return (\r\n      <h1>Нет такого аккаунта</h1>\r\n    )\r\n  }\r\n\r\n    return (\r\n        <div className={styles.AccountDetails}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/accounts' exact>Аккаунты</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Детали аккаунта {details && details.login}</BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <h1>Детали аккаунта {details && details.login}</h1>\r\n            <Form onSubmit={onSubmit} >\r\n              <FormGroup>\r\n                <Label for=\"login\">Логин</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"login\"\r\n                    id=\"login\"\r\n                    placeholder=\"Логин\"\r\n                    value={login}\r\n                    onChange={onControlChange}\r\n                    required\r\n                  />\r\n              </FormGroup>\r\n                  \r\n              <FormGroup>\r\n                <Label for=\"email\">Email</Label>\r\n                <Input\r\n                  //  invalid={touched.email && !email}\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  placeholder=\"email\"\r\n                  value={email}\r\n                  onChange={onControlChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"phone_number\">Телефон</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"phone_number\"\r\n                  id=\"phone_number\"\r\n                  placeholder=\"phone_number\"\r\n                  value={phone_number}\r\n                  onChange={onControlChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check for=\"deleted\">\r\n                 \r\n                  <Input\r\n                  type=\"checkbox\"\r\n                  name=\"deleted\"\r\n                  id=\"deleted\"\r\n                  checked={deleted}\r\n                  onChange={onCheckboxChange}\r\n                />\r\n                 {' '} Удален  \r\n                  </Label> \r\n                \r\n              </FormGroup>\r\n             \r\n              <Button \r\n              disabled={!(email && login && touched)}\r\n              color='success'\r\n              >Изменить</Button>\r\n            </Form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      details: state.accounts.details,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getAccountDetailsThunk})(AccountDetails)","import React from 'react'\r\n\r\nimport styles from './MyTable.module.scss'\r\n\r\nconst MyTable = ({className, children, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.MyTable,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <table>\r\n                <tbody>\r\n                    {children}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyTable","import React from 'react'\r\n\r\nimport styles from './MyInput.module.scss'\r\n\r\nconst MyInput = ({className, type='text', inputStyles, value='', onChange, \r\nlabel, errorText, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.MyInput,\r\n        className\r\n    ]\r\n\r\n    const inputCls = [\r\n      styles.input,\r\n      inputStyles,\r\n    ]\r\n\r\n    const handleInputChange = onChange? onChange: () => console.log('add onChange')\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n           <label>\r\n           {label}\r\n              <input \r\n                {...props}\r\n                // id={id}\r\n                className={inputCls.join(' ')}\r\n                type={type} \r\n                value={value}\r\n                onChange={handleInputChange}\r\n                // required={required}\r\n                // pattern={pattern}\r\n                // placeholder={placeholder}\r\n                // name={name}\r\n                // minLength={minLength}\r\n                // maxLength={maxLength}\r\n                // disabled={disabled}\r\n              />\r\n           </label>\r\n           { errorText && ( \r\n              <>\r\n              <br/>\r\n                <span className={styles.error} >{errorText}</span>\r\n              </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyInput","import React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Input, InputGroup, InputGroupText, Table } from 'reactstrap'\r\nimport MyTable from '../../components/UI/MyTable/MyTable'\r\nimport MyInput from '../../components/UI/MyInput/MyInput'\r\nimport { getAccountsThunk } from '../../redux/actions/accountActions'\r\n\r\nimport styles from './Accounts.module.scss'\r\n\r\nconst Accounts = ({accounts, getAccountsThunk, history}) => {\r\n\r\n    useEffect(() => {\r\n        getAccountsThunk()\r\n        // eslint-disable-next-line\r\n    }, []) \r\n\r\n    console.log(accounts);\r\n\r\n\r\n    return (\r\n        <div className={styles.Accounts}>\r\n            <center><h1>список аккаунтов</h1></center>\r\n            <MyTable>\r\n                <tr>\r\n                    <th>\r\n                        логин\r\n                    </th>\r\n                    <td>\r\n                        <MyInput/>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <th>\r\n                        e-mail\r\n                    </th>\r\n                    <td>\r\n                        <MyInput/>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <th>\r\n                        телефон\r\n                    </th>\r\n                    <td>\r\n                        <MyInput/>\r\n                    </td>\r\n                </tr>\r\n            </MyTable>\r\n\r\n            <Table hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>id</th>\r\n                        <th>Логин</th>\r\n                        <th>Email</th>\r\n                        {/* <th>Роли</th> */}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        accounts.map((account) => {\r\n                            return (\r\n                                <tr \r\n                                    key={account.id}\r\n                                    className={styles.tr} \r\n                                    onClick={() => history.push(`/accounts/${account.id}`)}\r\n                                >\r\n                                    <th scope=\"row\">{account.id}</th>\r\n                                    <td>{account.login}</td>\r\n                                    <td>{account.email}</td>\r\n                                    {/* <td>{account.role_names.join(', ')}</td> */}\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                    \r\n                    \r\n                </tbody>\r\n            </Table>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        accounts: state.accounts.accounts\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps, {getAccountsThunk})(Accounts)","import React, { useEffect, useState } from 'react'\r\nimport MyInput from '../../MyInput/MyInput'\r\n\r\nimport styles from './TableInput.module.scss'\r\n\r\nconst TableInput = ({className, label, ...props}) => {\r\n    const [inputId, setInputId] = useState('')\r\n\r\n    useEffect(() => {\r\n      setInputId(`${label}${String(Math.random()).slice(2)}`)\r\n    }, [label])\r\n\r\n    const cls = [\r\n        styles.TableInput,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <tr className={cls.join(' ')}>\r\n              <th>\r\n                <label htmlFor={inputId}>{label}</label>\r\n              </th>\r\n              <td>\r\n                  <MyInput\r\n                      {...props}\r\n                      id={inputId}\r\n                      // name={name}\r\n                      placeholder={label}\r\n                      // required={required}\r\n                      // onChange={onChange}\r\n                      // value={value}\r\n                      // errorText={errorText}\r\n                      // type={type}\r\n                      // maxLength={maxLength}\r\n                      // minLength={minLength}\r\n                      // disabled={disabled}\r\n                  />\r\n              </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TableInput","import {useState, useCallback} from 'react';\r\n\r\nexport function useFormAndValidation() {\r\n  const [ values, setValues ] = useState({});\r\n  const [ errors, setErrors ] = useState({});\r\n  const [ isValid, setIsValid ] = useState(true);\r\n\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setValues({...values, [name]: value });\r\n    setErrors({...errors, [name]: e.target.validationMessage});\r\n    setIsValid(e.target.closest('form').checkValidity());\r\n  };\r\n\r\n\r\n\r\n  const resetForm = useCallback((newValues = {}, newErrors = {}, newIsValid = false) => {\r\n    setValues(newValues);\r\n    setErrors(newErrors);\r\n    setIsValid(newIsValid);\r\n  }, [setValues, setErrors, setIsValid]);\r\n\r\n  return { values, handleChange, errors, isValid, resetForm, setValues, setIsValid };\r\n}\r\n","import myAxios from '../../configs/modified-axios'\r\nimport { makeRes } from '../../utils/utils';\r\nimport { ACQUIRERS_FAILURE, ACQUIRERS_LOADING, ACQUIRERS_SUCCESS, SET_ACQUIRERS, SET_ACQUIRER_DETAILS } from './actionTypes';\r\n\r\n\r\nexport const createAcquirerThunk = (inputData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n\r\n      const res = await myAxios.post(`/api/admin/add_acquirer`, inputData)\r\n\r\n      console.log(res);\r\n      \r\n      if (res.status === 200 && res.data.result) {\r\n          dispatch(alertAcquirersSuccess({create: 'Эквайер добавлен успешно'}))\r\n          return makeRes(true, 'Эквайер добавлен успешно')\r\n        } else {\r\n          dispatch(alertAcquirersFailure({ create: res.data.errors }))\r\n          return makeRes(false, res.data.errors)\r\n        } \r\n    } catch (error) {\r\n      console.log(error.message);\r\n      dispatch(alertAcquirersFailure({create: [error.message]}))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n} \r\n\r\nexport const getAcquirersThunk = (filterData={}) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_acquirers`, filterData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(getAcquirersSuccess( res.data.result.acquirers))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertAcquirersFailure({ acquirers: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertAcquirersFailure({ acquirers: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const getAcquirerDetailsThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_acquirers_by_uuids`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setAcquirerDetails( res.data.result.acquirers[0]))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertAcquirersFailure({ details: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertAcquirersFailure({ details: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateAcquirerThunk = (acquirerData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/update_acquirer`, acquirerData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertAcquirersSuccess({update: 'информация о эквайере успешно обновлена'}))\r\n        return makeRes(true, 'информация о эквайере успешно обновлена')\r\n      } else {\r\n        dispatch(alertAcquirersFailure({ update: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertAcquirersFailure({ update: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const deleteAcquirersThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/delete_acquirers`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertAcquirersSuccess({delete: 'Эквайер успешно удалён'}))\r\n        return makeRes(true, 'Эквайер успешно удалён')\r\n      } else {\r\n        dispatch(alertAcquirersFailure({ delete: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertAcquirersFailure({ delete: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const setAcquirersLoading = (status) => {\r\n  return {\r\n    type: ACQUIRERS_LOADING,\r\n    status\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const getAcquirersSuccess = (acquirers) => {\r\n  return {\r\n    type: SET_ACQUIRERS,\r\n    acquirers\r\n  }\r\n}\r\n\r\nexport const setAcquirerDetails = (details) => {\r\n  return {\r\n    type: SET_ACQUIRER_DETAILS,\r\n    details\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const alertAcquirersFailure = (errors) => {\r\n  return {\r\n    type: ACQUIRERS_FAILURE,\r\n    errors\r\n  }\r\n}\r\nexport const alertAcquirersSuccess = (message) => {\r\n  return {\r\n    type: ACQUIRERS_SUCCESS,\r\n    message\r\n  }\r\n}\r\n\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { Alert } from 'reactstrap'\r\n\r\nimport styles from './SuccessAlert.module.scss'\r\n\r\nconst SuccessAlert = ({\r\n  className, alertHeading='Всё отлично!', message='Запись добавлена успешно',\r\n  bottomMessage='', visible=false, setVisible,\r\n  ...props}) => {\r\n\r\n\r\n  const onDismiss = () => setVisible(false);\r\n\r\n\r\n    useEffect(() => {\r\n      let timer;\r\n\r\n      if (visible) {\r\n       timer = setTimeout(() => {\r\n          onDismiss()\r\n        }, 3000)\r\n      }\r\n\r\n      return () => {\r\n        clearTimeout(timer)\r\n      }\r\n      // eslint-disable-next-line\r\n    }, [visible])\r\n\r\n    const cls = [\r\n        styles.SuccessAlert,\r\n        className\r\n    ]\r\n\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n             <Alert color=\"success\" isOpen={visible} toggle={onDismiss}>\r\n                <h4 className=\"alert-heading\">{alertHeading}</h4>\r\n                <p>\r\n                  {message}\r\n                </p>\r\n                <hr />\r\n                <p className=\"mb-0\">\r\n                  {bottomMessage}\r\n                </p>\r\n              </Alert>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuccessAlert","import React from 'react'\r\nimport { Alert } from 'reactstrap'\r\n\r\nimport styles from './FailureAlert.module.scss'\r\n\r\nconst FailureAlert = ({\r\n  className, alertHeading='Ошибка!', message='Что-то пошло не так',\r\n  bottomMessage='', visible=false, setVisible,\r\n  ...props}) => {\r\n\r\n  const onDismiss = () => setVisible(false);\r\n\r\n\r\n    const cls = [\r\n        styles.FailureAlert,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n             <Alert color=\"danger\" isOpen={visible} toggle={onDismiss}>\r\n                <h4 className=\"alert-heading\">{alertHeading}</h4>\r\n                <p>\r\n                  {message}\r\n                </p>\r\n                <hr />\r\n                <p className=\"mb-0\">\r\n                  {bottomMessage}\r\n                </p>\r\n              </Alert>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FailureAlert","import { useState } from \"react\";\r\n\r\n\r\n\r\nexport const useAlert = () => {\r\n\r\n  const [successAlertVisible, setSuccessAlertVisible] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState('Успешно');\r\n  const [failureAlertVisible, setFailureAlertVisible] = useState(false);\r\n  const [failureMessage, setFailureMessage] = useState('Ошибка');\r\n\r\n  const checkRes = (withSuccessAlert=true) => {\r\n    return (res) => {\r\n      if (res.ok) {\r\n        if (withSuccessAlert) {\r\n          setSuccessAlertVisible(true)\r\n          setSuccessMessage(`${res.message}`)\r\n        }\r\n      } else {\r\n          setFailureAlertVisible(true)\r\n          setFailureMessage(`${res.message.join(' ')}`)\r\n      }\r\n\r\n      return res\r\n  }\r\n  }\r\n\r\n  return {\r\n    successAlertVisible, setSuccessAlertVisible, successMessage, setSuccessMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, setFailureMessage,\r\n    checkRes\r\n  }\r\n  \r\n}\r\n\r\n","import React, { useEffect, useState }  from 'react'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport {  Breadcrumb, BreadcrumbItem, Button } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from './AcquirerAddition.module.scss'\r\nimport { connect } from 'react-redux'\r\nimport { createAcquirerThunk } from '../../../redux/actions/acquirerActions'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\n\r\nconst AcquirerAddition = ({\r\n    className, createAcquirerThunk, ...props\r\n}) => {\r\n\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n        failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n    \r\n\r\n    const {values, handleChange, errors, isValid, resetForm, setIsValid } = useFormAndValidation()\r\n\r\n    const [checked, setChecked] = useState(true)\r\n    useEffect(() => {\r\n        setIsValid(false)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        console.log(values);\r\n        createAcquirerThunk({\r\n            ...values,\r\n            active: checked\r\n        })\r\n        .then((res) => {\r\n            checkRes()(res)\r\n            return res\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  setTimeout(() => {\r\n                    resetForm()\r\n                  }, 1000)\r\n              }\r\n          })\r\n          .then(() => console.log('AcquirerAddition'))\r\n          .catch((err) => console.log(err))\r\n\r\n    }\r\n\r\n    const handleCheckBoxChange = (evt) => {\r\n        setChecked(evt.target.checked)\r\n    }\r\n\r\n    const cls = [\r\n        styles.AcquirerAddition,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/acquirers' exact>Банки</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Добавление банка </BreadcrumbItem>\r\n        </Breadcrumb>\r\n           <center> <h1>Добавление банка</h1></center>\r\n          <form onSubmit={onSubmit} >\r\n            <MyTable>\r\n                <TableInput\r\n                    name='name'\r\n                    label='Наименование'\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    errorText={errors.name}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                />\r\n                <TableInput\r\n                    name='alias'\r\n                    label='alias'\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    value={values.alias}\r\n                    errorText={errors.alias}\r\n                    pattern={'[a-z0-9_]{2,50}'}\r\n                    minLength={2}\r\n                    maxLength={50}\r\n                />\r\n                <TableInput\r\n                    name='active'\r\n                    label='Активен'\r\n                    onChange={handleCheckBoxChange}\r\n                    type='checkbox'\r\n                    checked={checked}\r\n                    \r\n                />\r\n\r\n            </MyTable>\r\n\r\n            <Button\r\n                 color={isValid? \"primary\": 'secondary'}\r\n                disabled={!isValid}\r\n            >\r\n                Добавить\r\n            </Button>\r\n          </form>\r\n\r\n                <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default connect(null, { createAcquirerThunk })(AcquirerAddition)","import React from 'react'\r\nimport { Button } from 'reactstrap'\r\nimport MyTable from '../MyTable'\r\n\r\nimport styles from './MyTableForm.module.scss'\r\n\r\nconst MyTableForm = ({\r\n  className, onSubmit, children, isValid, buttonText='Добавить', ...props\r\n}) => {\r\n\r\n    const cls = [\r\n        styles.MyTableForm,\r\n        className\r\n    ]\r\n\r\n\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n           <form onSubmit={onSubmit}>\r\n                <MyTable>\r\n                   {children}\r\n                </MyTable>\r\n\r\n\r\n                <Button\r\n                    color={isValid? \"primary\": 'secondary'}\r\n                    disabled={!isValid}\r\n                 >\r\n                   \r\n                    {buttonText}\r\n                </Button>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyTableForm","import React from 'react'\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\n\r\nimport styles from './TableMultiselect.module.scss'\r\n\r\nconst TableMultiselect = ({className, label, multiRef, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.TableMultiselect,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <tr className={cls.join(' ')}>\r\n            <th>\r\n            {label}\r\n            </th>\r\n            <td>\r\n                <Multiselect\r\n                    {...props}\r\n                    ref={multiRef}\r\n                    style={{ \r\n                        multiselectContainer: { \r\n                            margin: '1rem',\r\n                            marginLeft: '2rem',\r\n                            // width: '80%'\r\n                        },\r\n                    }}\r\n                />\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TableMultiselect","export const operationsOptions = [\r\n  {name: 'AFT', value: 'aft', jsonKey: 'operations'},\r\n  {name: 'AFT рекуррент', value: 'aft_recurring', jsonKey: 'operations'},\r\n  {name: 'ECOM', value: 'ecom', jsonKey: 'operations'},\r\n  {name: 'ECOM рекуррент', value: 'ecom_recurring', jsonKey: 'operations'},\r\n  {name: 'ECOM рекуррент регистрация', value: 'ecom_recurring_reg', jsonKey: 'operations'},\r\n  {name: 'OCT (B2C) - выдача на карту', value: 'oct_card', jsonKey: 'operations'},\r\n  {name: 'OCT - выдача на счет', value: 'oct_account', jsonKey: 'operations'},\r\n]\r\n\r\n\r\nexport const activeOptions = [\r\n  {name: 'Да', value: true, jsonKey: 'active'},\r\n  {name: 'Нет', value: false, jsonKey: 'active'},\r\n]\r\n\r\n\r\nexport const currenceOptions = [\r\n  {\"value\": \"643\", \"code\": \"RUB\", \"name\": \"Российский рубль\", jsonKey: 'currency_num'},\r\n      {\"value\": \"840\", \"code\": \"USD\", \"name\": \"Доллар США\", jsonKey: 'currency_num'},\r\n      {\"value\": \"978\", \"code\": \"EUR\", \"name\": \"Евро\", jsonKey: 'currency_num'},\r\n      {\"value\": \"392\", \"code\": \"JPY\", \"name\": \"Японская йена\", jsonKey: 'currency_num'},\r\n      {\"value\": \"156\", \"code\": \"CNY\", \"name\": \"Китайский юань женьминьби\", jsonKey: 'currency_num'},\r\n]\r\n\r\nexport const cardBrandsOptions = [\r\n  {name: 'VISA', value: 'visa', jsonKey: 'card_brands'},\r\n  {name: 'Master card', value: 'mc', jsonKey: 'card_brands'},\r\n  {name: 'JCB', value: 'jcb', jsonKey: 'card_brands'},\r\n  {name: 'AMEX', value: 'amex', jsonKey: 'card_brands'},\r\n  {name: 'Discover', value: 'discover', jsonKey: 'card_brands'},\r\n  {name: 'MIR', value: 'mir', jsonKey: 'card_brands'},\r\n]\r\n","import React from 'react'\r\nimport { Button } from 'reactstrap'\r\n\r\nimport styles from './MyButton.module.scss'\r\n\r\nconst MyButton = ({\r\n  className, onClick, color='secondary', buttonText='Сохранить', ...props\r\n}) => {\r\n\r\n    const cls = [\r\n        styles.MyButton,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <Button\r\n                color={color}\r\n                onClick={onClick}\r\n            >\r\n                {buttonText}\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyButton","import React from 'react'\r\n\r\nimport styles from './StatusTD.module.scss'\r\n\r\nconst StatusTD = ({className, active, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.StatusTD,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <td className={cls.join(' ')}>\r\n        <span className={active? styles.active: styles.notActive}>\r\n           {(active && 'активен') || 'неактивен'}\r\n        </span>\r\n        </td>\r\n    )\r\n}\r\n\r\nexport default StatusTD","import React from 'react'\r\n\r\nimport styles from './ClickableTH.module.scss'\r\n\r\nconst ClickableTH = ({className, label, onClick, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.ClickableTH,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <th onClick={onClick} className={cls.join(' ')}>\r\n           {label}\r\n        </th>\r\n    )\r\n}\r\n\r\nexport default ClickableTH","import React from 'react'\r\n\r\nimport styles from './TableNotFound.module.scss'\r\n\r\nconst TableNotFound = ({className, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.TableNotFound,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <tr className={cls.join(' ')}>\r\n            <th>\r\n                <h1>Ничего не найдено</h1>\r\n            </th>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TableNotFound","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Table } from 'reactstrap'\r\nimport MyTableForm from '../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../hooks/useFormValiation'\r\nimport { getAcquirersThunk } from '../../redux/actions/acquirerActions'\r\n\r\nimport styles from './Acquirers.module.scss'\r\nimport TableMultiselect from '../../components/UI/MyTable/TableMultiselect/TableMultiselect';\r\nimport { activeOptions } from '../../utils/constants';\r\nimport { getTrimmedValues } from '../../utils/utils';\r\nimport MyButton from '../../components/UI/MyButton/MyButton';\r\nimport StatusTD from '../../components/UI/MyTable/StatusTD/StatusTD';\r\nimport ClickableTH from '../../components/UI/MyTable/ClickableTH/ClickableTH';\r\nimport SuccessAlert from '../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../hooks/useAlert'\r\nimport TableNotFound from '../../components/UI/MyTable/TableNotFound/TableNotFound'\r\n\r\nconst Acquirers = ({className, getAcquirersThunk, acquirers=[], ...props}) => {\r\n    \r\n    const history = useHistory()\r\n\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n        failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n    \r\n    const {values, handleChange, errors, setValues, isValid } = useFormAndValidation()\r\n    const [order, setOrder] = useState(true)\r\n\r\n    const changeOrder = (field) => {\r\n      setOrder(!order)\r\n  \r\n      const filterData = getTrimmedValues(values)\r\n  \r\n      const sortedData = {\r\n          ...filterData,\r\n          \"sort_by\": [\r\n              {\r\n                field,\r\n                order: order? 'asc' : 'desc'\r\n              }\r\n          ]\r\n      }\r\n      \r\n      getAcquirersThunk(sortedData)\r\n      .then(checkRes(false))\r\n  \r\n  }\r\n\r\n    const onRemove = (selectedList, removedItem) => {\r\n        console.log(selectedList);\r\n    }\r\n\r\n\r\n      const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        \r\n        const filterData = getTrimmedValues(values)\r\n\r\n        getAcquirersThunk(filterData)\r\n        .then(checkRes(false))\r\n     \r\n        console.log(filterData);\r\n      }\r\n\r\n\r\n    const onSingleSelect = (selectedList, {jsonKey, value}) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [jsonKey]: value\r\n        })\r\n    }\r\n\r\n    const cls = [\r\n        styles.Acquirers,\r\n        className\r\n    ]\r\n    \r\n\r\n    useEffect(() => {\r\n        getAcquirersThunk()\r\n        .then(checkRes(false))\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <center><h1>Список банков</h1></center>\r\n            <MyTableForm\r\n                 onSubmit={onSubmit}\r\n                isValid={isValid}\r\n                buttonText='Найти'\r\n            >\r\n                <TableInput\r\n                    name='name'\r\n                    label='Наименование'\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    errorText={errors.name}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                />\r\n                \r\n                <TableMultiselect\r\n                        label='Aктивен'\r\n                        options={activeOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onSingleSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                    />\r\n                \r\n            </MyTableForm>\r\n            <Table hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>№</th>\r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('name')}\r\n                            label='Наименование'\r\n                        />\r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('active')}\r\n                            label='Cтатус'\r\n                        />\r\n                        \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        acquirers?.length?\r\n                          acquirers.map((item, i) => {\r\n                            return (\r\n                                <tr \r\n                                    key={item.uuid}\r\n                                    onClick={() => history.push(`/acquirers/${item.uuid}`)}\r\n                                >\r\n                                    <td>{i+1}</td>\r\n                                    <td>{item.name}</td>\r\n                                    <StatusTD\r\n                                        active={item.active}\r\n                                    />\r\n                                </tr>\r\n                            )\r\n                        }) :\r\n                        (\r\n                            <TableNotFound/>\r\n                        )\r\n                    }\r\n                    \r\n                    \r\n                </tbody>\r\n            </Table>\r\n\r\n\r\n            <MyButton\r\n                color={'primary'}\r\n                onClick={() => history.push('/add-acquirer')}\r\n                buttonText='добавить банк'\r\n            />\r\n\r\n                <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        acquirers: state.acquirers.acquirers\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default  connect(mapStateToProps, { getAcquirersThunk })(Acquirers)","import React from 'react'\r\n\r\nimport styles from './DetailsTableRow.module.scss'\r\n\r\nconst DetailsTableRow = ({\r\n  className, data, label, ...props\r\n}) => {\r\n\r\n    const cls = [\r\n        styles.DetailsTableRow,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <tr className={cls.join(' ')}>\r\n                    <th>\r\n\r\n                        {label}\r\n                    </th>\r\n                    <td>\r\n                      <span>\r\n                        {data}\r\n                      </span>\r\n                    </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default DetailsTableRow","import React from 'react'\r\n\r\nimport styles from './FlexBlock.module.scss'\r\n\r\nconst FlexBlock = ({className, children, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.FlexBlock,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FlexBlock","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport MyButton from '../../../components/UI/MyButton/MyButton'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\n\r\nimport styles from './AcquirersDetails.module.scss'\r\nimport { deleteAcquirersThunk, getAcquirerDetailsThunk, setAcquirerDetails } from '../../../redux/actions/acquirerActions'\r\nimport DetailsTableRow from '../../../components/UI/MyTable/DetailsTableRow/DetailsTableRow'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport FlexBlock from '../../../components/Blocks/FlexBlock/FlexBlock'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\n\r\nconst AcquirersDetails = ({\r\n  className, details, getAcquirerDetailsThunk, setAcquirerDetails, deleteAcquirersThunk,\r\n   ...props}) => {\r\n\r\n  const {id} = useParams()\r\n  const history = useHistory()\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, setFailureMessage, checkRes} = useAlert()\r\n\r\n\r\n  const deleteAcquirer = () => {\r\n    const confirmed = window.confirm(\"Вы точно хотите удалить?\");\r\n    if (confirmed) {\r\n        deleteAcquirersThunk([id])\r\n        .then((res) => {\r\n          checkRes()(res)\r\n          return res\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                setTimeout(() => {\r\n                  history.goBack()\r\n                }, 1000)\r\n            }\r\n        })\r\n        .then(() => console.log('deleteAcquirersThunk')\r\n        )\r\n        .catch((err) => console.log(err))\r\n        \r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAcquirerDetailsThunk([id])\r\n    return () => {\r\n      setAcquirerDetails({\r\n          uuid: '',\r\n          active: true,\r\n          alias: '',\r\n          name: '',\r\n        })\r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n    const cls = [\r\n        styles.AcquirersDetails,\r\n        className\r\n    ]\r\n    if (!details) {\r\n      return <h1>нет такого эквайера</h1>\r\n  }\r\n\r\n  if (!details.uuid) {\r\n      return <Spinner/>\r\n  }\r\n\r\n  return (\r\n    <div className={cls.join(' ')}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/acquirers' exact>Список банков</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Детали банка {details.name}</BreadcrumbItem>\r\n        </Breadcrumb>\r\n\r\n        <center><h1>Информация об эквайере</h1></center>\r\n        <MyTable>\r\n            <DetailsTableRow\r\n                label='uuid'\r\n                data={details.uuid}\r\n            />\r\n            <DetailsTableRow\r\n                label='Наименование'\r\n                data={details.name}\r\n            />\r\n            <DetailsTableRow\r\n                label='Статус'\r\n                data={details.active? 'активен' : 'неактивен'}\r\n            />\r\n             <DetailsTableRow\r\n                label='alias'\r\n                data={details.alias}\r\n            />\r\n\r\n        </MyTable>\r\n\r\n        <FlexBlock>\r\n            <MyButton\r\n                onClick={() => history.push(`/acquirers/update/${id}`)}\r\n                buttonText='редактировать'\r\n            />\r\n\r\n            <MyButton\r\n                color={'danger'}\r\n                onClick={deleteAcquirer}\r\n                buttonText='удалить'\r\n            />\r\n        </FlexBlock>\r\n        \r\n        <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\nreturn {\r\n  details: state.acquirers.details,\r\n}\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { \r\n  getAcquirerDetailsThunk, setAcquirerDetails, deleteAcquirersThunk\r\n})(AcquirersDetails)","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem, Button } from 'reactstrap'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport { getAcquirerDetailsThunk, setAcquirerDetails, updateAcquirerThunk } from '../../../redux/actions/acquirerActions'\r\nimport styles from './AcquirersUpdate.module.scss'\r\n\r\nconst AcquirersUpdate = ({\r\n  className, getAcquirerDetailsThunk, setAcquirerDetails, details,\r\n  updateAcquirerThunk, ...props\r\n}) => {\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n\r\n\r\n  const {values, handleChange, errors, isValid, setValues } = useFormAndValidation()\r\n  const [checked, setChecked] = useState(true)\r\n  \r\n  const {id} = useParams()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    getAcquirerDetailsThunk([id])\r\n    return () => {\r\n      setAcquirerDetails({\r\n          uuid: '',\r\n          active: true,\r\n          alias: '',\r\n          name: '',\r\n        })\r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\nuseEffect(() => {\r\n  setValues(details)\r\n  setChecked(details?.active)\r\n  // eslint-disable-next-line\r\n}, [details])\r\n\r\nconst onSubmit = (evt) => {\r\n  evt.preventDefault()\r\n  updateAcquirerThunk({uuid: id, ...values, active: checked})\r\n  .then((res) => {\r\n    checkRes()(res)\r\n    return res\r\n  })\r\n  .then(res => {\r\n      if (res.ok) {\r\n          setTimeout(() => {\r\n            history.goBack()\r\n          }, 1000)\r\n      }\r\n  })\r\n  .catch((err) => console.log(err))\r\n  console.log(values);\r\n}\r\n\r\nconst handleCheckBoxChange = (evt) => {\r\n  setChecked(evt.target.checked)\r\n}\r\n\r\n    const cls = [\r\n        styles.AcquirersUpdate,\r\n        className\r\n    ]\r\n    if (!details) {\r\n      return <h1>нет такого эквайера</h1>\r\n  }\r\n\r\n  if (!details.uuid) {\r\n      return <Spinner/>\r\n  }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n         <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/acquirers' exact>Список банков</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/acquirers/${id}`} exact>Детали банка &nbsp; <strong>{details.name}</strong></BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Редактирование банка &nbsp; <strong>{details.name}</strong></BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <h1>Редактирование информации эквайера </h1>\r\n            <form onSubmit={onSubmit}>\r\n              <MyTable>\r\n              <TableInput\r\n                    name='name'\r\n                    label='Наименование'\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    errorText={errors.name}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                />\r\n                <TableInput\r\n                    name='alias'\r\n                    label='alias'\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    value={values.alias}\r\n                    errorText={errors.alias}\r\n                    pattern={'[a-z0-9_]{2,50}'}\r\n                    minLength={2}\r\n                    maxLength={50}\r\n                />\r\n                <TableInput\r\n                    name='active'\r\n                    label='Активен'\r\n                    onChange={handleCheckBoxChange}\r\n                    type='checkbox'\r\n                    checked={checked}\r\n                    \r\n                />\r\n\r\n              </MyTable>\r\n              <Button\r\n                 color={isValid? \"success\": 'secondary'}\r\n                  disabled={!isValid}\r\n              >\r\n                сохранить\r\n              </Button>\r\n            </form>\r\n\r\n            \r\n            <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      details: state.acquirers.details,\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n   getAcquirerDetailsThunk, setAcquirerDetails, updateAcquirerThunk,\r\n  })(AcquirersUpdate)","import React from 'react'\r\n\r\nimport styles from './HomePage.module.scss'\r\n\r\nconst HomePage = (props) => {\r\n\r\n    return (\r\n        <div className={styles.HomePage}>\r\n            <h1>Главная страница</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage","export const mockNews = [\r\n  {\r\n    id: 1,\r\n    image: 'https://vepay.online/upload/iblock/9a6/9a658816a540dc262a0881104877e2ae.jpg',\r\n    short: '6-ОЙ ЮЖНОРОССИЙСКИЙ МИКРОФИНАНСОВЫЙ ФОРУМ',\r\n    full: `\r\n    10 сентября процессинговая компания VEPAY принимала участие в 6-ом Южнороссийском Микрофинансовом форуме в качестве мерчанта.\r\n    ⠀\r\n    Генеральный директор компании Евгений Колобов в рамках выступления на тему «Цифровизация бизнеса. Платежные тренды для микрофинансовых организаций» затронул вопросы финансовых решений для МФО, которые может предоставить VEPAY:\r\n    -Рекуррент\r\n    -УПРИД (удаленная упрощенная идентификация клиентов)\r\n    -Оплата по ссылке\r\n    -Получение платежей\r\n    -Мобильное приложение\r\n    -Верификация заемщика\r\n    -Кастомизация\r\n    \r\n    VEPAY - технологии в действии!\r\n    \r\n    Свяжитесь с нами: info@vepay.online или по телефону +7 495 954 84 95`,\r\n    date: \"2020-09-25T18:25:43.511Z\"\r\n  },\r\n  {\r\n    id: 2,\r\n    image: 'https://vepay.online/upload/iblock/6f9/6f9e2cd88d82c555816ba89ace29f5e8.jpeg',\r\n    short: 'Пресс-релиз от 10.09.2020 УПРИД для МФО',\r\n    full: `Процессинговая компания VEPAY сообщает о запуске сервиса для микрофинансовых организаций об упрощенной идентификации клиентов, соответствующего требованиям Федерального закона № 115-ФЗ, а, также, сервиса верификации банковской карты заемщика через систему быстрых платежей.\r\n\r\n    Данный сервис позволяет проверить следующие данные: ФИО, серия и номер паспорта, ИНН, СНИЛС, номер полиса ОМС, пол, дата рождения, а также производить авторизацию заемщиков через портал Госуслуг.\r\n    \r\n    Удаленная идентификация - это механизм, позволяющий россиянам получать финансовые услуги дистанционно в различных финансовых учреждениях, подтвердив свою личность с помощью биометрических персональных данных. \r\n    \r\n    Сервис для микрофинансовых и других кредитных организаций VEPAY по верификации карты клиента и упрощенной идентификации позволит компании ускорить время принятия решения по выдаче займа и его зачисления на банковскую карту заемщика, снизить количество мошеннических операций, актуализировать информацию по действующим клиентам и выявить дополнительные данные в режиме онлайн. \r\n    \r\n    VEPAY обеспечивает помощь в интеграции, а также оказывает техническую поддержку по возникающим вопросам.\r\n    \r\n    Процессинговая компания VEPAY – это российская компания, предоставляющая отраслевой сервис в области платежных технологий на рынках России, Западной Европы и СНГ для юридических лиц и самозанятых лиц.\r\n    \r\n    Основными направлениями работы являются отрасли МФО и финансовые организации, интернет-магазины и маркетплейс, краудфандинговые платформы, сервисы онлайн-образования, ЖКХ.\r\n    \r\n    Свяжитесь с нами: info@vepay.online или по телефону +7 495 954 84 95`,\r\n    date: \"2020-09-11T18:25:43.511Z\"\r\n  },\r\n  {\r\n    id: 3,\r\n    image: 'https://vepay.online/upload/iblock/b09/b09f72fb03c21c30637baec98dbd4aa6.jpg',\r\n    short: 'Интервью генерального директора VEPAY Евгения Колобова Digital MFO Forum',\r\n    full: `Генеральный директор процессинговой компании «VEPAY» Евгений Колобов 27.08.2020г. принимал участие в конференции Digital MFO.\r\n\r\n    В рамках интервью с Евгением Колобовым, модераторы Владимир Шикин и Вячеслав Семенихин обсудили наиболее важные вопросы, в отношение рынка МФО и краудфандинга, а именно: верификация карт заемщика МФО через СБП, \"click-to-offer\", продукт для инвестиционных платформ и его отличие от банковских продуктов.\r\n    \r\n    Также, обсуждение коснулось темы начинающих предпринимателей (самозанятые) и быстрых вариантов оплаты товаров и услуг, которые не требуют сложной технической интеграции с системой VEPAY.\r\n    \r\n    Мы благодарим наших коллег за приглашение на конференцию!\r\n    \r\n    Запись интервью с генеральным директором процессинговой компании «VEPAY» Евгением Колобовым, можно увидеть на сайте форума digital-mfo.ru\r\n    \r\n    VEPAY - технологии в действии!\r\n    \r\n    Свяжитесь с нами: info@vepay.online или по телефону +7 495 954 84 95`,\r\n    date: \"2020-08-28T18:25:43.511Z\"\r\n  },\r\n  {\r\n    id: 4,\r\n    image: 'https://vepay.online/upload/iblock/0b9/0b9941a78dc742162794b2d1a3e5c11d.png',\r\n    short: 'VEPAY: бренд с индивидуальным подходом и корпоративными ценностями',\r\n    full: `Евгений Колобов, сооснователь и генеральный директор процессинговой компании VEPAY, в своем интервью журналу «ПЛАС» рассказывает о последних трендах финтеха, возникших под влиянием пандемии, а также новых возможностях для начинающих предпринимателей.\r\n\r\n    В интервью вы узнаете:\r\n    о последних трендах платежного рынка;\r\n    как сэкономить на платежах, и каковы нюансы арифметики платежного бизнеса;\r\n    об эффективных платежных инструментах для небольших интернет-магазинов;\r\n    о сервисах процессинговой компании VEPAY для микрофинансовых организаций и краудфандинговых платформ;\r\n    о бренде VEPAY и его отношению к клиентам;\r\n    а также много всего интересного.\r\n    Прочесть интервью https://plusworld.ru/lr/vepay-brend-s-individualnym-podkhodom/\r\n    \r\n    О процессинговой компании VEPAY\r\n    Процессинговая компания VEPAY – это российская компания, предоставляющая отраслевой сервис в области платежных технологий на рынках России и СНГ для юридических лиц.\r\n    \r\n    Основными направлениями работы являются отрасли МФО и финансовые организации, интернет-магазины и маркетплейс, краудфандинговые платформы, сервисы онлайн-образования, ЖКХ.\r\n    \r\n    Задать вопрос info@vepay.online\r\n    Позвонить +7 499 954-84-95\r\n    Заполнить заявку на подключение https://vepay.online/new.php\r\n    Начните принимать платежи уже завтра!`,\r\n    date: \"2020-08-25T18:25:43.511Z\"\r\n  },\r\n\r\n]","import myAxios from '../../configs/modified-axios'\r\n\r\nimport { mockNews } from '../../utils/mock-news'\r\nimport { getAccessToken } from '../../utils/utils'\r\n\r\n\r\nimport { SET_NEWS_FAILURE, GET_NEWS_SUCCESS, NEWS_LOADING,\r\n  GET_NEWS_DETAILS\r\n } from \"./actionTypes\"\r\n\r\n\r\nexport const getNewsThunk = () => {\r\n  return async (dispatch) => {\r\n    dispatch(setNewsLoading(true))\r\n\r\n    try {\r\n      dispatch(setNews(mockNews)) // TEST\r\n      // const data = {\r\n      //   access_token: getAccessToken(),\r\n\r\n      // }\r\n      // const res = await myAxios.post(`/api/get_news`, data)\r\n      // if (res.status === 200 && res.data.result) {\r\n        // dispatch(setNewsFailure({ news: null }))\r\n      //   dispatch(setNews(res.data.result.news))\r\n      // } else {\r\n        // dispatch(setNewsFailure({ news: res.data.errors }))\r\n      // } \r\n    } catch (error) {\r\n      dispatch(setNewsFailure({ news: ['Сервер недоступен'] }))\r\n      console.log(error);\r\n    } finally {\r\n     dispatch(setNewsLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const getNewsDetailsThunk = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch(setNewsLoading(true))\r\n    \r\n    try {\r\n      dispatch(setNewsDetails(mockNews.find((news) => news.id === +id)))\r\n\r\n      // const data = {\r\n      //   access_token: getAccessToken(),\r\n      //   ids: [id]\r\n      // }\r\n      // const res = await myAxios.post(`/api/get_news_by_ids`, data)\r\n      // if (res.status === 200 && res.data.result) {\r\n          // dispatch(setNewsFailure({ details: null }))\r\n      //   dispatch(setNewsDetails(res.data.result.news[0]))\r\n      // } else {\r\n      //   dispatch(setNewsFailure({ details: res.data.errors }))\r\n      // }\r\n    } catch (error) {\r\n      dispatch(setNewsFailure({ details: ['Сервер недоступен'] }))\r\n      console.log(error);\r\n    } finally {\r\n      dispatch(setNewsLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateNewsDetailsThunk = (newsData) => {\r\n  return async (dispatch) => {\r\n    dispatch(setNewsLoading(true))\r\n    try {\r\n      const data = {\r\n        ...newsData,\r\n        access_token: getAccessToken(),\r\n        // date: new Date(),\r\n        // category_alias: \"site\"\r\n\r\n      }\r\n      const res = await myAxios.post(`/api/update_news`, data)\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setNewsFailure({ update: null }))\r\n        dispatch(setNewsDetails(res.data.result))\r\n      } else {\r\n        dispatch(setNewsFailure({ update: res.data.errors }))\r\n      }\r\n    } catch (error) {\r\n      dispatch(setNewsFailure({ update: ['Сервер недоступен'] }))\r\n      console.log(error);\r\n    } finally {\r\n      dispatch(setNewsLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteNewsThunk = (id) => {\r\n  return async (dispatch) => {\r\n\r\n    dispatch(setNewsLoading(true))\r\n    try {\r\n      const data = {\r\n        access_token: getAccessToken(),\r\n        ids: [id]\r\n      }\r\n      const res = await myAxios.post(`/api/delete_news`, data)\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setNewsFailure({ delete: null }))\r\n      } else {\r\n        dispatch(setNewsFailure({ delete: res.data.errors }))\r\n      }\r\n    } catch (error) {\r\n      dispatch(setNewsFailure({ delete: ['Сервер недоступен'] }))\r\n      console.log(error);\r\n    } finally {\r\n      dispatch(setNewsLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const createNewsThunk = (newsData) => {\r\n  return async (dispatch) => {\r\n    dispatch(setNewsLoading(true))\r\n    try {\r\n      const data = {\r\n        ...newsData,\r\n        access_token: getAccessToken(),\r\n        // date: new Date(),\r\n        // category_alias: \"site\"\r\n      }\r\n      const res = await myAxios.post(`/api/add_news`, data)\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setNewsFailure({ create: null }))\r\n        dispatch(setNewsDetails(res.data.result))\r\n      } else {\r\n        dispatch(setNewsFailure({ create: res.data.errors }))\r\n      }\r\n    } catch (error) {\r\n      dispatch(setNewsFailure({ create: ['Сервер недоступен'] }))\r\n      console.log(error);\r\n    } finally {\r\n      dispatch(setNewsLoading(false))\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const setNewsLoading = (status) => {\r\n  return {\r\n    type: NEWS_LOADING,\r\n    status\r\n  }\r\n}\r\n\r\nexport const setNewsFailure = (errors) => {\r\n  return {\r\n    type: SET_NEWS_FAILURE,\r\n    errors\r\n  }\r\n}\r\n\r\nexport const setNews = (news) => {\r\n  return {\r\n    type: GET_NEWS_SUCCESS,\r\n    news\r\n  }\r\n}\r\nexport const setNewsDetails = (details) => {\r\n  return {\r\n    type: GET_NEWS_DETAILS,\r\n    details\r\n  }\r\n}","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { ListGroup, ListGroupItem } from 'reactstrap'\r\nimport { getNewsThunk } from '../../redux/actions/blogActions'\r\n\r\nimport styles from './News.module.scss'\r\n\r\nconst News = ({news, getNewsThunk, history}) => {\r\n\r\n  useEffect(() => {\r\n    getNewsThunk()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n    return (\r\n        <div className={styles.News}>\r\n        \r\n            <h1>Новости</h1>\r\n            <ListGroup tag='ol'>\r\n              {\r\n                news.map((item) => {\r\n                  return (\r\n                    <ListGroupItem \r\n                    className={styles.listItem}\r\n                      key={item.id}\r\n                      onClick={() => history.push(`/news/${item.id}`)}\r\n                    >\r\n                      {item.short}\r\n                    </ListGroupItem>\r\n                  )\r\n                })\r\n              }\r\n            </ListGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      news: state.blog.news\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {getNewsThunk}) (News)","import React, { useEffect, useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button, Input } from 'reactstrap'\r\nimport { createNewsThunk } from '../../../redux/actions/blogActions'\r\n\r\nimport styles from './NewsCreation.module.scss'\r\n\r\n\r\n\r\nconst NewsCreation = ({createNewsThunk, }) => {\r\n    const [short, setShort] = useState('')\r\n    const [full, setFull] = useState('')\r\n    const [picture, setPicture] = useState('')\r\n    console.log(picture);\r\n\r\n    const fileInput = useRef()\r\n\r\n    useEffect(() => {\r\n        // getNewsDetailsThunk(match.params.id)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(fileInput.current.files[0]);\r\n        let ok = window.confirm('Вы действительно хотите создать новость?')\r\n        if (ok) {\r\n            console.log('ok');\r\n            // history.push('/news')\r\n            createNewsThunk({\r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.NewsCreation}>\r\n            <h1>Создание новости</h1>\r\n            <form onSubmit={onSubmit} >\r\n                <h3>Добавить картинку новости</h3>\r\n                <Input \r\n                    type='file' \r\n                    name='picture'\r\n                    innerRef={fileInput}\r\n                    onChange={() => setPicture(fileInput.current.files[0])}\r\n                />\r\n                <h3>Название новости (short)</h3>\r\n                <textarea \r\n                    name=\"short\" \r\n                    value={short}  \r\n                    onChange={(e) => setShort(e.target.value)}\r\n                    rows=\"3\">\r\n                </textarea>\r\n                <h3>Полный текст (full)</h3>\r\n                <textarea \r\n                    name=\"full\" \r\n                    value={full}  \r\n                    onChange={(e) => setFull(e.target.value)}\r\n                    rows=\"20\">\r\n                </textarea>\r\n                <Button \r\n                    color='success'\r\n                    disabled={!(short && full && picture)}\r\n                >\r\n                    Создать новость\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, {createNewsThunk})(NewsCreation)","import React, { useEffect, useState } from 'react'\r\nimport { useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem, Button, Input } from 'reactstrap'\r\nimport { deleteNewsThunk, getNewsDetailsThunk, updateNewsDetailsThunk } from '../../../redux/actions/blogActions'\r\n\r\nimport styles from './NewsDetails.module.scss'\r\n\r\nconst NewsDetails = ({\r\n    details, \r\n    getNewsDetailsThunk, \r\n    updateNewsDetailsThunk, \r\n    deleteNewsThunk,\r\n    history, \r\n    match, \r\n    ...props}) => {\r\n    const [short, setShort] = useState(details.short)\r\n    const [full, setFull] = useState(details.full)\r\n    const [picture, setPicture] = useState('')\r\n    console.log(picture);\r\n\r\n    const fileInput = useRef()\r\n\r\n    useEffect(() => {\r\n        getNewsDetailsThunk(match.params.id)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n    useEffect(() => {\r\n        setShort(details.short)\r\n        setFull(details.full)\r\n    }, [details])\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(fileInput.current.files[0]);\r\n        let ok = window.confirm('Вы действительно хотите обновить новость?')\r\n        if (ok) {\r\n            console.log('ok');\r\n            // history.push('/news')\r\n            updateNewsDetailsThunk({\r\n                id: details.id,\r\n                short,\r\n                full,\r\n                picture\r\n            })\r\n        }\r\n    }\r\n\r\n    return details && (\r\n        <div className={styles.NewsDetails}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/news' exact>Новости</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Детали новости</BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <h1>Детали новости</h1>\r\n            <form onSubmit={onSubmit} >\r\n                <h3>Обновить фото</h3>\r\n                <Input \r\n                    type='file' \r\n                    name='picture'\r\n                    innerRef={fileInput}\r\n                    onChange={() => setPicture(fileInput.current.files[0])}\r\n                />\r\n                <h3>Название новости (short)</h3>\r\n                <textarea \r\n                    name=\"short\" \r\n                    value={short}  \r\n                    onChange={(e) => setShort(e.target.value)}\r\n                    rows=\"3\">\r\n                </textarea>\r\n                <h3>Полный текст (full)</h3>\r\n                <textarea \r\n                    name=\"full\" \r\n                    value={full}  \r\n                    onChange={(e) => setFull(e.target.value)}\r\n                    rows=\"20\">\r\n                </textarea>\r\n                <Button \r\n                    color='success'\r\n                >\r\n                    Сохранить\r\n                </Button>\r\n            </form>\r\n            <Button \r\n                color='danger'\r\n                className='mt-3'\r\n                onClick={() => console.log('delete')}\r\n            >\r\n                Удалить новость\r\n            </Button>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        details: state.blog.details,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    getNewsDetailsThunk, \r\n    updateNewsDetailsThunk,\r\n    deleteNewsThunk,\r\n})(NewsDetails)","import myAxios from '../../configs/modified-axios'\r\nimport { makeRes } from '../../utils/utils'\r\nimport { SET_PARTNER_ACQUIRERS, SET_PARTNER_ACQUIRER_DETAILS, PARTNER_ACQUIRERS_LOADING, PARTNER_ACQUIRERS_FAILURE, PARTNER_ACQUIRERS_SUCCESS } from './actionTypes'\r\n\r\n\r\nexport const createPartnerAcquirerThunk = (inputData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n\r\n      const res = await myAxios.post(`/api/admin/add_partner_acquirer`, inputData)\r\n\r\n      console.log(res);\r\n      \r\n      if (res.status === 200 && res.data.result) {\r\n          dispatch(alertPartnerAcquirersSuccess({create: 'Банк мерчанта добавлен успешно'}))\r\n          return makeRes(true, 'Банк мерчанта добавлен успешно')\r\n        } else {\r\n          dispatch(alertPartnerAcquirersFailure({ create: res.data.errors }))\r\n          return makeRes(false, res.data.errors)\r\n        } \r\n    } catch (error) {\r\n      console.log(error.message);\r\n      dispatch(alertPartnerAcquirersFailure({create: [error.message]}))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n} \r\n\r\nexport const getPartnerAcquirersThunk = (filterData={}) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_partners_acquirers`, filterData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(getPartnerAcquirersSuccess( res.data.result['partners_acquirers']))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertPartnerAcquirersFailure({ partnerAcquirers: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertPartnerAcquirersFailure({ partnerAcquirers: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const getPartnerAcquirerDetailsThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_partners_acquirers_by_uuids`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setPartnerAcquirerDetails( res.data.result['partners_acquirers'][0]))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertPartnerAcquirersFailure({ details: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertPartnerAcquirersFailure({ details: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const updatePartnerAcquirerThunk = (partnerData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/update_partner_acquirer`, partnerData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertPartnerAcquirersSuccess({update: 'информация о банке мерчанта успешно обновлена'}))\r\n        return makeRes(true, 'информация о банке мерчанта успешно обновлена')\r\n      } else {\r\n        dispatch(alertPartnerAcquirersFailure({ update: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertPartnerAcquirersFailure({ update: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const deletePartnerAcquirersThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/delete_partners_acquirers`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertPartnerAcquirersSuccess({delete: 'Банк мерчанта успешно удалён'}))\r\n        return makeRes(true, 'Банк мерчанта успешно удалён')\r\n      } else {\r\n        dispatch(alertPartnerAcquirersFailure({ delete: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertPartnerAcquirersFailure({ delete: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const setPartnerAcquirersLoading = (status) => {\r\n  return {\r\n    type: PARTNER_ACQUIRERS_LOADING,\r\n    status\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const getPartnerAcquirersSuccess = (partnerAcquirers) => {\r\n  return {\r\n    type: SET_PARTNER_ACQUIRERS,\r\n    partnerAcquirers\r\n  }\r\n}\r\n\r\nexport const setPartnerAcquirerDetails = (details) => {\r\n  return {\r\n    type: SET_PARTNER_ACQUIRER_DETAILS,\r\n    details\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const alertPartnerAcquirersFailure = (errors) => {\r\n  return {\r\n    type: PARTNER_ACQUIRERS_FAILURE,\r\n    errors\r\n  }\r\n}\r\nexport const alertPartnerAcquirersSuccess = (message) => {\r\n  return {\r\n    type: PARTNER_ACQUIRERS_SUCCESS,\r\n    message\r\n  }\r\n}\r\n\r\n\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { NavLink, useHistory, useParams } from 'react-router-dom'\r\nimport MyTableForm from '../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../hooks/useFormValiation'\r\n\r\nimport styles from './PartnerAcquierers.module.scss'\r\nimport { Breadcrumb, BreadcrumbItem, Table } from 'reactstrap'\r\nimport TableMultiselect from '../../components/UI/MyTable/TableMultiselect/TableMultiselect'\r\nimport { connect } from 'react-redux'\r\nimport { getPartnerAcquirersThunk } from '../../redux/actions/partnerAcquirersActions'\r\nimport MyButton from '../../components/UI/MyButton/MyButton'\r\nimport StatusTD from '../../components/UI/MyTable/StatusTD/StatusTD'\r\nimport { getTrimmedValues } from '../../utils/utils'\r\nimport { activeOptions, cardBrandsOptions } from '../../utils/constants'\r\nimport { getAcquirersThunk } from '../../redux/actions/acquirerActions'\r\nimport SuccessAlert from '../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../hooks/useAlert'\r\nimport ClickableTH from '../../components/UI/MyTable/ClickableTH/ClickableTH'\r\n\r\nconst PartnerAcquierers = ({\r\n    className, getPartnerAcquirersThunk, partnerAcquirers=[],\r\n    acquirers, getAcquirersThunk,\r\n    ...props}) => {\r\n\r\n    const {partnerId} = useParams()\r\n    const history = useHistory()\r\n\r\n    const activeRef = useRef()\r\n\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n        failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n    \r\n\r\n    const {values, handleChange, errors, setValues, isValid } = useFormAndValidation()\r\n   \r\n    const onSingleSelect = (selectedList, {jsonKey, value}) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [jsonKey]: value\r\n        })\r\n    }\r\n    // const onBankSelect = (selectedList, selectedItem) => {\r\n    //     console.log(selectedList);\r\n    //     setValues({\r\n    //         ...values,\r\n    //         acquirer_uuid: selectedItem.uuid\r\n    //     })\r\n    // }\r\n    const onMultiSelect = (selectedList, selectedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [selectedItem.jsonKey]: selectedList.map(i => i.value)\r\n        })\r\n    }\r\n\r\n    const [order, setOrder] = useState(true)\r\n\r\n    const changeOrder = (field) => {\r\n      setOrder(!order)\r\n      let filterData = getTrimmedValues(values)\r\n\r\n      if (filterData.priority_to) {\r\n          filterData.priority_to = Number(filterData.priority_to)\r\n      }\r\n      if (filterData.priority_from) {\r\n          filterData.priority_from = Number(filterData.priority_from)\r\n      }\r\n\r\n      if (filterData.card_brands) {\r\n          if (filterData.card_brands.length === 0) {\r\n              const {card_brands, ...rest} = filterData\r\n              filterData = rest\r\n          }\r\n      }\r\n  \r\n      const sortedData = {\r\n          ...filterData,\r\n          \"sort_by\": [\r\n              {\r\n                field,\r\n                order: order? 'asc' : 'desc'\r\n              }\r\n          ]\r\n      }\r\n      \r\n      getPartnerAcquirersThunk({\r\n        ...sortedData,\r\n        partner_uuid: partnerId\r\n     })\r\n     .then(checkRes(false))\r\n  \r\n  }\r\n\r\n    const onRemove = (selectedList, removedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [removedItem.jsonKey]: selectedList.map(i => i.value)\r\n        })\r\n    }\r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        let filterData = getTrimmedValues(values)\r\n\r\n        if (filterData.priority_to) {\r\n            filterData.priority_to = Number(filterData.priority_to)\r\n        }\r\n        if (filterData.priority_from) {\r\n            filterData.priority_from = Number(filterData.priority_from)\r\n        }\r\n\r\n        if (filterData.card_brands) {\r\n            if (filterData.card_brands.length === 0) {\r\n                const {card_brands, ...rest} = filterData\r\n                filterData = rest\r\n            }\r\n        }\r\n\r\n        getPartnerAcquirersThunk({\r\n            ...filterData,\r\n            partner_uuid: partnerId\r\n        })\r\n        .then(checkRes(false))\r\n\r\n        console.log(filterData);\r\n      }\r\n    const cls = [\r\n        styles.PartnerAcquierers,\r\n        className\r\n    ]\r\n\r\n\r\n    useEffect(() => {\r\n        getAcquirersThunk()\r\n        .then(checkRes(false))\r\n        .catch((err) => console.log(err))\r\n    // eslint-disable-next-line\r\n      }, [])\r\n\r\n    useEffect(() => {\r\n        getPartnerAcquirersThunk({\r\n            partner_uuid: partnerId\r\n        })\r\n        .then(checkRes(false))\r\n        .catch((err) => console.log(err))\r\n        // eslint-disable-next-line \r\n      }, [])\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список мерчантов</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners/${partnerId}`} exact>Детали мерчанта</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Список банков мерчанта</BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <center><h1>Список банков мерчанта</h1></center>\r\n\r\n            <MyTableForm\r\n                 onSubmit={onSubmit}\r\n                isValid={isValid}\r\n                buttonText='Найти'\r\n            >\r\n\r\n                <TableMultiselect\r\n                    label='Aктивен'\r\n                    options={activeOptions}\r\n                    displayValue=\"name\"\r\n                    onSelect={onSingleSelect}\r\n                    onRemove={onRemove}\r\n                    placeholder='Выберите'\r\n                    singleSelect\r\n                    multiRef={activeRef}\r\n                />\r\n                <TableMultiselect\r\n                    label='Бренды карт'\r\n                    options={cardBrandsOptions}\r\n                    displayValue=\"name\"\r\n                    onSelect={onMultiSelect}\r\n                    onRemove={onRemove}\r\n                    placeholder='Выберите'\r\n                />\r\n                 <TableInput\r\n                        type='number'\r\n                        name='priority_from'\r\n                        label='Приоритет от'\r\n                        onChange={handleChange}\r\n                        value={values.priority_from}\r\n                        errorText={errors.priority_from}\r\n                        style={{\r\n                            width: `140px`\r\n                        }}\r\n                        min={1}\r\n                        max={100}\r\n                    />\r\n                 <TableInput\r\n                        type='number'\r\n                        name='priority_to'\r\n                        label='Приоритет до'\r\n                        onChange={handleChange}\r\n                        value={values.priority_to}\r\n                        errorText={errors.priority_to}\r\n                        style={{\r\n                            width: `140px`\r\n                        }}\r\n                        min={1}\r\n                        max={100}\r\n                    />\r\n\r\n            </MyTableForm>\r\n\r\n            <Table hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Банк</th>\r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('active')}\r\n                            label='Cтатус'\r\n                        />\r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('priority')}\r\n                            label='Приоритет'\r\n                        />\r\n                        {/* <th>Приоритет</th> */}\r\n                        <th>Карты</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                   \r\n                    {\r\n                        partnerAcquirers && partnerAcquirers.map((item) => {\r\n                            const bank = acquirers?.find((bank) => {\r\n                                    return bank.uuid === item.acquirer_uuid\r\n                                })\r\n\r\n                            return (\r\n                                <tr \r\n                                    key={item.uuid} \r\n                                    onClick={() => history.push(`/partners-acquirers/${partnerId}/${item.uuid}`)}\r\n                                >\r\n                                    <td>{bank?.name}</td>\r\n                                    <StatusTD\r\n                                        active={item.active}\r\n                                    />\r\n                                    <td>{item.priority}</td>\r\n                                    <td>{item.card_brands.join(' ').toUpperCase()}</td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                    \r\n                </tbody>\r\n            </Table>\r\n            {/* <Link to={`/add-partner-acquirer/${partnerId}`} >добавить банк</Link> */}\r\n\r\n            <MyButton\r\n                color={'primary'}\r\n                onClick={() => history.push(`/add-partner-acquirer/${partnerId}`)}\r\n                buttonText='добавить банк'\r\n            />\r\n\r\n                <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        partnerAcquirers: state.partnerAcquirers.partnerAcquirers,\r\n        acquirers: state.acquirers.acquirers,\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    getPartnerAcquirersThunk, getAcquirersThunk,\r\n})(PartnerAcquierers)","import React, { useState, useEffect } from 'react'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport TableMultiselect from '../../../components/UI/MyTable/TableMultiselect/TableMultiselect'\r\n\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport { getAcquirersThunk } from '../../../redux/actions/acquirerActions'\r\nimport { activeOptions, cardBrandsOptions, } from '../../../utils/constants'\r\nimport { createPartnerAcquirerThunk } from '../../../redux/actions/partnerAcquirersActions'\r\n\r\n\r\nimport styles from './PartnerAcquierersAddition.module.scss'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\n\r\nconst PartnerAcquierersAddition = ({\r\n    className, acquirers, getAcquirersThunk, createPartnerAcquirerThunk,\r\n\r\n    ...props}) => {\r\n\r\n    const { partnerId } = useParams()\r\n    const history = useHistory()\r\n\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n        failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n    \r\n\r\n    const {values, handleChange, errors, isValid, setValues } = useFormAndValidation()\r\n\r\n    const [bankOptions, setBankOptions] = useState([{name: 'Загружаются данные...', avtive: true}])\r\n\r\n    const onSingleSelect = (selectedList, {jsonKey, value}) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [jsonKey]: value\r\n        })\r\n    }\r\n    const onBankSelect = (selectedList, selectedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            acquirer_uuid: selectedItem.uuid\r\n        })\r\n    }\r\n    const onMultiSelect = (selectedList, selectedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [selectedItem.jsonKey]: selectedList.map(i => i.value)\r\n        })\r\n    }\r\n\r\n    const onRemove = (selectedList, removedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [removedItem.jsonKey]: selectedList.map(i => i.value)\r\n        })\r\n    }\r\n\r\n   \r\n    \r\n    useEffect(() => {\r\n        getAcquirersThunk()\r\n        .then(checkRes(false))\r\n        // eslint-disable-next-line\r\n    }, [])\r\n    useEffect(() => {\r\n        if (acquirers) {\r\n            setBankOptions(acquirers)\r\n        }\r\n    }, [acquirers])\r\n\r\n    // useEffect(() => {\r\n    //     setIsValid(false)\r\n    //     // eslint-disable-next-line\r\n    // }, [])\r\n\r\n    const cls = [\r\n        styles.PartnerAcquierersAddition,\r\n        className\r\n    ]\r\n    \r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        const partnerBankData = {\r\n            ...values,\r\n            partner_uuid: partnerId\r\n        }\r\n        if (partnerBankData.priority) {\r\n            partnerBankData.priority = Number(partnerBankData.priority)\r\n        }\r\n        console.log(partnerBankData);\r\n\r\n        createPartnerAcquirerThunk(partnerBankData)\r\n        .then((res) => {\r\n            checkRes()(res)\r\n            return res\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  setTimeout(() => {\r\n                    history.goBack()\r\n                  }, 1000)\r\n              }\r\n          })\r\n          .then(() => console.log('createPartnerAcquirerThunk'))\r\n          .catch((err) => console.log(err))\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список мерчантов</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners/${partnerId}`} exact>Детали мерчанта</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners-acquirers/${partnerId}`} exact>Список банков мерчанта</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Детали банка</BreadcrumbItem>\r\n        </Breadcrumb>\r\n             <center><h1>Добавление банка мерчанта</h1></center>\r\n            <MyTableForm\r\n                onSubmit={onSubmit}\r\n                isValid={isValid}\r\n            >\r\n                    <TableMultiselect\r\n                        label='Банк'\r\n                        options={bankOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onBankSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                    />\r\n                     <TableMultiselect\r\n                        label='Aктивен'\r\n                        options={activeOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onSingleSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                    />\r\n                    <TableMultiselect\r\n                        label='Карточные бренды'\r\n                        options={cardBrandsOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onMultiSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                    />\r\n                    <TableInput\r\n                        type='number'\r\n                        name='priority'\r\n                        label='Приоритет'\r\n                        onChange={handleChange}\r\n                        value={values.priority || 10}\r\n                        errorText={errors.priority}\r\n                        min={1}\r\n                        max={100}\r\n                    />\r\n                    \r\n            </MyTableForm>\r\n\r\n            \r\n            <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        acquirers: state.acquirers.acquirers,\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n     getAcquirersThunk, createPartnerAcquirerThunk, \r\n    })(PartnerAcquierersAddition)","import React, { useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport { deletePartnerAcquirersThunk, getPartnerAcquirerDetailsThunk, setPartnerAcquirerDetails } from '../../../redux/actions/partnerAcquirersActions'\r\n\r\n\r\nimport styles from './PartnerAcquierersDetails.module.scss'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport DetailsTableRow from '../../../components/UI/MyTable/DetailsTableRow/DetailsTableRow'\r\nimport MyButton from '../../../components/UI/MyButton/MyButton'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport FlexBlock from '../../../components/Blocks/FlexBlock/FlexBlock'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\n\r\nconst PartnerAcquierersDetails = ({\r\n  className, details, getPartnerAcquirerDetailsThunk, deletePartnerAcquirersThunk,\r\n  setPartnerAcquirerDetails, \r\n  ...props}) => {\r\n\r\n  const {partnerId, id} = useParams()\r\n  const history = useHistory()\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    getPartnerAcquirerDetailsThunk([id])\r\n    .then(checkRes(false))\r\n\r\n    return () => {\r\n      setPartnerAcquirerDetails({\r\n        uuid: '',\r\n        acquirer_uuid: '',\r\n        active: '',\r\n        card_brands: [],\r\n        partner_uuid: '',\r\n        priority: '',\r\n        })\r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n  const onDelete = () => {\r\n    const confirmed = window.confirm(\"Вы точно хотите удалить?\");\r\n    if (confirmed) {\r\n      deletePartnerAcquirersThunk([id])\r\n      .then((res) => {\r\n        checkRes()(res)\r\n        return res\r\n      })\r\n      .then(res => {\r\n          if (res.ok) {\r\n              setTimeout(() => {\r\n                history.goBack()\r\n              }, 1000)\r\n          }\r\n      })\r\n      .then(() => {\r\n        console.log('deletePartnerAcquirersThunk');\r\n      })\r\n      .catch((err) => console.log(err))\r\n    }\r\n  }\r\n\r\n    const cls = [\r\n        styles.PartnerAcquierersDetails,\r\n        className\r\n    ]\r\n    if (!details) {\r\n      return <h1>нет такого банка мерчанта</h1>\r\n    }\r\n\r\n    if (!details.uuid) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список мерчантов</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners/${partnerId}`} exact>Детали мерчанта</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners-acquirers/${partnerId}`} exact>Список банков мерчанта</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Детали банка</BreadcrumbItem>\r\n        </Breadcrumb>\r\n             <center><h1>Информация о банке мерчанта</h1></center>\r\n            <MyTable>\r\n              <DetailsTableRow\r\n                  label='uuid'\r\n                  data={details.uuid}\r\n              />\r\n              <DetailsTableRow\r\n                  label='Банк'\r\n                  data={details.acquirer_uuid}\r\n              />\r\n              <DetailsTableRow\r\n                  label='Статус'\r\n                  data={(details.active && 'активен') || 'неактивен'}\r\n              />\r\n              <DetailsTableRow\r\n                  label='Приоритет'\r\n                  data={details.priority}\r\n              />\r\n              <DetailsTableRow\r\n                  label='Бренды карт'\r\n                  data={details.card_brands.join(' ').toUpperCase()}\r\n              />\r\n\r\n        </MyTable>\r\n\r\n        <FlexBlock>\r\n              <MyButton\r\n                    color={'secondary'}\r\n                    onClick={() => history.push(`/partners-acquirers/${partnerId}/${id}/update`)}\r\n                    buttonText='редактировать'\r\n                />\r\n                <MyButton\r\n                    color={'danger'}\r\n                    onClick={onDelete}\r\n                    buttonText='удалить'\r\n                />\r\n        </FlexBlock>\r\n\r\n                  <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    details: state.partnerAcquirers.details,\r\n  }\r\n  }\r\n  \r\n\r\nexport default connect(mapStateToProps, {\r\n  getPartnerAcquirerDetailsThunk, deletePartnerAcquirersThunk, setPartnerAcquirerDetails\r\n})(PartnerAcquierersDetails)","import React, { useState, useEffect } from 'react'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport TableMultiselect from '../../../components/UI/MyTable/TableMultiselect/TableMultiselect'\r\n\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport { getAcquirersThunk } from '../../../redux/actions/acquirerActions'\r\nimport { activeOptions, cardBrandsOptions, } from '../../../utils/constants'\r\nimport { getPartnerAcquirerDetailsThunk, setPartnerAcquirerDetails, updatePartnerAcquirerThunk } from '../../../redux/actions/partnerAcquirersActions'\r\n\r\n\r\nimport styles from './PartnerAcquierersUpdate.module.scss'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\n\r\nconst PartnerAcquierersUpdate = ({\r\n  className, acquirers, getAcquirersThunk, getPartnerAcquirerDetailsThunk,\r\n  details, updatePartnerAcquirerThunk, setPartnerAcquirerDetails, \r\n  ...props}) => {\r\n\r\n  const { partnerId, id } = useParams()\r\n  const history = useHistory()\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n\r\n\r\n  const {values, handleChange, errors, isValid, setValues } = useFormAndValidation()\r\n  const [bankOptions, setBankOptions] = useState([{name: 'Загружаются данные...', avtive: true}])\r\n  const [bankPreselect, setBankPreselect] = useState([{name: 'загружается...'}])\r\n  const [activePreselect, setActivePreselect] = useState([{name: 'загружается...'}])\r\n  const [cardBrandsPreselect, setCardBrandsPreselect] = useState([{name: 'загружается...'}])\r\n \r\n  const onSingleSelect = (selectedList, {jsonKey, value}) => {\r\n    console.log(selectedList);\r\n    setValues({\r\n            ...values,\r\n            [jsonKey]: value\r\n        })\r\n    }\r\n    const onBankSelect = (selectedList, selectedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            acquirer_uuid: selectedItem.uuid\r\n        })\r\n    }\r\n    const onMultiSelect = (selectedList, selectedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [selectedItem.jsonKey]: selectedList.map(i => i.value)\r\n        })\r\n    }\r\n\r\n    const onRemove = (selectedList, removedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [removedItem.jsonKey]: selectedList.map(i => i.value)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n\r\n      getPartnerAcquirerDetailsThunk([id])\r\n  \r\n      return () => {\r\n        setPartnerAcquirerDetails({\r\n          uuid: '',\r\n          acquirer_uuid: '',\r\n          active: '',\r\n          card_brands: [],\r\n          partner_uuid: '',\r\n          priority: '',\r\n          })\r\n      }\r\n      // eslint-disable-next-line \r\n    }, [])\r\n    useEffect(() => {\r\n      getAcquirersThunk()\r\n      // eslint-disable-next-line\r\n  }, [])\r\n  useEffect(() => {\r\n      if (acquirers) {\r\n          setBankOptions(acquirers)\r\n      }\r\n  }, [acquirers])\r\n\r\n  useEffect(() => {\r\n    setValues(details)\r\n    // eslint-disable-next-line\r\n  }, [details])\r\n\r\n  useEffect(() => {\r\n    if (details && acquirers) {\r\n  \r\n      const preselectedBank = [...acquirers].find(i => i.uuid === details.acquirer_uuid)\r\n      if (preselectedBank?.name) {\r\n        setBankPreselect([preselectedBank])\r\n      }\r\n  \r\n      const isActive = activeOptions.find(i => i.value === details.active)\r\n  \r\n      if (isActive) {\r\n        setActivePreselect([isActive])\r\n      }\r\n\r\n      const preselectedCardBrands = cardBrandsOptions.filter(i => {\r\n        return details.card_brands.includes(i.value)\r\n      })\r\n\r\n      if (preselectedCardBrands.length) {\r\n        setCardBrandsPreselect(preselectedCardBrands)\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [details, acquirers])\r\n\r\n    const cls = [\r\n        styles.PartnerAcquierersUpdate,\r\n        className\r\n    ]\r\n\r\n    const onSubmit = (evt) => {\r\n      evt.preventDefault()\r\n      const partnerBankData = {\r\n          ...values,\r\n          // partner_uuid: partnerId\r\n      }\r\n      if (partnerBankData.priority) {\r\n          partnerBankData.priority = Number(partnerBankData.priority)\r\n      }\r\n      console.log(partnerBankData);\r\n\r\n      updatePartnerAcquirerThunk(partnerBankData)\r\n      .then(checkRes())\r\n      .then(res => {\r\n        if (res.ok) {\r\n            setTimeout(() => {\r\n              history.goBack()\r\n            }, 1000)\r\n        }\r\n    })\r\n      .then(() => console.log('updatePartnerAcquirerThunk'))\r\n\r\n  }\r\n\r\n  if (!details) {\r\n    return <h1>нет такого банка мерчанта</h1>\r\n  }\r\n\r\n  if (!details.uuid) {\r\n      return <Spinner/>\r\n  }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список мерчантов</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners/${partnerId}`} exact>Детали мерчанта</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners-acquirers/${partnerId}`} exact>Список банков мерчанта</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners-acquirers/${partnerId}/${id}`} exact>Детали банка</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Редактирование банка</BreadcrumbItem>\r\n        </Breadcrumb>\r\n              <center><h1>Редактирование банка мерчанта</h1></center>\r\n            <MyTableForm\r\n                onSubmit={onSubmit}\r\n                isValid={isValid}\r\n                buttonText='Обновить'\r\n            >\r\n                    <TableMultiselect\r\n                        label='Банк'\r\n                        options={bankOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onBankSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                        selectedValues={bankPreselect}\r\n                    />\r\n                     <TableMultiselect\r\n                        label='Aктивен'\r\n                        options={activeOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onSingleSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                        selectedValues={activePreselect}\r\n                    />\r\n                    <TableMultiselect\r\n                        label='Карточные бренды'\r\n                        options={cardBrandsOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onMultiSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        selectedValues={cardBrandsPreselect}\r\n                        \r\n                    />\r\n                    <TableInput\r\n                        type='number'\r\n                        name='priority'\r\n                        label='Приоритет'\r\n                        onChange={handleChange}\r\n                        value={values.priority || 10}\r\n                        errorText={errors.priority}\r\n                        min={1}\r\n                        max={100}\r\n                    />\r\n                    \r\n            </MyTableForm>\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      acquirers: state.acquirers.acquirers,\r\n      details: state.partnerAcquirers.details,\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n  getAcquirersThunk, getPartnerAcquirerDetailsThunk, updatePartnerAcquirerThunk,\r\n  setPartnerAcquirerDetails,\r\n})(PartnerAcquierersUpdate)","import myAxios from '../../configs/modified-axios'\r\nimport { makeRes } from '../../utils/utils'\r\nimport { SET_PARTNERS, SET_PARTNER_DETAILS, PARTNERS_LOADING, PARTNERS_FAILURE, PARTNERS_SUCCESS } from './actionTypes'\r\n\r\n\r\nexport const createPartnerThunk = (inputData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n\r\n      const res = await myAxios.post(`/api/admin/add_partner`, inputData)\r\n\r\n      console.log(res);\r\n      \r\n      if (res.status === 200 && res.data.result) {\r\n          dispatch(alertPartnersSuccess({create: 'Партрнёр добавлен успешно'}))\r\n          return makeRes(true, 'Партрнёр добавлен успешно', res.data.result)\r\n        } else {\r\n          dispatch(alertPartnersFailure({ create: res.data.errors }))\r\n          return makeRes(false, res.data.errors)\r\n        } \r\n    } catch (error) {\r\n      console.log(error.message);\r\n      dispatch(alertPartnersFailure({create: [error.message]}))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n} \r\n\r\n\r\n\r\nexport const getPartnersThunk = (filterData={}) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_partners`, filterData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(getPartnersSuccess( res.data.result.partners))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertPartnersFailure({ partners: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertPartnersFailure({ partners: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const getPartnerDetailsThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_partners_by_uuids`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setPartnerDetails( res.data.result.partners[0]))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertPartnersFailure({ details: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertPartnersFailure({ details: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const updatePartnerThunk = (partnerData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/update_partner`, partnerData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertPartnersSuccess({update: 'информация о мерчанте успешно обновлена'}))\r\n        return makeRes(true, 'информация о мерчанте успешно обновлена')\r\n      } else {\r\n        dispatch(alertPartnersFailure({ update: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertPartnersFailure({ update: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const deletePartnersThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/delete_partners`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertPartnersSuccess({delete: 'мерчант успешно удалён'}))\r\n        return makeRes(true, 'мерчант успешно удалён')\r\n      } else {\r\n        dispatch(alertPartnersFailure({ delete: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertPartnersFailure({ delete: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const setPartnersLoading = (status) => {\r\n  return {\r\n    type: PARTNERS_LOADING,\r\n    status\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const getPartnersSuccess = (partners) => {\r\n  return {\r\n    type: SET_PARTNERS,\r\n    partners\r\n  }\r\n}\r\n\r\nexport const setPartnerDetails = (details) => {\r\n  return {\r\n    type: SET_PARTNER_DETAILS,\r\n    details\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const alertPartnersFailure = (errors) => {\r\n  return {\r\n    type: PARTNERS_FAILURE,\r\n    errors\r\n  }\r\n}\r\nexport const alertPartnersSuccess = (message) => {\r\n  return {\r\n    type: PARTNERS_SUCCESS,\r\n    message\r\n  }\r\n}\r\n\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { Breadcrumb, BreadcrumbItem, Button } from 'reactstrap'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport styles from './PartnerAddition.module.scss'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { connect } from 'react-redux'\r\nimport { createPartnerThunk } from '../../../redux/actions/partnerActions'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\n\r\n\r\nconst PartnerAddition = ({className, createPartnerThunk, ...props}) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const {values, handleChange, errors, isValid, resetForm, setIsValid } = useFormAndValidation()\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n        failureAlertVisible, setFailureAlertVisible, failureMessage,\r\n        checkRes} = useAlert()\r\n   \r\n        const cls = [\r\n        styles.PartnerAddition,\r\n        className\r\n    ]\r\n\r\n    useEffect(() => {\r\n        setIsValid(false)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        console.log(values);\r\n        createPartnerThunk(values)\r\n        .then((res) => {\r\n            checkRes()(res)\r\n            if (res.ok) {\r\n                resetForm()\r\n                history.push(`/partners/${res.data?.uuid}`)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n          <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Мерчанты</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Добавление мерчанта </BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <h1>Добавить мерчанта</h1>\r\n            <form onSubmit={onSubmit} >\r\n                <MyTable>\r\n                    <TableInput\r\n                         name='inn'\r\n                        label='ИНН'\r\n                        required={true}\r\n                        onChange={handleChange}\r\n                        value={values.inn}\r\n                        errorText={errors.inn}\r\n                        minLength={10}\r\n                        maxLength={12}\r\n                    />\r\n                    <TableInput\r\n                         name='name'\r\n                         label='Наименование'\r\n                        required={true}\r\n                        onChange={handleChange}\r\n                        value={values.name}\r\n                        errorText={errors.name}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    {/* <TableInput\r\n                         name='uuid'\r\n                        label='uuid'\r\n                        onChange={handleChange}\r\n                        value={values.uuid}\r\n                    /> */}\r\n                    \r\n                </MyTable>\r\n                <Button \r\n                    color={isValid? \"primary\": 'secondary'}\r\n                    disabled={!isValid}\r\n                >\r\n                    добавить\r\n                </Button>\r\n            </form>\r\n\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n\r\n//     }\r\n// }\r\n\r\n\r\n\r\nexport default connect(null, { createPartnerThunk })(PartnerAddition)","import myAxios from '../../configs/modified-axios'\r\nimport { makeRes } from '../../utils/utils';\r\nimport { SHOPS_FAILURE, SHOPS_LOADING, SHOPS_SUCCESS, SET_SHOPS, SET_SHOP_DETAILS } from './actionTypes';\r\n\r\n\r\nexport const createShopThunk = (inputData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n\r\n      const res = await myAxios.post(`/api/admin/add_store`, inputData)\r\n\r\n      console.log(res);\r\n      \r\n      if (res.status === 200 && res.data.result) {\r\n          dispatch(alertShopsSuccess({create: 'Магазин добавлен успешно'}))\r\n          return makeRes(true, 'Магазин добавлен успешно')\r\n        } else {\r\n          dispatch(alertShopsFailure({ create: res.data.errors }))\r\n          return makeRes(false, res.data.errors)\r\n        } \r\n    } catch (error) {\r\n      console.log(error.message);\r\n      dispatch(alertShopsFailure({create: [error.message]}))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n} \r\n\r\nexport const getShopsThunk = (filterData={}) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_stores`, filterData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(getShopsSuccess( res.data.result.stores))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertShopsFailure({ stores: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertShopsFailure({ stores: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    \r\n    }\r\n  }\r\n}\r\n\r\nexport const getShopDetailsThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_stores_by_uuids`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setShopDetails( res.data.result.stores[0]))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertShopsFailure({ details: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertShopsFailure({ details: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateShopThunk = (shopData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/update_store`, shopData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertShopsSuccess({update: 'информация о магазине успешно обновлена'}))\r\n        return makeRes(true, 'информация о магазине успешно обновлена')\r\n      } else {\r\n        dispatch(alertShopsFailure({ update: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertShopsFailure({ update: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const deleteShopsThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/delete_stores`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertShopsSuccess({delete: 'Магазин успешно удалён'}))\r\n        return makeRes(true, 'Магазин успешно удалён')\r\n      } else {\r\n        dispatch(alertShopsFailure({ delete: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertShopsFailure({ delete: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const setShopsLoading = (status) => {\r\n  return {\r\n    type: SHOPS_LOADING,\r\n    status\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const getShopsSuccess = (shops) => {\r\n  return {\r\n    type: SET_SHOPS,\r\n    shops\r\n  }\r\n}\r\n\r\nexport const setShopDetails = (details) => {\r\n  return {\r\n    type: SET_SHOP_DETAILS,\r\n    details\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const alertShopsFailure = (errors) => {\r\n  return {\r\n    type: SHOPS_FAILURE,\r\n    errors\r\n  }\r\n}\r\nexport const alertShopsSuccess = (message) => {\r\n  return {\r\n    type: SHOPS_SUCCESS,\r\n    message\r\n  }\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { Breadcrumb, BreadcrumbItem, Table } from 'reactstrap'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport { deletePartnersThunk, getPartnerDetailsThunk, setPartnerDetails } from '../../../redux/actions/partnerActions'\r\n\r\nimport styles from './PartnerDetails.module.scss'\r\nimport { getShopsThunk } from '../../../redux/actions/shopActions'\r\nimport DetailsTableRow from '../../../components/UI/MyTable/DetailsTableRow/DetailsTableRow'\r\nimport MyButton from '../../../components/UI/MyButton/MyButton'\r\nimport { NavLink } from 'react-router-dom'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport FlexBlock from '../../../components/Blocks/FlexBlock/FlexBlock'\r\nimport { getTrimmedValues } from '../../../utils/utils'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport ClickableTH from '../../../components/UI/MyTable/ClickableTH/ClickableTH'\r\nimport TableNotFound from '../../../components/UI/MyTable/TableNotFound/TableNotFound'\r\n\r\n\r\n\r\nconst PartnerDetails = ({\r\n    className, details, getPartnerDetailsThunk, setPartnerDetails, deletePartnersThunk,\r\n    getShopsThunk, shops,\r\n     ...props}) => {\r\n\r\n  const {id} = useParams()\r\n  const history = useHistory()\r\n\r\n  const {values, handleChange, errors, isValid, } = useFormAndValidation()\r\n\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n\r\n  const [order, setOrder] = useState(true)\r\n  const changeOrder = (field) => {\r\n    setOrder(!order)\r\n\r\n    const filterData = getTrimmedValues(values)\r\n\r\n    const sortedData = {\r\n        ...filterData,\r\n        \"sort_by\": [\r\n            {\r\n              field,\r\n              order: order? 'asc' : 'desc'\r\n            }\r\n        ]\r\n    }\r\n    \r\n    getShopsThunk({\r\n        ...sortedData,\r\n        partner_uuid: id\r\n    })\r\n    .then(checkRes(false))\r\n    .catch((err) => console.log(err))\r\n}\r\n\r\n  const deletePartner = () => {\r\n    const confirmed = window.confirm(\"Вы точно хотите удалить?\");\r\n    if (confirmed) {\r\n        deletePartnersThunk([id])\r\n        .then((res) => {\r\n            checkRes()(res)\r\n            return res\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                setTimeout(() => {\r\n                    history.goBack()\r\n                }, 3000)\r\n            }\r\n        })\r\n        .catch((err) => console.log(err))\r\n    }\r\n   \r\n  }\r\n\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault()\r\n\r\n    const filterData = getTrimmedValues(values)\r\n\r\n    if (filterData.limit) {\r\n        filterData.limit = Number(filterData.limit)\r\n    }\r\n\r\n    getShopsThunk({\r\n        ...filterData,\r\n        partner_uuid: id\r\n    })\r\n    .then(checkRes(false))\r\n    .catch((err) => console.log(err))\r\n\r\n    console.log(filterData);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPartnerDetailsThunk([id])\r\n    .then(checkRes(false))\r\n    .catch((err) => console.log(err))\r\n    \r\n    return () => {\r\n        setPartnerDetails({\r\n            uuid: '',\r\n            inn: '',\r\n            name: ''\r\n        })\r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getShopsThunk({\r\n        partner_uuid: id\r\n    })\r\n    .then(checkRes(false))\r\n    .catch((err) => console.log(err))\r\n    \r\n    return () => {\r\n      \r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n    const cls = [\r\n        styles.PartnerDetails,\r\n        className\r\n    ]\r\n    if (!details) {\r\n        return <h1>нет такого мерчанта</h1>\r\n    }\r\n\r\n    if (!details.uuid) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n        <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список мерчантов</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Детали мерчанта &nbsp; <strong>{details.name}</strong></BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <center><h1>Информация о мерчанте</h1></center>\r\n            <MyTable>\r\n                <DetailsTableRow\r\n                    label='uuid'\r\n                    data={details.uuid}\r\n                />\r\n                <DetailsTableRow\r\n                    label='ИНН'\r\n                    data={details.inn}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Наименование'\r\n                    data={details.name}\r\n                />\r\n             \r\n            </MyTable>\r\n\r\n            <FlexBlock>\r\n                <MyButton\r\n                    color={'secondary'}\r\n                    onClick={() => history.push(`/partners/update/${id}`)}\r\n                    buttonText='редактировать'\r\n                />\r\n                <MyButton\r\n                    color={'danger'}\r\n                    onClick={deletePartner}\r\n                    buttonText='удалить мерчанта'\r\n                />\r\n            </FlexBlock>\r\n\r\n            \r\n            {/* <MyButton\r\n                color={'success'}\r\n                onClick={() => history.push(`/partners-acquirers/${id}`)}\r\n                buttonText='банки мерчанта'\r\n            /> */}\r\n         \r\n\r\n            <center><h2>Список магазинов</h2></center>\r\n            <MyTableForm\r\n                onSubmit={onSubmit}\r\n                isValid={isValid}\r\n                buttonText='Найти'\r\n            >\r\n              \r\n                <TableInput\r\n                    name='name'\r\n                    label='Наименование'\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    errorText={errors.name}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                />\r\n                <TableInput\r\n                    name='uuid'\r\n                    label='uuid'\r\n                    onChange={handleChange}\r\n                    value={values.uuid}\r\n                    errorText={errors.uuid}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                />\r\n                <TableInput\r\n                        type='number'\r\n                        name='limit'\r\n                        label='Кол-во записей'\r\n                        onChange={handleChange}\r\n                        value={values.limit}\r\n                        errorText={errors.limit}\r\n                        style={{\r\n                            width: `140px`\r\n                        }}\r\n                        min={1}\r\n                        max={100}\r\n                    />\r\n            </MyTableForm>\r\n            {\r\n                shops && (\r\n\r\n                    <Table hover>\r\n\r\n                        <thead>\r\n                            <tr>\r\n                                <th>№</th>\r\n                                <ClickableTH\r\n                                    onClick={() => changeOrder('name')}\r\n                                    label='Наименование'\r\n                                />\r\n                                <th>uuid</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            { shops.length?\r\n                                shops.map((shop, i) => {\r\n                                    return (\r\n                                        <tr \r\n                                            key={shop.uuid} \r\n                                            onClick={() => history.push(`/shops/${shop.uuid}`)}\r\n                                        >\r\n                                            <td>{i+1}</td>\r\n                                            <td>{shop.name}</td>\r\n                                            <td>{shop.uuid}</td>\r\n                                        </tr>\r\n                                    )\r\n                                }) :\r\n                                (\r\n                                    <TableNotFound/>\r\n                                )\r\n                            }\r\n\r\n                        </tbody>\r\n\r\n                    </Table>\r\n\r\n                )\r\n            }\r\n\r\n           \r\n            <MyButton\r\n                color={'primary'}\r\n                onClick={() => history.push(`/add-shop/${id}`)}\r\n                buttonText='добавить магазин'\r\n            />\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        details: state.partners.details,\r\n        shops: state.shops.shops,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps, {\r\n        getPartnerDetailsThunk, setPartnerDetails, deletePartnersThunk,\r\n        getShopsThunk,\r\n    }\r\n    )(PartnerDetails)","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Table, Pagination, PaginationItem, PaginationLink, Container  } from 'reactstrap'\r\nimport { getPartnersThunk } from '../../redux/actions/partnerActions'\r\nimport MyTableForm from '../../components/UI/MyTable/MyTableForm/MyTableForm'\r\n\r\nimport styles from './Partners.module.scss'\r\nimport TableInput from '../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../hooks/useFormValiation'\r\nimport { getTrimmedValues } from '../../utils/utils'\r\nimport MyButton from '../../components/UI/MyButton/MyButton'\r\nimport ClickableTH from '../../components/UI/MyTable/ClickableTH/ClickableTH'\r\nimport ReactPaginate from 'react-paginate'\r\nimport SuccessAlert from '../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../hooks/useAlert'\r\n\r\n\r\nconst Partners = ({className, getPartnersThunk, partners=[], ...props}) => {\r\n\r\n  const {values, handleChange, errors, isValid, setValues } = useFormAndValidation()\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n\r\n  const [order, setOrder] = useState(true)\r\n  const [limit, setLimit] = useState(3)\r\n  const [offset, setOffset] = useState(0)\r\n//   const [sortField, setSortField] = useState('')\r\n\r\n  const changeOrder = (field) => {\r\n    setOrder(!order)\r\n    // setSortField(field)\r\n    setValues({\r\n        ...values,\r\n        sort_by:  [\r\n            {\r\n              field,\r\n              order: order? 'asc' : 'desc'\r\n            }\r\n        ]\r\n    })\r\n\r\n    const filterData = getTrimmedValues(values)\r\n\r\n    filterData.sort_by = [\r\n        {\r\n          field,\r\n          order: order? 'asc' : 'desc'\r\n        }\r\n    ]\r\n    const sortedData = {\r\n        ...filterData,\r\n    }\r\n    \r\n    getPartnersThunk(sortedData)\r\n    .then(checkRes(false))\r\n    .catch((err) => console.log(err))\r\n\r\n}\r\n\r\n    const onNextClick = (evt) => {\r\n        evt.preventDefault()\r\n        const filterData = getTrimmedValues(values)\r\n        setOffset(offset + 1)\r\n        console.log(offset);\r\n  \r\n        getPartnersThunk({\r\n            ...filterData,\r\n            offset: (offset + 1) * (filterData.limit || 20 )\r\n        })\r\n        .then(checkRes(false))\r\n        .then(() => console.log('onNextClick getPartnersThunk'))\r\n        console.log(filterData);\r\n\r\n    }\r\n    const onPreviousClick = () => {\r\n        if (offset <= 0) return\r\n        const filterData = getTrimmedValues(values)\r\n\r\n        setOffset(offset - 1)\r\n        console.log(offset);\r\n        getPartnersThunk({\r\n            ...filterData,\r\n            offset: (offset - 1) * (filterData.limit || 20 )\r\n        })\r\n        .then(checkRes(false))\r\n        .then(() => console.log('onNextClick getPartnersThunk'))\r\n        console.log(filterData);\r\n    }\r\n\r\n    const handlePageClick = (data) => {\r\n\r\n        console.log(data);\r\n\r\n        const filterData = getTrimmedValues(values)\r\n\r\n        setOffset(data.selected * (filterData.limit || 3))\r\n\r\n        getPartnersThunk({\r\n            limit: filterData.limit || 3,\r\n            ...filterData,\r\n            offset\r\n        })\r\n    }\r\n\r\n\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault()\r\n\r\n    const filterData = getTrimmedValues(values)\r\n\r\n    if (filterData.limit) {\r\n        filterData.limit = Number(filterData.limit)\r\n    }\r\n\r\n    getPartnersThunk(filterData)\r\n    .then(checkRes(false))\r\n    .then(() => console.log('filter getPartnersThunk'))\r\n    console.log(filterData);\r\n  }\r\n\r\n\r\n    const history = useHistory()\r\n\r\n    const cls = [\r\n        styles.Partners,\r\n        className\r\n    ]\r\n\r\n    useEffect(() => {\r\n        getPartnersThunk()\r\n        .then(checkRes(false))\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <center><h1>Список мерчантов</h1></center>\r\n            <MyTableForm\r\n                onSubmit={onSubmit}\r\n                isValid={isValid}\r\n                buttonText='Найти'\r\n            >\r\n                <TableInput\r\n                    name='inn'\r\n                    label='ИНН'\r\n                    onChange={handleChange}\r\n                    value={values.inn}\r\n                    errorText={errors.inn}\r\n                    minLength={1}\r\n                    maxLength={12}\r\n                    \r\n                />\r\n                <TableInput\r\n                    name='name'\r\n                    label='Наименование'\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    errorText={errors.name}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                />\r\n                <TableInput\r\n                    name='uuid'\r\n                    label='uuid'\r\n                    onChange={handleChange}\r\n                    value={values.uuid}\r\n                    errorText={errors.uuid}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                />\r\n                <TableInput\r\n                        type='number'\r\n                        name='limit'\r\n                        label='Кол-во записей'\r\n                        onChange={handleChange}\r\n                        value={values.limit}\r\n                        errorText={errors.limit}\r\n                        style={{\r\n                            width: `140px`\r\n                        }}\r\n                        min={1}\r\n                        max={100}\r\n                    />\r\n            </MyTableForm>\r\n\r\n            <Table hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>№</th>\r\n                        <th>uuid</th>\r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('inn')}\r\n                            label='ИНН'\r\n                        />\r\n                        <ClickableTH\r\n                            onClick={() => changeOrder('name')}\r\n                            label='Наименование'\r\n                        />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        partners?.length?\r\n                         partners.map((item, i) => {\r\n                            return (\r\n                                <tr \r\n                                    key={item.uuid}\r\n                                    onClick={() => history.push(`/partners/${item.uuid}`)}\r\n                                >\r\n                                    <td>{i+1}</td>\r\n                                    <td>{item.uuid}</td>\r\n                                    <td>{item.inn}</td>\r\n                                    <td>{item.name}</td>\r\n                                </tr>\r\n                            )\r\n                        }) : (\r\n                            <tr>\r\n                                <th>\r\n                                    <h1>ничего не найдено</h1>\r\n                                </th>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                    \r\n                    \r\n                </tbody>\r\n            </Table>\r\n\r\n            <div className={styles.tableBotton} >\r\n\r\n            <MyButton\r\n                color={'primary'}\r\n                onClick={() => history.push(`/add-partner`)}\r\n                buttonText='добавить мерчанта'\r\n            />\r\n\r\n            <Pagination className={styles.Pagination} aria-label=\"Page navigation\">\r\n             \r\n                <PaginationItem>\r\n                    <PaginationLink \r\n                        onClick={onPreviousClick}\r\n                        previous href=\"#\" />\r\n                </PaginationItem>\r\n             \r\n                <PaginationItem>\r\n                    <PaginationLink \r\n                        onClick={onNextClick}\r\n                        next href=\"#\" />\r\n                </PaginationItem>\r\n              \r\n            </Pagination>\r\n\r\n            {/* <ReactPaginate\r\n                previousLabel={'назад'}\r\n                nextLabel={'вперед'}\r\n                breakLabel={'...'}\r\n                breakClassName={'break-me'}\r\n                pageCount={15/limit}\r\n                marginPagesDisplayed={2}\r\n                pageRangeDisplayed={5}\r\n                onPageChange={handlePageClick}\r\n                containerClassName={'pagination'}\r\n                activeClassName={styles.active}\r\n                pageClassName={styles.pageClass}\r\n                /> */}\r\n\r\n            </div>\r\n\r\n           \r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n           \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        partners: state.partners.partners\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n     getPartnersThunk \r\n})(Partners)","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem, Button } from 'reactstrap'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport { getPartnerDetailsThunk, setPartnerDetails, updatePartnerThunk } from '../../../redux/actions/partnerActions'\r\n\r\nimport styles from './PartnerUpdate.module.scss'\r\n\r\nconst PartnerUpdate = ({\r\n  className, getPartnerDetailsThunk, setPartnerDetails, updatePartnerThunk,\r\n  details, ...props\r\n}) => {\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n\r\n\r\n\r\n  const {values, handleChange, errors, isValid, setValues, setIsValid } = useFormAndValidation()\r\n  const {id} = useParams()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    getPartnerDetailsThunk([id])\r\n    .then(checkRes(false))\r\n    .catch((err) => console.log(err))\r\n    return () => {\r\n        setPartnerDetails({\r\n            uuid: '',\r\n            inn: '',\r\n            name: ''\r\n        })\r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setIsValid(false)\r\n    // eslint-disable-next-line\r\n}, [])\r\n  useEffect(() => {\r\n    setValues(details)\r\n    // eslint-disable-next-line\r\n}, [details])\r\n\r\n\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault()\r\n    updatePartnerThunk({uuid: id, ...values})\r\n    .then((res) => {\r\n      checkRes()(res)\r\n      return res\r\n    })\r\n    .then(res => {\r\n        if (res.ok) {\r\n            setTimeout(() => {\r\n                history.goBack()\r\n            }, 3000)\r\n        }\r\n    })\r\n    .catch((err) => console.log(err))\r\n    console.log(values);\r\n  }\r\n\r\n    const cls = [\r\n        styles.PartnerUpdate,\r\n        className\r\n    ]\r\n\r\n    if (!details) {\r\n      return <h1>нет такого мерчанта</h1>\r\n  }\r\n\r\n  if (!details.uuid) {\r\n      return <Spinner/>\r\n  }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n         <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список мерчантов</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners/${id}`} exact>Детали мерчанта</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Редактирование мерчанта</BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <h1>Редактирование информации мерчанта </h1>\r\n            <form onSubmit={onSubmit}>\r\n              <MyTable>\r\n                <TableInput\r\n                    name='inn'\r\n                    label='ИНН'\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    value={values.inn}\r\n                    errorText={errors.inn}\r\n                    minLength={10}\r\n                    maxLength={12}\r\n                    \r\n                />\r\n                <TableInput\r\n                    name='name'\r\n                    label='Наименование'\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    errorText={errors.name}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                />\r\n              </MyTable>\r\n              <Button\r\n                 color={isValid? \"success\": 'secondary'}\r\n                  disabled={!isValid}\r\n              >\r\n                сохранить\r\n              </Button>\r\n            </form>\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      details: state.partners.details,\r\n  }\r\n}\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps, {getPartnerDetailsThunk, setPartnerDetails, updatePartnerThunk})(PartnerUpdate)","import myAxios from '../../configs/modified-axios'\r\nimport { makeRes } from '../../utils/utils'\r\nimport { SET_TERMINALS, SET_TERMINAL_DETAILS, TERMINALS_LOADING, TERMINALS_FAILURE, TERMINALS_SUCCESS } from './actionTypes'\r\n\r\n\r\nexport const createTerminalThunk = (inputData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n\r\n      const res = await myAxios.post(`/api/admin/add_terminal`, inputData)\r\n\r\n      console.log(res);\r\n      \r\n      if (res.status === 200 && res.data.result) {\r\n          dispatch(alertTerminalsSuccess({create: 'Услуга добавлен успешно'}))\r\n          return makeRes(true, 'Услуга добавлен успешно')\r\n        } else {\r\n          dispatch(alertTerminalsFailure({ create: res.data.errors }))\r\n          return makeRes(false, res.data.errors)\r\n        } \r\n    } catch (error) {\r\n      console.log(error.message);\r\n      dispatch(alertTerminalsFailure({create: [error.message]}))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n} \r\n\r\nexport const getTerminalsThunk = (filterData={}) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_terminals`, filterData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(getTerminalsSuccess( res.data.result.terminals))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertTerminalsFailure({ terminals: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertTerminalsFailure({ terminals: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const getTerminalDetailsThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/get_terminals_by_uuids`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(setTerminalDetails( res.data.result.terminals[0]))\r\n        return makeRes()\r\n      } else {\r\n        dispatch(alertTerminalsFailure({ details: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertTerminalsFailure({ details: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateTerminalThunk = (terminalData) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/update_terminal`, terminalData)\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertTerminalsSuccess({update: 'информация об услуге успешно обновлена'}))\r\n        return makeRes(true, 'информация об услуге успешно обновлена')\r\n      } else {\r\n        dispatch(alertTerminalsFailure({ update: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertTerminalsFailure({ update: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const deleteTerminalsThunk = (uuids) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const res = await myAxios.post(`/api/admin/delete_terminals`, {uuids})\r\n      console.log(res);\r\n\r\n      if (res.status === 200 && res.data.result) {\r\n        dispatch(alertTerminalsSuccess({delete: 'Услуга успешно удалена'}))\r\n        return makeRes(true, 'Услуга успешно удалена')\r\n      } else {\r\n        dispatch(alertTerminalsFailure({ delete: res.data.errors }))\r\n        return makeRes(false, res.data.errors)\r\n      } \r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(alertTerminalsFailure({ delete: [error.message] }))\r\n      return makeRes(false, [error.message])\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const setTerminalsLoading = (status) => {\r\n  return {\r\n    type: TERMINALS_LOADING,\r\n    status\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const getTerminalsSuccess = (terminals) => {\r\n  return {\r\n    type: SET_TERMINALS,\r\n    terminals\r\n  }\r\n}\r\n\r\nexport const setTerminalDetails = (details) => {\r\n  return {\r\n    type: SET_TERMINAL_DETAILS,\r\n    details\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const alertTerminalsFailure = (errors) => {\r\n  return {\r\n    type: TERMINALS_FAILURE,\r\n    errors\r\n  }\r\n}\r\nexport const alertTerminalsSuccess = (message) => {\r\n  return {\r\n    type: TERMINALS_SUCCESS,\r\n    message\r\n  }\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem, Table } from 'reactstrap'\r\nimport FlexBlock from '../../../components/Blocks/FlexBlock/FlexBlock'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport MyButton from '../../../components/UI/MyButton/MyButton'\r\nimport ClickableTH from '../../../components/UI/MyTable/ClickableTH/ClickableTH'\r\nimport DetailsTableRow from '../../../components/UI/MyTable/DetailsTableRow/DetailsTableRow'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport StatusTD from '../../../components/UI/MyTable/StatusTD/StatusTD'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport TableMultiselect from '../../../components/UI/MyTable/TableMultiselect/TableMultiselect'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport { getAcquirersThunk } from '../../../redux/actions/acquirerActions'\r\nimport { deleteShopsThunk, getShopDetailsThunk, setShopDetails } from '../../../redux/actions/shopActions'\r\nimport { getTerminalsThunk } from '../../../redux/actions/terminalActions'\r\nimport { activeOptions, currenceOptions, operationsOptions } from '../../../utils/constants'\r\nimport { getTrimmedValues } from '../../../utils/utils'\r\n\r\nimport styles from './ShopDetails.module.scss'\r\n\r\nconst ShopDetails = ({\r\n  className, details,  getShopDetailsThunk, setShopDetails, getTerminalsThunk,\r\n  deleteShopsThunk, terminals, acquirers, getAcquirersThunk,\r\n   ...props}) => {\r\n\r\n  const {id} = useParams()\r\n  const history = useHistory()\r\n\r\n  const {values, handleChange, errors, isValid, setValues} = useFormAndValidation()\r\n\r\n  const [bankOptions, setBankOptions] = useState([{name: 'Загружаются данные...', avtive: true}])\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n\r\n    const [order, setOrder] = useState(true)\r\n\r\n    const changeOrder = (field) => {\r\n      setOrder(!order)\r\n  \r\n      const filterData = getTrimmedValues(values)\r\n\r\n      const sortedData = {\r\n          ...filterData,\r\n          \"sort_by\": [\r\n              {\r\n                field,\r\n                order: order? 'asc' : 'desc'\r\n              }\r\n          ]\r\n      }\r\n      \r\n      getTerminalsThunk({\r\n          ...sortedData,\r\n          store_uuid: id\r\n        })\r\n      .then(checkRes(false))\r\n      .catch((err) => console.log(err))\r\n  \r\n  }\r\n\r\n  const onSingleSelect = (selectedList, {jsonKey, value}) => {\r\n    console.log(selectedList);\r\n    setValues({\r\n        ...values,\r\n        [jsonKey]: value\r\n    })\r\n}\r\nconst onBankSelect = (selectedList, selectedItem) => {\r\n    console.log(selectedList);\r\n    setValues({\r\n        ...values,\r\n        acquirer_uuid: selectedItem.uuid\r\n    })\r\n}\r\nconst onMultiSelect = (selectedList, selectedItem) => {\r\n    console.log(selectedList);\r\n    setValues({\r\n        ...values,\r\n        [selectedItem.jsonKey]: selectedList.map(i => i.value)\r\n    })\r\n}\r\n\r\nconst onRemove = (selectedList, removedItem) => {\r\n    console.log(selectedList);\r\n    setValues({\r\n        ...values,\r\n        [removedItem.jsonKey]: selectedList.map(i => i.value)\r\n    })\r\n}\r\n\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault()\r\n\r\n    let filterData = getTrimmedValues(values)\r\n\r\n    if (filterData.operations) {\r\n        if (filterData.operations.length === 0) {\r\n            const {operations, ...rest} = filterData\r\n            filterData = rest\r\n        }\r\n    }\r\n\r\n\r\n    getTerminalsThunk({\r\n        ...filterData,\r\n        store_uuid: id\r\n    })\r\n    .then(checkRes(false))\r\n    .catch((err) => console.log(err))\r\n\r\n    console.log(filterData);\r\n  }\r\n\r\n  const deleteShop = () => {\r\n    const confirmed = window.confirm(\"Вы точно хотите удалить?\");\r\n    if (confirmed) {\r\n        deleteShopsThunk([id])\r\n        .then((res) => {\r\n            checkRes()(res)\r\n            return res\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                setTimeout(() => {\r\n                    history.goBack()\r\n                }, 3000)\r\n            }\r\n        })\r\n        .then(() => {\r\n            console.log('deleteShopsThunk');\r\n        })\r\n        .catch((err) => console.log(err))\r\n    }\r\n    \r\n  }\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    getAcquirersThunk()\r\n// eslint-disable-next-line\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (acquirers) {\r\n        setBankOptions(acquirers)\r\n    }\r\n}, [acquirers])\r\n\r\n  useEffect(() => {\r\n\r\n    getShopDetailsThunk([id])\r\n    .then(checkRes(false))\r\n    .catch((err) => console.log(err))\r\n\r\n    getTerminalsThunk({store_uuid: id})\r\n    .then(checkRes(false))\r\n    .catch((err) => console.log(err))\r\n\r\n    return () => {\r\n      setShopDetails({\r\n          uuid: '',\r\n          partner_uuid: '',\r\n          name: '',\r\n        })\r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n    const cls = [\r\n        styles.ShopDetails,\r\n        className\r\n    ]\r\n    if (!details) {\r\n        return <h1>нет такого магазина</h1>\r\n    }\r\n\r\n    if (!details.uuid) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n         <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список мерчантов</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners/${details.partner_uuid}`} exact>Детали мерчанта</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Детали магазина &nbsp; <strong>{details.name}</strong></BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <center><h1>Информация о магазине</h1></center>\r\n            <MyTable>\r\n                 <DetailsTableRow\r\n                    label='uuid'\r\n                    data={details.uuid}\r\n                />\r\n                 <DetailsTableRow\r\n                    label='Наименование'\r\n                    data={details.name}\r\n                />\r\n            </MyTable>\r\n\r\n            <FlexBlock>\r\n                    <MyButton\r\n                        color={'secondary'}\r\n                        onClick={() => history.push(`/shops/update/${id}`)}\r\n                        buttonText='редактировать'\r\n                    />\r\n                    <MyButton\r\n                        color={'danger'}\r\n                        onClick={deleteShop}\r\n                        buttonText='удалить'\r\n                    />\r\n            </FlexBlock>\r\n\r\n\r\n            <center><h2>Список услуг</h2></center>\r\n            <MyTableForm\r\n                onSubmit={onSubmit}\r\n                isValid={isValid}\r\n                buttonText='Найти'\r\n            >\r\n              \r\n                <TableInput\r\n                    name='name'\r\n                    label='Наименование'\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    errorText={errors.name}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                />\r\n                <TableInput\r\n                    name='uuid'\r\n                    label='uuid'\r\n                    onChange={handleChange}\r\n                    value={values.uuid}\r\n                    errorText={errors.uuid}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                />\r\n                <TableInput\r\n                        type='number'\r\n                        name='limit'\r\n                        label='Кол-во записей'\r\n                        onChange={handleChange}\r\n                        value={values.limit}\r\n                        errorText={errors.limit}\r\n                        style={{\r\n                            width: `140px`\r\n                        }}\r\n                        min={1}\r\n                        max={100}\r\n                    />\r\n                    <TableMultiselect\r\n                        label='Банк'\r\n                        options={bankOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onBankSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                    />\r\n                     <TableMultiselect\r\n                        label='Aктивен'\r\n                        options={activeOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onSingleSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                    />\r\n                    <TableMultiselect\r\n                        label='Операции'\r\n                        options={operationsOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onMultiSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                    />\r\n                    <TableMultiselect\r\n                        label='Код валюты'\r\n                        options={currenceOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onSingleSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                    />\r\n            </MyTableForm>\r\n\r\n\r\n                    <Table hover>\r\n\r\n                        <thead>\r\n                            <tr>\r\n                                <th>№</th>\r\n                                <th>Банк</th>\r\n                                <ClickableTH\r\n                                    onClick={() => changeOrder('active')}\r\n                                    label='Cтатус'\r\n                                />\r\n                                <ClickableTH\r\n                                    onClick={() => changeOrder('currency_num')}\r\n                                    label='Валюта'\r\n                                />\r\n                                <ClickableTH\r\n                                    onClick={() => changeOrder('name')}\r\n                                    label='Наименование'\r\n                                />\r\n                                <th>Операции</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                           {\r\n                            terminals && terminals.map((item, i) => {\r\n                                const currency =  currenceOptions.find(i => {\r\n                                                    return i.value === item.currency_num\r\n                                                })\r\n                                const bank = acquirers?.find((bank) => {\r\n                                    return bank.uuid === item.acquirer_uuid\r\n                                })\r\n                                return (\r\n                                        <tr \r\n                                            key={item.uuid} \r\n                                            onClick={() => history.push(`/terminals/${item.uuid}`)}\r\n                                        >\r\n                                            <td>{i+1}</td>\r\n                                            <td>{bank?.name}</td>\r\n                                            <StatusTD\r\n                                                active={item.active}\r\n                                            />\r\n                                            <td> \r\n\r\n                                                {`${item.currency_num} / ${currency?.code} / ${currency?.name}`}\r\n                                                \r\n                                            </td>\r\n                                            <td>{item.name}</td>\r\n                                            <td>{item.operations.join(' ').toUpperCase()}</td>\r\n                                        </tr>\r\n                                    )\r\n                            })\r\n                           }\r\n\r\n                        </tbody>\r\n\r\n                    </Table>\r\n                    \r\n                    <MyButton\r\n                        color={'primary'}\r\n                        onClick={() => history.push(`/add-terminal/${id}`)}\r\n                        buttonText='добавить услугу'\r\n                    />\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    details: state.shops.details,\r\n    terminals: state.terminals.terminals,\r\n    acquirers: state.acquirers.acquirers,\r\n  }\r\n  }\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n  getShopDetailsThunk, setShopDetails, deleteShopsThunk, getTerminalsThunk,\r\n  getAcquirersThunk,\r\n})(ShopDetails)","import React from 'react'\r\n\r\nimport styles from './Shops.module.scss'\r\n\r\nconst Shops = ({className, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.Shops,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <h1>Shops</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shops","import React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\n\r\nimport styles from './ShopsAddition.module.scss'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { createShopThunk } from '../../../redux/actions/shopActions'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\n\r\nconst ShopsAddition = ({className, createShopThunk, ...props}) => {\r\n\r\n    const {partnerId} = useParams()\r\n\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n        failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n    \r\n\r\n    const {values, handleChange, errors, isValid, resetForm, setIsValid } = useFormAndValidation()\r\n    \r\n    useEffect(() => {\r\n        setIsValid(false)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const cls = [\r\n        styles.ShopsAddition,\r\n        className\r\n    ]\r\n\r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        const shopData = {\r\n            ...values,\r\n            partner_uuid: partnerId\r\n        }\r\n        console.log(shopData);\r\n\r\n        createShopThunk(shopData)\r\n        .then((res) => {\r\n            checkRes()(res)\r\n            return res\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                setTimeout(() => {\r\n                    resetForm()\r\n                }, 3000)\r\n            }\r\n        })\r\n        .catch((err) => console.log(err))\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n         <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список мерчантов</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners/${partnerId}`} exact>Детали мерчанта</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Добавление магазина</BreadcrumbItem>\r\n        </Breadcrumb>\r\n\r\n            <center><h1>Добавление магазина</h1></center>\r\n            <MyTableForm\r\n                onSubmit={onSubmit}\r\n                isValid={isValid}\r\n            >\r\n                    <TableInput\r\n                         name='name'\r\n                        label='Наименование'\r\n                        required={true}\r\n                        onChange={handleChange}\r\n                        value={values.name}\r\n                        errorText={errors.name}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n            </MyTableForm>\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default connect(null, { createShopThunk })(ShopsAddition)","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\n\r\nimport styles from './ShopUpdate.module.scss'\r\nimport { getShopDetailsThunk, setShopDetails, updateShopThunk } from '../../../redux/actions/shopActions'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\n\r\nconst ShopUpdate = ({\r\n  className,  details,  getShopDetailsThunk, setShopDetails, \r\n  updateShopThunk, \r\n  ...props}) => {\r\n\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n      failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n  \r\n\r\n  const {values, handleChange, errors, isValid, setValues, setIsValid } = useFormAndValidation()\r\n\r\n  const {id} = useParams()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    getShopDetailsThunk([id])\r\n    .then(checkRes(false))\r\n    return () => {\r\n      setShopDetails({\r\n          uuid: '',\r\n          partner_uuid: '',\r\n          name: '',\r\n        })\r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setIsValid(false)\r\n    // eslint-disable-next-line\r\n}, [])\r\n\r\nuseEffect(() => {\r\n  setValues(details)\r\n  // eslint-disable-next-line\r\n}, [details])\r\n\r\nconst onSubmit = (evt) => {\r\n  evt.preventDefault()\r\n  updateShopThunk({uuid: id, ...values})\r\n  .then((res) => {\r\n    checkRes()(res)\r\n    return res\r\n  })\r\n  .then(res => {\r\n      if (res.ok) {\r\n          setTimeout(() => {\r\n            history.goBack()\r\n          }, 1000)\r\n      }\r\n  })\r\n  .catch((err) => console.log(err))\r\n  console.log(values);\r\n}\r\n\r\n    const cls = [\r\n        styles.ShopUpdate,\r\n        className\r\n    ]\r\n\r\n    if (!details) {\r\n      return <h1>нет такого магазина</h1>\r\n  }\r\n\r\n  if (!details.uuid) {\r\n      return <Spinner/>\r\n  }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n         <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список мерчантов</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/partners/${details.partner_uuid}`} exact>Детали мерчанта</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/shops/${id}`} exact>Детали магазина</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Редактирование магазина &nbsp; <strong>{details.name}</strong></BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <h1>Редактирование информации о магазине </h1>\r\n            <MyTableForm\r\n              onSubmit={onSubmit}\r\n              isValid={isValid}\r\n            >\r\n              <TableInput\r\n                    name='name'\r\n                    label='Наименование'\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    errorText={errors.name}\r\n                    minLength={1}\r\n                    maxLength={199}\r\n                />\r\n\r\n            </MyTableForm>\r\n\r\n                <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    details: state.shops.details,\r\n  }\r\n  }\r\n  \r\n\r\n\r\n  export default connect(mapStateToProps, {\r\n    getShopDetailsThunk, setShopDetails, updateShopThunk\r\n  })(ShopUpdate)","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport FlexBlock from '../../../components/Blocks/FlexBlock/FlexBlock'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport MyButton from '../../../components/UI/MyButton/MyButton'\r\nimport DetailsTableRow from '../../../components/UI/MyTable/DetailsTableRow/DetailsTableRow'\r\nimport MyTable from '../../../components/UI/MyTable/MyTable'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport { deleteTerminalsThunk, getTerminalDetailsThunk, setTerminalDetails } from '../../../redux/actions/terminalActions'\r\n\r\nimport styles from './TerminalDetails.module.scss'\r\n\r\nconst TerminalDetails = ({\r\n  className, details, getTerminalDetailsThunk, deleteTerminalsThunk,\r\n  setTerminalDetails, \r\n  ...props}) => {\r\n\r\n  const { id } = useParams()\r\n  const history = useHistory()\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    getTerminalDetailsThunk([id])\r\n    .then(checkRes(false))\r\n\r\n    return () => {\r\n      setTerminalDetails({\r\n        uuid: '',\r\n        acquirer_uuid: '',\r\n        name: '',\r\n        config: {},\r\n        currency_num: '',\r\n        config_id: '',\r\n        operations: [],\r\n        store_uuid: ''\r\n        })\r\n    }\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n  const onDelete = () => {\r\n    const confirmed = window.confirm(\"Вы точно хотите удалить?\");\r\n    if (confirmed) {\r\n      deleteTerminalsThunk([id])\r\n      .then((res) => {\r\n        checkRes()(res)\r\n        return res\r\n      })\r\n      .then(res => {\r\n          if (res.ok) {\r\n              setTimeout(() => {\r\n                history.goBack()\r\n              }, 1000)\r\n          }\r\n      })\r\n      .then(() => console.log('deleteTerminalsThunk'))\r\n      .catch((err) => console.log(err))\r\n    }\r\n  }\r\n\r\n    const cls = [\r\n        styles.TerminalDetails,\r\n        className\r\n    ]\r\n\r\n    if (!details) {\r\n      return <h1>нет такого услуги</h1>\r\n    }\r\n\r\n    if (!details.uuid) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n         <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список мерчантов</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/shops/${details.store_uuid}`} exact>Детали магазина</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Детали услуги &nbsp; <strong>{details.name}</strong></BreadcrumbItem>\r\n        </Breadcrumb>\r\n             <center><h1>Информация об услуге</h1></center>\r\n            <MyTable>\r\n                <DetailsTableRow\r\n                    label='uuid'\r\n                    data={details.uuid}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Банк'\r\n                    data={details.acquirer_uuid}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Статус'\r\n                    data={(details.active && 'активен') || 'неактивен'}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Код валюты'\r\n                    data={details.currency_num}\r\n                />\r\n                <DetailsTableRow\r\n                    label='Наименование'\r\n                    data={details.name}\r\n                />\r\n                <DetailsTableRow\r\n                    label='id конфигурации'\r\n                    data={details.config_id}\r\n                />\r\n                 <DetailsTableRow\r\n                    label='Операции'\r\n                    data={details.operations.join(' ').toUpperCase()}\r\n                />\r\n        </MyTable>\r\n\r\n\r\n       <FlexBlock>\r\n          <MyButton\r\n                color={'secondary'}\r\n                onClick={() => history.push(`/terminals/update/${id}`)}\r\n                buttonText='редактировать'\r\n            />\r\n            <MyButton\r\n                color={'danger'}\r\n                onClick={onDelete}\r\n                buttonText='удалить'\r\n            />\r\n       </FlexBlock>\r\n       \r\n            <SuccessAlert\r\n                    visible={successAlertVisible}\r\n                    setVisible={setSuccessAlertVisible}\r\n                    message={successMessage}\r\n                />\r\n\r\n            <FailureAlert\r\n                visible={failureAlertVisible}\r\n                setVisible={setFailureAlertVisible}\r\n                message={failureMessage}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    details: state.terminals.details,\r\n  }\r\n  }\r\n\r\n  \r\n\r\nexport default connect(mapStateToProps, {\r\n  getTerminalDetailsThunk, deleteTerminalsThunk, setTerminalDetails, \r\n })(TerminalDetails)","import React from 'react'\r\n\r\nimport styles from './Terminals.module.scss'\r\n\r\nconst Terminals = ({className, ...props}) => {\r\n\r\n    const cls = [\r\n        styles.Terminals,\r\n        className\r\n    ]\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <h1>Terminals</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Terminals","import React, { useState, useEffect } from 'react'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport TableMultiselect from '../../../components/UI/MyTable/TableMultiselect/TableMultiselect'\r\n\r\nimport styles from './TerminalsAddition.module.scss'\r\nimport { useParams } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport { getAcquirersThunk } from '../../../redux/actions/acquirerActions'\r\nimport { createTerminalThunk } from '../../../redux/actions/terminalActions'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\n\r\nconst TerminalsAddition = ({\r\n    className, getAcquirersThunk, acquirers, createTerminalThunk,\r\n    ...props}) => {\r\n\r\n    const {shopId} = useParams()\r\n\r\n    const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n        failureAlertVisible, setFailureAlertVisible, failureMessage, setFailureMessage, checkRes} = useAlert()\r\n    \r\n\r\n    const {values, handleChange, errors, isValid, resetForm, setValues, setIsValid } = useFormAndValidation()\r\n    \r\n    const [bankOptions, setBankOptions] = useState([{name: 'Загружаются данные...', avtive: true}])\r\n    const activeOptions = [\r\n        {name: 'Да', value: true, jsonKey: 'active'},\r\n        {name: 'Нет', value: false, jsonKey: 'active'},\r\n    ]\r\n    \r\n    const operationsOptions = [\r\n        {name: 'AFT', value: 'aft', jsonKey: 'operations'},\r\n        {name: 'AFT рекуррент', value: 'aft_recurring', jsonKey: 'operations'},\r\n        {name: 'ECOM', value: 'ecom', jsonKey: 'operations'},\r\n        {name: 'ECOM рекуррент', value: 'ecom_recurring', jsonKey: 'operations'},\r\n        {name: 'ECOM рекуррент регистрация', value: 'ecom_recurring_reg', jsonKey: 'operations'},\r\n        {name: 'OCT (B2C) - выдача на карту', value: 'oct_card', jsonKey: 'operations'},\r\n        {name: 'OCT - выдача на счет', value: 'oct_account', jsonKey: 'operations'},\r\n    ]\r\n\r\n    const currenceOptions = [\r\n        {\"value\": \"643\", \"code\": \"RUB\", \"name\": \"Российский рубль\", jsonKey: 'currency_num'},\r\n            {\"value\": \"840\", \"code\": \"USD\", \"name\": \"Доллар США\", jsonKey: 'currency_num'},\r\n            {\"value\": \"978\", \"code\": \"EUR\", \"name\": \"Евро\", jsonKey: 'currency_num'},\r\n            {\"value\": \"392\", \"code\": \"JPY\", \"name\": \"Японская йена\", jsonKey: 'currency_num'},\r\n            {\"value\": \"156\", \"code\": \"CNY\", \"name\": \"Китайский юань женьминьби\", jsonKey: 'currency_num'},\r\n    ]\r\n\r\n    const onSingleSelect = (selectedList, {jsonKey, value}) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [jsonKey]: value\r\n        })\r\n    }\r\n    const onBankSelect = (selectedList, selectedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            acquirer_uuid: selectedItem.uuid\r\n        })\r\n    }\r\n    const onMultiSelect = (selectedList, selectedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [selectedItem.jsonKey]: selectedList.map(i => i.value)\r\n        })\r\n    }\r\n\r\n    const onRemove = (selectedList, removedItem) => {\r\n        console.log(selectedList);\r\n        setValues({\r\n            ...values,\r\n            [removedItem.jsonKey]: selectedList.map(i => i.value)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAcquirersThunk()\r\n        // eslint-disable-next-line\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        if (acquirers) {\r\n            setBankOptions(acquirers)\r\n        }\r\n    }, [acquirers])\r\n\r\n    useEffect(() => {\r\n        setIsValid(false)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const cls = [\r\n        styles.TerminalsAddition,\r\n        className\r\n    ]\r\n\r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        const terminalData = {\r\n            ...values,\r\n            store_uuid: shopId\r\n        }\r\n        console.log(terminalData);\r\n\r\n        createTerminalThunk(terminalData)\r\n        .then((res) => {\r\n            checkRes()(res)\r\n            return res\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  setTimeout(() => {\r\n                      resetForm()\r\n                  }, 3000)\r\n              }\r\n          })\r\n          .catch((err) => console.log(err))\r\n        .then(() => console.log('TerminalsAddition'))\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n         <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список мерчантов</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/shops/${shopId}`} exact>Детали магазина</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Добавление услуги</BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <center><h1>Добавление услуги</h1></center>\r\n            <MyTableForm\r\n                onSubmit={onSubmit}\r\n                isValid={isValid}\r\n            >\r\n                    <TableInput\r\n                         name='name'\r\n                        label='Наименование'\r\n                        required={true}\r\n                        onChange={handleChange}\r\n                        value={values.name}\r\n                        errorText={errors.name}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                    <TableMultiselect\r\n                        label='Банк'\r\n                        options={bankOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onBankSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                    />\r\n                     <TableMultiselect\r\n                        label='Aктивен'\r\n                        options={activeOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onSingleSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                    />\r\n                    <TableMultiselect\r\n                        label='Операции'\r\n                        options={operationsOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onMultiSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                    />\r\n                    <TableMultiselect\r\n                        label='Код валюты'\r\n                        options={currenceOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onSingleSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                    />\r\n                    <TableInput\r\n                         name='config_id'\r\n                        label='id конфигурации'\r\n                        required={true}\r\n                        onChange={handleChange}\r\n                        value={values.config_id}\r\n                        errorText={errors.config_id}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n            </MyTableForm>\r\n\r\n            <SuccessAlert\r\n                visible={successAlertVisible}\r\n                setVisible={setSuccessAlertVisible}\r\n                message={successMessage}\r\n            />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        acquirers: state.acquirers.acquirers,\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n     getAcquirersThunk, createTerminalThunk,\r\n    })(TerminalsAddition)","import React, { useState, useEffect } from 'react'\r\nimport MyTableForm from '../../../components/UI/MyTable/MyTableForm/MyTableForm'\r\nimport TableInput from '../../../components/UI/MyTable/TableInput/TableInput'\r\nimport { useFormAndValidation } from '../../../hooks/useFormValiation'\r\nimport TableMultiselect from '../../../components/UI/MyTable/TableMultiselect/TableMultiselect'\r\n\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport { getTerminalDetailsThunk, setTerminalDetails, updateTerminalThunk } from '../../../redux/actions/terminalActions'\r\n\r\n\r\n\r\nimport styles from './TerminalUpdate.module.scss'\r\nimport { activeOptions, currenceOptions, operationsOptions } from '../../../utils/constants'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport SuccessAlert from '../../../components/MyAlert/SuccessAlert/SuccessAlert'\r\nimport FailureAlert from '../../../components/MyAlert/FailureAlert/FailureAlert'\r\nimport { useAlert } from '../../../hooks/useAlert'\r\n\r\nconst TerminalUpdate = ({\r\n  className, getTerminalDetailsThunk, details, acquirers, \r\n  setTerminalDetails, updateTerminalThunk,\r\n  ...props}) => {\r\n\r\n  const {id} = useParams()\r\n  const history = useHistory()\r\n\r\n  const { successAlertVisible, setSuccessAlertVisible, successMessage,\r\n    failureAlertVisible, setFailureAlertVisible, failureMessage, checkRes} = useAlert()\r\n\r\n\r\n  const {values, handleChange, errors, isValid, setValues } = useFormAndValidation()\r\n  const [activePreselect, setActivePreselect] = useState([{name: 'загружается...'}])\r\n  const [operationsPreselect, setOperationsPreselect] = useState([{name: 'загружается...'}])\r\n  const [currencyPreselect, setcurrencyPreselect] = useState([{name: 'загружается...'}])\r\n \r\nuseEffect(() => {\r\n  const {acquirer_uuid, store_uuid, ...rest} = details\r\n  setValues(rest)\r\n  // eslint-disable-next-line\r\n}, [details])\r\n\r\nuseEffect(() => {\r\n  if (details) {\r\n\r\n    const isActive = activeOptions.find(i => i.value === details.active)\r\n\r\n    if (isActive) {\r\n      setActivePreselect([isActive])\r\n    }\r\n\r\n    const preselectedOperations = operationsOptions.filter(i => {\r\n        return details.operations.includes(i.value)\r\n    } )\r\n\r\n    if (preselectedOperations.length) {\r\n      setOperationsPreselect(preselectedOperations)\r\n    }\r\n\r\n    const preselectedCurrency = currenceOptions.find(i => {\r\n      return details.currency_num === i.value\r\n  } )\r\n\r\n    if (preselectedCurrency) {\r\n      setcurrencyPreselect([preselectedCurrency])\r\n    }\r\n\r\n  }\r\n  // eslint-disable-next-line\r\n}, [details])\r\n\r\n\r\nuseEffect(() => {\r\n\r\n  getTerminalDetailsThunk([id])\r\n  .then(checkRes(false))\r\n\r\n  return () => {\r\n    setTerminalDetails({\r\n        uuid: '',\r\n        acquirer_uuid: '',\r\n        name: '',\r\n        config: {},\r\n        currency_num: '',\r\n        config_id: '',\r\n        operations: [],\r\n        store_uuid: ''\r\n      })\r\n  }\r\n  // eslint-disable-next-line \r\n}, [])\r\n\r\n  const onSingleSelect = (selectedList, {jsonKey, value}) => {\r\n      console.log(selectedList);\r\n      setValues({\r\n          ...values,\r\n          [jsonKey]: value\r\n      })\r\n  }\r\n\r\n  const onMultiSelect = (selectedList, selectedItem) => {\r\n      console.log(selectedList);\r\n      setValues({\r\n          ...values,\r\n          [selectedItem.jsonKey]: selectedList.map(i => i.value)\r\n      })\r\n  }\r\n\r\n  const onRemove = (selectedList, removedItem) => {\r\n      console.log(selectedList);\r\n      setValues({\r\n          ...values,\r\n          [removedItem.jsonKey]: selectedList.map(i => i.value)\r\n      })\r\n  }\r\n\r\n    const cls = [\r\n        styles.TerminalUpdate,\r\n        className\r\n    ]\r\n\r\n    const onSubmit = (evt) => {\r\n      evt.preventDefault()\r\n      console.log(values);\r\n      const terminalData = {\r\n          ...values,\r\n          uuid: id\r\n      }\r\n      console.log(terminalData);\r\n\r\n      updateTerminalThunk(terminalData)\r\n      .then((res) => {\r\n        checkRes()(res)\r\n        return res\r\n      })\r\n      .then(res => {\r\n          if (res.ok) {\r\n              setTimeout(() => {\r\n                history.goBack()\r\n              }, 1000)\r\n          }\r\n      })\r\n      .then(() => console.log('TerminalsAddition'))\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  \r\n    if (!details) {\r\n      return <h1>нет такого услуги</h1>\r\n    }\r\n\r\n    if (!details.uuid) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n         <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n          <BreadcrumbItem tag={NavLink} to='/partners' exact>Список мерчантов</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/shops/${details.store_uuid}`} exact>Детали магазина</BreadcrumbItem>\r\n          <BreadcrumbItem tag={NavLink} to={`/terminals/${id}`} exact>Детали услуги</BreadcrumbItem>\r\n          <BreadcrumbItem active tag=\"span\">Обновление услуги &nbsp; <strong> {details.name}</strong> </BreadcrumbItem>\r\n        </Breadcrumb>\r\n            <center><h1>Обновление услуги</h1></center>\r\n            <MyTableForm\r\n                onSubmit={onSubmit}\r\n                isValid={isValid}\r\n                buttonText='Сохранить'\r\n            >\r\n                    <TableInput\r\n                         name='name'\r\n                        label='Наименование'\r\n                        onChange={handleChange}\r\n                        value={values.name}\r\n                        errorText={errors.name}\r\n                        minLength={1}\r\n                        maxLength={199}\r\n                    />\r\n                     <TableMultiselect\r\n                        label='Aктивен'\r\n                        options={activeOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onSingleSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                        selectedValues={activePreselect}\r\n                    />\r\n                    <TableMultiselect\r\n                        label='Операции'\r\n                        options={operationsOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onMultiSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        selectedValues={operationsPreselect}\r\n                    />\r\n                    <TableMultiselect\r\n                        label='Код валюты'\r\n                        options={currenceOptions}\r\n                        displayValue=\"name\"\r\n                        onSelect={onSingleSelect}\r\n                        onRemove={onRemove}\r\n                        placeholder='Выберите'\r\n                        singleSelect\r\n                        selectedValues={currencyPreselect}\r\n                    />\r\n                    <TableInput\r\n                         name='config_id'\r\n                        label='id конфигурации'\r\n                        onChange={handleChange}\r\n                        value={values.config_id}\r\n                        errorText={errors.config_id}\r\n                        minLength={1}\r\n                        maxLength={200}\r\n                    />\r\n            </MyTableForm>\r\n\r\n                <SuccessAlert\r\n                        visible={successAlertVisible}\r\n                        setVisible={setSuccessAlertVisible}\r\n                        message={successMessage}\r\n                    />\r\n\r\n                <FailureAlert\r\n                   visible={failureAlertVisible}\r\n                   setVisible={setFailureAlertVisible}\r\n                   message={failureMessage}\r\n                />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    details: state.terminals.details,\r\n    // acquirers: state.acquirers.acquirers,\r\n  }\r\n  }\r\n\r\n  \r\n\r\nexport default connect(mapStateToProps, {\r\n   getTerminalDetailsThunk, setTerminalDetails, updateTerminalThunk\r\n  }) (TerminalUpdate)","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport AccountCreation from '../../pages/Accounts/AccountCreation/AccountCreation'\r\nimport AccountDetails from '../../pages/Accounts/AccountDetails/AccountDetails'\r\nimport Accounts from '../../pages/Accounts/Accounts'\r\nimport AcquirerAddition from '../../pages/Acquirers/AcquirerAddition/AcquirerAddition'\r\nimport Acquirers from '../../pages/Acquirers/Acquirers'\r\nimport AcquirersDetails from '../../pages/Acquirers/AcquirersDetails/AcquirersDetails'\r\nimport AcquirersUpdate from '../../pages/Acquirers/AcquirersUpdate/AcquirersUpdate'\r\nimport HomePage from '../../pages/HomePage/HomePage'\r\nimport News from '../../pages/News/News'\r\nimport NewsCreation from '../../pages/News/NewsCreation/NewsCreation'\r\nimport NewsDetails from '../../pages/News/NewsDetails/NewsDetails'\r\nimport PartnerAcquierers from '../../pages/PartnerAcquierers/PartnerAcquierers'\r\nimport PartnerAcquierersAddition from '../../pages/PartnerAcquierers/PartnerAcquierersAddition/PartnerAcquierersAddition'\r\nimport PartnerAcquierersDetails from '../../pages/PartnerAcquierers/PartnerAcquierersDetails/PartnerAcquierersDetails'\r\nimport PartnerAcquierersUpdate from '../../pages/PartnerAcquierers/PartnerAcquierersUpdate/PartnerAcquierersUpdate'\r\nimport PartnerAddition from '../../pages/Partners/PartnerAddition/PartnerAddition'\r\nimport PartnerDetails from '../../pages/Partners/PartnerDetails/PartnerDetails'\r\nimport Partners from '../../pages/Partners/Partners'\r\nimport PartnerUpdate from '../../pages/Partners/PartnerUpdate/PartnerUpdate'\r\nimport ShopDetails from '../../pages/Shops/ShopDetails/ShopDetails'\r\nimport Shops from '../../pages/Shops/Shops'\r\nimport ShopsAddition from '../../pages/Shops/ShopsAddition/ShopsAddition'\r\nimport ShopUpdate from '../../pages/Shops/ShopUpdate/ShopUpdate'\r\nimport TerminalDetails from '../../pages/Terminals/TerminalDetails/TerminalDetails'\r\nimport Terminals from '../../pages/Terminals/Terminals'\r\nimport TerminalsAddition from '../../pages/Terminals/TerminalsAddition/TerminalsAddition'\r\nimport TerminalUpdate from '../../pages/Terminals/TerminalUpdate/TerminalUpdate'\r\n\r\nimport styles from './Main.module.scss'\r\n\r\nconst Main = (props) => {\r\n\r\n    return (\r\n        <div className={styles.Main}>\r\n            <Switch>\r\n                <Route path='/' exact component={HomePage} />\r\n                <Route path='/accounts' exact component={Accounts} />\r\n                <Route path='/accounts/:id' component={AccountDetails} />\r\n                <Route path='/create-account' component={AccountCreation} />\r\n                <Route path='/news' exact component={News} />\r\n                <Route path='/news/:id' component={NewsDetails} />\r\n                <Route path='/create-news' component={NewsCreation} />\r\n                <Route path='/acquirers' exact component={Acquirers} />\r\n                <Route path='/acquirers/:id' exact component={AcquirersDetails} />\r\n                <Route path='/acquirers/update/:id' exact component={AcquirersUpdate} />\r\n                <Route path='/add-acquirer' component={AcquirerAddition} />\r\n                <Route path='/partners' exact component={Partners} />\r\n                <Route path='/partners/:id' exact component={PartnerDetails} />\r\n                <Route path='/partners/update/:id' exact component={PartnerUpdate} />\r\n                <Route path='/add-partner' component={PartnerAddition} />\r\n                <Route path='/partners-acquirers/:partnerId' exact component={PartnerAcquierers} />\r\n                <Route path='/partners-acquirers/:partnerId/:id' exact component={PartnerAcquierersDetails} />\r\n                <Route path='/partners-acquirers/:partnerId/:id/update' exact component={PartnerAcquierersUpdate} />\r\n                <Route path='/add-partner-acquirer/:partnerId' component={PartnerAcquierersAddition} />\r\n                <Route path='/shops' exact component={Shops} />\r\n                <Route path='/shops/:id' exact component={ShopDetails} />\r\n                <Route path='/shops/update/:id' exact component={ShopUpdate} />\r\n                <Route path='/add-shop/:partnerId' component={ShopsAddition} />\r\n                <Route path='/terminals' exact component={Terminals} />\r\n                <Route path='/terminals/:id' exact component={TerminalDetails} />\r\n                <Route path='/terminals/update/:id' exact component={TerminalUpdate} />\r\n                <Route path='/add-terminal/:shopId' exact component={TerminalsAddition} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","import React, { Fragment } from 'react'\r\nimport { UncontrolledCollapse } from 'reactstrap'\r\n\r\nimport styles from './MyDropDown.module.scss'\r\n\r\nconst MyDropDown = ({title, children, className, ...props}) => {\r\n\r\n  const id = 'toggler' +  Math.random().toString().slice(2)\r\n\r\n  const cls = [\r\n    styles.MyDropDown,\r\n    className\r\n  ]\r\n\r\n    return (\r\n        <Fragment>\r\n          <p id={id} className={cls.join(' ')} >{title}</p>\r\n          <UncontrolledCollapse toggler={`#${id}`}>\r\n            {children}\r\n          </UncontrolledCollapse>\r\n          <hr />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default MyDropDown","import React from 'react'\r\nimport { NavLink as RRNavLink } from \"react-router-dom\";\r\nimport { NavLink } from 'reactstrap';\r\n\r\nimport styles from './MyLink.module.scss'\r\n\r\nconst MyLink = (props) => {\r\n\r\n    return (\r\n      <NavLink tag={RRNavLink} \r\n        className={styles.MyLink}\r\n        {...props} \r\n        activeStyle={{\r\n          fontWeight: \"bold\",\r\n          color: \"#A31FED\"\r\n        }}\r\n      >{props.children}</NavLink>\r\n    )\r\n}\r\n\r\nexport default MyLink","import React from \"react\";\r\nimport { Nav, NavItem } from 'reactstrap';\r\nimport MyDropDown from \"../UI/MyDropDown/MyDropDown\";\r\nimport MyLink from \"../UI/MyLink/MyLink\";\r\n\r\nimport styles from \"./SideMenu.module.scss\";\r\n\r\nconst SideMenu = (props) => {\r\n  return (\r\n    <div className={styles.SideMenu}>\r\n      <MyDropDown title={`Управление аккаунтами`}>\r\n        <Nav vertical>\r\n            <NavItem>\r\n              <MyLink to=\"/accounts\">Аккаунты</MyLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <MyLink to=\"/create-account\">Создать аккаунт</MyLink>\r\n            </NavItem>\r\n          </Nav>\r\n      </MyDropDown>\r\n      <MyDropDown title={'Интеграция'}>\r\n        <Nav vertical>\r\n            <NavItem>\r\n              <MyLink to=\"/partners\">Мерчанты</MyLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <MyLink to=\"/acquirers\">Банки</MyLink>\r\n            </NavItem>\r\n        </Nav>\r\n      </MyDropDown>\r\n      <MyDropDown title={'Транзакции'}>\r\n        <Nav vertical>\r\n            <NavItem>\r\n              <MyLink to=\"/transactions\">Транзакции</MyLink>\r\n            </NavItem>\r\n        </Nav>\r\n      </MyDropDown>\r\n\r\n   \r\n \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideMenu;\r\n","import React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Footer from '../../components/Footer/Footer'\r\nimport Header from '../../components/Header/Header'\r\nimport Login from '../../components/Login/Login'\r\nimport Main from '../../components/Main/Main'\r\nimport SideMenu from '../../components/SideMenu/SideMenu'\r\nimport { refreshToken, setIsLoggedIn } from '../../redux/actions/loginActions'\r\nimport { getAccessExpiry } from '../../utils/utils'\r\n\r\nimport styles from './Layout.module.scss'\r\n\r\nconst Layout = ({isLoggedIn, refreshToken, setIsLoggedIn}) => {\r\n\r\n    \r\n    useEffect(() => {\r\n        const tokenTime = getAccessExpiry()\r\n        if (!tokenTime) return\r\n        const isExpired = Date.now() >= tokenTime\r\n        const delay = Math.floor((tokenTime - Date.now()))\r\n        let timer;\r\n        console.log(delay);\r\n        if (isExpired) {\r\n            refreshToken()\r\n        } else {\r\n            setIsLoggedIn(true)\r\n            timer = setTimeout(() => {\r\n                refreshToken()\r\n            }, delay )\r\n        }\r\n        return () => clearTimeout(timer)\r\n    },[refreshToken, setIsLoggedIn])\r\n\r\n    if (!isLoggedIn) {\r\n        return (\r\n            <Login/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={styles.Layout}>\r\n            <Header/>\r\n            <div className='d-flex'>\r\n                <SideMenu/>\r\n                <Main/>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.login.isLoggedIn,\r\n        // errors: state.login.errors,\r\n        // loading: state.login.loading,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {refreshToken, setIsLoggedIn})(Layout)","import React from 'react'\r\n\r\nimport styles from './ErrorBoundary.module.scss'\r\n\r\nclass ErrorBoundary extends React.Component {\r\n\r\n    state = { hasError: false };\r\n  \r\n    static getDerivedStateFromError(error) {\r\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n      return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error, errorInfo) {\r\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n      console.log(error, errorInfo)\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) {\r\n        // Можно отрендерить запасной UI произвольного вида\r\n        return <h1 className={styles.ErrorBoundary}>Что-то пошло не так.</h1>;\r\n      }\r\n  \r\n      return this.props.children; \r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary","import { CLOSE_MENU, OPEN_MENU } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    menuIsOpened: false,\r\n}\r\n\r\n\r\nexport default function layoutReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case OPEN_MENU:\r\n            return { ...state, menuIsOpened: true }\r\n        case CLOSE_MENU:\r\n            return { ...state, menuIsOpened: false }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { LOG_OUT, SET_IS_ADMIN, SET_IS_LOGGED_IN, SET_LOGIN_ERRORS, SET_LOGIN_LOADING } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  isLoggedIn: false,\r\n  errors: null,\r\n  loading: false,\r\n  user: 'customer',\r\n  authData: null,\r\n  isAdmin: false\r\n}\r\n\r\nexport default function loginReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_IS_LOGGED_IN:\r\n      return {\r\n        ...state, \r\n        isLoggedIn: action.status,\r\n        authData: action.authData\r\n      }\r\n    case SET_IS_ADMIN:\r\n      return {\r\n        ...state,\r\n        isAdmin: action.isAdmin,\r\n        user: 'admin',\r\n      }\r\n    case SET_LOGIN_ERRORS:\r\n      return {\r\n        ...state,\r\n        errors: action.errors\r\n      }\r\n    case SET_LOGIN_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status,\r\n      }\r\n    case LOG_OUT:\r\n      return initialState\r\n    default:\r\n      return state;\r\n  }\r\n}","import { SET_NEWS_FAILURE, GET_NEWS_SUCCESS, NEWS_LOADING,\r\n  GET_NEWS_DETAILS,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  news: [],\r\n  loading: false,\r\n  errors: {\r\n    news: null,\r\n    details: null,\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  details: {},\r\n}\r\n\r\nexport default function blogReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_NEWS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        news: action.news\r\n      }\r\n    case NEWS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status\r\n      }\r\n    case SET_NEWS_FAILURE:\r\n      return {\r\n        ...state,\r\n        errors: {\r\n          ...state.errors,\r\n          ...action.errors\r\n        }\r\n      }\r\n    case GET_NEWS_DETAILS:\r\n        return {\r\n          ...state,\r\n          details: action.details\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { ACCOUNTS_LOADING, GET_ACCOUNTS_DETAILS, GET_ACCOUNTS_FAILURE, GET_ACCOUNTS_SUCCESS } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  accounts: [],\r\n  loading: false,\r\n  errors: {\r\n    accounts: null,\r\n    details: null,\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  details: {},\r\n}\r\n\r\nexport default function accountReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ACCOUNTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        accounts: action.accounts\r\n      }\r\n    case ACCOUNTS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status\r\n      }\r\n    case GET_ACCOUNTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        errors: {\r\n          ...state.errors,\r\n          ...action.errors\r\n        }\r\n      }\r\n      case GET_ACCOUNTS_DETAILS:\r\n        return {\r\n          ...state,\r\n          details: action.details\r\n        }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { SET_PARTNERS, SET_PARTNER_DETAILS, PARTNERS_LOADING, PARTNERS_FAILURE, PARTNERS_SUCCESS } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  partners: [],\r\n  loading: false,\r\n  details: {\r\n    uuid: '',\r\n    inn: '',\r\n    name: ''\r\n  },\r\n  errors: {\r\n    partners: null,\r\n    details: null,\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  success: {\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  filter: {\r\n    inn: '',\r\n    limit: 100,\r\n    name: '',\r\n    offset: 0,\r\n    sort_by: [],\r\n    uuid: ''\r\n  }\r\n}\r\n\r\nexport default function partnerReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n\r\n    case PARTNERS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status\r\n      }\r\n\r\n    case SET_PARTNERS:\r\n      return {\r\n        ...state,\r\n        partners: action.partners\r\n      }\r\n\r\n    case SET_PARTNER_DETAILS:\r\n      return {\r\n        ...state,\r\n        details: action.details\r\n      }\r\n  \r\n      case PARTNERS_FAILURE:\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            ...state.errors,\r\n            ...action.errors\r\n          }\r\n        }\r\n\r\n      case PARTNERS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          success: {\r\n            ...state.success,\r\n            ...action.message\r\n          }\r\n        }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { ACQUIRERS_FAILURE, ACQUIRERS_LOADING, ACQUIRERS_SUCCESS, SET_ACQUIRERS, \r\n  SET_ACQUIRER_DETAILS, \r\n} from \"../actions/actionTypes\";\r\n\r\n\r\nconst initialState = {\r\n  acquirers: [],\r\n  loading: false,\r\n  details: {\r\n    uuid: '',\r\n    active: true,\r\n    alias: '',\r\n    name: '',\r\n  },\r\n  errors: {\r\n    acquirers: null,\r\n    details: null,\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  success: {\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  filter: {\r\n    limit: 100,\r\n    name: '',\r\n    offset: 0,\r\n    sort_by: [],\r\n    uuid: '',\r\n    active: true,\r\n    alias: '',\r\n  }\r\n}\r\n\r\nexport default function acquirerReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ACQUIRERS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status,\r\n      };\r\n    case ACQUIRERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: {\r\n          ...state.success,\r\n          ...action.message,\r\n        },\r\n      };\r\n    case ACQUIRERS_FAILURE:\r\n      return {\r\n        ...state,\r\n        errors: {\r\n          ...state.errors,\r\n          ...action.errors,\r\n        },\r\n      };\r\n    case SET_ACQUIRER_DETAILS:\r\n      return {\r\n        ...state,\r\n        details: action.details,\r\n      };\r\n    case SET_ACQUIRERS:\r\n      return {\r\n        ...state,\r\n        acquirers: action.acquirers,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_SHOPS, SET_SHOP_DETAILS, SHOPS_FAILURE, SHOPS_LOADING, SHOPS_SUCCESS } from \"../actions/actionTypes\";\r\n\r\n\r\nconst initialState = {\r\n  shops: [],\r\n  loading: false,\r\n  details: {\r\n    uuid: '',\r\n    partner_uuid: '',\r\n    name: '',\r\n  },\r\n  errors: {\r\n    shops: null,\r\n    details: null,\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  success: {\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  filter: {\r\n    limit: 100,\r\n    name: '',\r\n    offset: 0,\r\n    sort_by: [],\r\n    uuid: '',\r\n    partner_uuid: '',\r\n  }\r\n}\r\n\r\nexport default function shopReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SHOPS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status,\r\n      };\r\n    case SHOPS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: {\r\n          ...state.success,\r\n          ...action.message,\r\n        },\r\n      };\r\n    case SHOPS_FAILURE:\r\n      return {\r\n        ...state,\r\n        errors: {\r\n          ...state.errors,\r\n          ...action.errors,\r\n        },\r\n      };\r\n    case SET_SHOP_DETAILS:\r\n      return {\r\n        ...state,\r\n        details: action.details,\r\n      };\r\n    case SET_SHOPS:\r\n      return {\r\n        ...state,\r\n        shops: action.shops,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_TERMINALS, SET_TERMINAL_DETAILS, TERMINALS_FAILURE, TERMINALS_LOADING, TERMINALS_SUCCESS } from \"../actions/actionTypes\";\r\n\r\n\r\nconst initialState = {\r\n  terminals: [],\r\n  loading: false,\r\n  details: {\r\n    uuid: '',\r\n    acquirer_uuid: '',\r\n    name: '',\r\n    config: {},\r\n    currency_num: '',\r\n    config_id: '',\r\n    operations: [],\r\n    store_uuid: ''\r\n  },\r\n  errors: {\r\n    terminals: null,\r\n    details: null,\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  success: {\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  filter: {\r\n    limit: 100,\r\n    name: '',\r\n    offset: 0,\r\n    sort_by: [],\r\n    uuid: '',\r\n  }\r\n}\r\n\r\nexport default function terminalReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case TERMINALS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status,\r\n      };\r\n    case TERMINALS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: {\r\n          ...state.success,\r\n          ...action.message,\r\n        },\r\n      };\r\n    case TERMINALS_FAILURE:\r\n      return {\r\n        ...state,\r\n        errors: {\r\n          ...state.errors,\r\n          ...action.errors,\r\n        },\r\n      };\r\n    case SET_TERMINAL_DETAILS:\r\n      return {\r\n        ...state,\r\n        details: action.details,\r\n      };\r\n    case SET_TERMINALS:\r\n      return {\r\n        ...state,\r\n        terminals: action.terminals,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_PARTNER_ACQUIRERS, SET_PARTNER_ACQUIRER_DETAILS, PARTNER_ACQUIRERS_LOADING, PARTNER_ACQUIRERS_FAILURE, PARTNER_ACQUIRERS_SUCCESS } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  partnerAcquirers: [],\r\n  loading: false,\r\n  details: {\r\n    uuid: '',\r\n    acquirer_uuid: '',\r\n    active: '',\r\n    card_brands: [],\r\n    partner_uuid: '',\r\n    priority: '',\r\n  },\r\n  errors: {\r\n    partnerAcquirers: null,\r\n    details: null,\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  success: {\r\n    update: null,\r\n    delete: null,\r\n    create: null,\r\n  },\r\n  filter: {\r\n    limit: 100,\r\n    offset: 0,\r\n    sort_by: [],\r\n    uuid: ''\r\n  }\r\n}\r\n\r\nexport default function partnerAcquirerReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n\r\n    case PARTNER_ACQUIRERS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.status\r\n      }\r\n\r\n    case SET_PARTNER_ACQUIRERS:\r\n      return {\r\n        ...state,\r\n        partnerAcquirers: action.partnerAcquirers\r\n      }\r\n\r\n    case SET_PARTNER_ACQUIRER_DETAILS:\r\n      return {\r\n        ...state,\r\n        details: action.details\r\n      }\r\n  \r\n      case PARTNER_ACQUIRERS_FAILURE:\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            ...state.errors,\r\n            ...action.errors\r\n          }\r\n        }\r\n\r\n      case PARTNER_ACQUIRERS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          success: {\r\n            ...state.success,\r\n            ...action.message\r\n          }\r\n        }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import {combineReducers} from 'redux'\r\nimport layoutReducer from './layoutReducer'\r\nimport loginReducer from './loginReducer'\r\nimport blogReducer from './blogReducer'\r\nimport accountReducer from './accountReducer'\r\nimport partnerReducer from './partnerReducer'\r\nimport acquirerReducer from './acquirerReducer'\r\nimport shopReducer from './shopReducer'\r\nimport terminalReducer from './terminalReducer'\r\nimport partnerAcquirerReducer from './partnerAcquirersReducer'\r\n\r\nexport default combineReducers({\r\n    layout: layoutReducer,\r\n    login: loginReducer,\r\n    blog: blogReducer,\r\n    accounts: accountReducer,\r\n    partners: partnerReducer,\r\n    acquirers: acquirerReducer,\r\n    shops: shopReducer,\r\n    terminals: terminalReducer,\r\n    partnerAcquirers: partnerAcquirerReducer,\r\n\r\n\r\n})","import thunk from 'redux-thunk';\r\nimport {createStore, compose, applyMiddleware} from 'redux'\r\n\r\nimport rootReducer from './reducers/rootReducer'\r\n\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    }) : compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nexport default store;","import React from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport Layout from \"../../containers/Layout/Layout\";\r\nimport ErrorBoundary from \"../ErrorBoundary/ErrorBoundary\";\r\nimport store from \"../../redux/store\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Provider store={store}>\r\n       {/*  \"homepage\": \"https://gennady-bars.github.io/vepay-admin/\", */}\r\n        <BrowserRouter basename='/vepay-admin'>\r\n        {/* <BrowserRouter> */}\r\n          <ErrorBoundary>\r\n            <Layout />\r\n          </ErrorBoundary>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}